// source: librarian/v0/user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var librarian_v0_base_pb = require('../../librarian/v0/base_pb.js');
goog.object.extend(proto, librarian_v0_base_pb);
goog.exportSymbol('proto.librarian.CreateUserReq', null, global);
goog.exportSymbol('proto.librarian.CreateUserResp', null, global);
goog.exportSymbol('proto.librarian.DeleteUserReq', null, global);
goog.exportSymbol('proto.librarian.DeleteUserResp', null, global);
goog.exportSymbol('proto.librarian.ListUserReq', null, global);
goog.exportSymbol('proto.librarian.ListUserResp', null, global);
goog.exportSymbol('proto.librarian.UpdateUserReq', null, global);
goog.exportSymbol('proto.librarian.UpdateUserResp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.CreateUserReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.CreateUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.CreateUserReq.displayName = 'proto.librarian.CreateUserReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.CreateUserResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.CreateUserResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.CreateUserResp.displayName = 'proto.librarian.CreateUserResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.UpdateUserReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.UpdateUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.UpdateUserReq.displayName = 'proto.librarian.UpdateUserReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.UpdateUserResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.UpdateUserResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.UpdateUserResp.displayName = 'proto.librarian.UpdateUserResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.ListUserReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.ListUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.ListUserReq.displayName = 'proto.librarian.ListUserReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.ListUserResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.ListUserResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.ListUserResp.displayName = 'proto.librarian.ListUserResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.DeleteUserReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.DeleteUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.DeleteUserReq.displayName = 'proto.librarian.DeleteUserReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.DeleteUserResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.DeleteUserResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.DeleteUserResp.displayName = 'proto.librarian.DeleteUserResp';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.CreateUserReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.CreateUserReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.CreateUserReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateUserReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.CreateUserReq}
 */
proto.librarian.CreateUserReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.CreateUserReq;
  return proto.librarian.CreateUserReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.CreateUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.CreateUserReq}
 */
proto.librarian.CreateUserReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.CreateUserReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.CreateUserReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.CreateUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateUserReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.CreateUserReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.CreateUserReq} returns this
*/
proto.librarian.CreateUserReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.CreateUserReq} returns this
 */
proto.librarian.CreateUserReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.CreateUserReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.CreateUserResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.CreateUserResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.CreateUserResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateUserResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.CreateUserResp}
 */
proto.librarian.CreateUserResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.CreateUserResp;
  return proto.librarian.CreateUserResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.CreateUserResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.CreateUserResp}
 */
proto.librarian.CreateUserResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.CreateUserResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.CreateUserResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.CreateUserResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateUserResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.CreateUserResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.CreateUserResp} returns this
*/
proto.librarian.CreateUserResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.CreateUserResp} returns this
 */
proto.librarian.CreateUserResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.CreateUserResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.UpdateUserReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.UpdateUserReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.UpdateUserReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateUserReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.UpdateUserReq}
 */
proto.librarian.UpdateUserReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.UpdateUserReq;
  return proto.librarian.UpdateUserReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.UpdateUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.UpdateUserReq}
 */
proto.librarian.UpdateUserReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.UpdateUserReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.UpdateUserReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.UpdateUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateUserReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.UpdateUserReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.UpdateUserReq} returns this
*/
proto.librarian.UpdateUserReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.UpdateUserReq} returns this
 */
proto.librarian.UpdateUserReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.UpdateUserReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.UpdateUserResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.UpdateUserResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.UpdateUserResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateUserResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.UpdateUserResp}
 */
proto.librarian.UpdateUserResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.UpdateUserResp;
  return proto.librarian.UpdateUserResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.UpdateUserResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.UpdateUserResp}
 */
proto.librarian.UpdateUserResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.UpdateUserResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.UpdateUserResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.UpdateUserResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateUserResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.UpdateUserResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.UpdateUserResp} returns this
*/
proto.librarian.UpdateUserResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.UpdateUserResp} returns this
 */
proto.librarian.UpdateUserResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.UpdateUserResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.ListUserReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.ListUserReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.ListUserReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListUserReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.ListUserReq}
 */
proto.librarian.ListUserReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.ListUserReq;
  return proto.librarian.ListUserReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.ListUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.ListUserReq}
 */
proto.librarian.ListUserReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.ListUserReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.ListUserReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.ListUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListUserReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.ListUserReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.ListUserReq} returns this
*/
proto.librarian.ListUserReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.ListUserReq} returns this
 */
proto.librarian.ListUserReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListUserReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.ListUserResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.ListUserResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.ListUserResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListUserResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.ListUserResp}
 */
proto.librarian.ListUserResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.ListUserResp;
  return proto.librarian.ListUserResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.ListUserResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.ListUserResp}
 */
proto.librarian.ListUserResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.ListUserResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.ListUserResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.ListUserResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListUserResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.ListUserResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.ListUserResp} returns this
*/
proto.librarian.ListUserResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.ListUserResp} returns this
 */
proto.librarian.ListUserResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListUserResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.DeleteUserReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.DeleteUserReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.DeleteUserReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteUserReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.DeleteUserReq}
 */
proto.librarian.DeleteUserReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.DeleteUserReq;
  return proto.librarian.DeleteUserReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.DeleteUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.DeleteUserReq}
 */
proto.librarian.DeleteUserReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.DeleteUserReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.DeleteUserReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.DeleteUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteUserReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.DeleteUserReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.DeleteUserReq} returns this
*/
proto.librarian.DeleteUserReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.DeleteUserReq} returns this
 */
proto.librarian.DeleteUserReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.DeleteUserReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.DeleteUserResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.DeleteUserResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.DeleteUserResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteUserResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.DeleteUserResp}
 */
proto.librarian.DeleteUserResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.DeleteUserResp;
  return proto.librarian.DeleteUserResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.DeleteUserResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.DeleteUserResp}
 */
proto.librarian.DeleteUserResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.DeleteUserResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.DeleteUserResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.DeleteUserResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteUserResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.DeleteUserResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.DeleteUserResp} returns this
*/
proto.librarian.DeleteUserResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.DeleteUserResp} returns this
 */
proto.librarian.DeleteUserResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.DeleteUserResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};


goog.object.extend(exports, proto.librarian);
