// source: librarian/v0/sentinel.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var librarian_v0_base_pb = require('../../librarian/v0/base_pb.js');
goog.object.extend(proto, librarian_v0_base_pb);
goog.exportSymbol('proto.librarian.CreateSentinelReq', null, global);
goog.exportSymbol('proto.librarian.CreateSentinelResp', null, global);
goog.exportSymbol('proto.librarian.DeleteSentinelReq', null, global);
goog.exportSymbol('proto.librarian.DeleteSentinelResp', null, global);
goog.exportSymbol('proto.librarian.ListSentinelReportReq', null, global);
goog.exportSymbol('proto.librarian.ListSentinelReportResp', null, global);
goog.exportSymbol('proto.librarian.ListSentinelReq', null, global);
goog.exportSymbol('proto.librarian.ListSentinelResp', null, global);
goog.exportSymbol('proto.librarian.SentinelInfo', null, global);
goog.exportSymbol('proto.librarian.SentinelReportInfo', null, global);
goog.exportSymbol('proto.librarian.UpdateSentinelReq', null, global);
goog.exportSymbol('proto.librarian.UpdateSentinelResp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.CreateSentinelReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.CreateSentinelReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.CreateSentinelReq.displayName = 'proto.librarian.CreateSentinelReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.CreateSentinelResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.CreateSentinelResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.CreateSentinelResp.displayName = 'proto.librarian.CreateSentinelResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.UpdateSentinelReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.UpdateSentinelReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.UpdateSentinelReq.displayName = 'proto.librarian.UpdateSentinelReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.UpdateSentinelResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.UpdateSentinelResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.UpdateSentinelResp.displayName = 'proto.librarian.UpdateSentinelResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.ListSentinelReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.librarian.ListSentinelReq.repeatedFields_, null);
};
goog.inherits(proto.librarian.ListSentinelReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.ListSentinelReq.displayName = 'proto.librarian.ListSentinelReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.ListSentinelResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.librarian.ListSentinelResp.repeatedFields_, null);
};
goog.inherits(proto.librarian.ListSentinelResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.ListSentinelResp.displayName = 'proto.librarian.ListSentinelResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.DeleteSentinelReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.DeleteSentinelReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.DeleteSentinelReq.displayName = 'proto.librarian.DeleteSentinelReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.DeleteSentinelResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.librarian.DeleteSentinelResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.DeleteSentinelResp.displayName = 'proto.librarian.DeleteSentinelResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.SentinelInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.SentinelInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.SentinelInfo.displayName = 'proto.librarian.SentinelInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.ListSentinelReportReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.librarian.ListSentinelReportReq.repeatedFields_, null);
};
goog.inherits(proto.librarian.ListSentinelReportReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.ListSentinelReportReq.displayName = 'proto.librarian.ListSentinelReportReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.ListSentinelReportResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.librarian.ListSentinelReportResp.repeatedFields_, null);
};
goog.inherits(proto.librarian.ListSentinelReportResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.ListSentinelReportResp.displayName = 'proto.librarian.ListSentinelReportResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.SentinelReportInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.SentinelReportInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.SentinelReportInfo.displayName = 'proto.librarian.SentinelReportInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.CreateSentinelReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.CreateSentinelReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.CreateSentinelReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateSentinelReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    comment: jspb.Message.getFieldWithDefault(msg, 1, ""),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.CreateSentinelReq}
 */
proto.librarian.CreateSentinelReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.CreateSentinelReq;
  return proto.librarian.CreateSentinelReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.CreateSentinelReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.CreateSentinelReq}
 */
proto.librarian.CreateSentinelReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.CreateSentinelReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.CreateSentinelReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.CreateSentinelReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateSentinelReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Comment = 1;
 * @return {string}
 */
proto.librarian.CreateSentinelReq.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.CreateSentinelReq} returns this
 */
proto.librarian.CreateSentinelReq.prototype.setComment = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.CreateSentinelReq} returns this
 */
proto.librarian.CreateSentinelReq.prototype.clearComment = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.CreateSentinelReq.prototype.hasComment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.CreateSentinelReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.CreateSentinelReq} returns this
*/
proto.librarian.CreateSentinelReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.CreateSentinelReq} returns this
 */
proto.librarian.CreateSentinelReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.CreateSentinelReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.CreateSentinelResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.CreateSentinelResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.CreateSentinelResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateSentinelResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.librarian.SentinelInfo.toObject(includeInstance, f),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.CreateSentinelResp}
 */
proto.librarian.CreateSentinelResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.CreateSentinelResp;
  return proto.librarian.CreateSentinelResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.CreateSentinelResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.CreateSentinelResp}
 */
proto.librarian.CreateSentinelResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.SentinelInfo;
      reader.readMessage(value,proto.librarian.SentinelInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.CreateSentinelResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.CreateSentinelResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.CreateSentinelResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.CreateSentinelResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.librarian.SentinelInfo.serializeBinaryToWriter
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional SentinelInfo Info = 1;
 * @return {?proto.librarian.SentinelInfo}
 */
proto.librarian.CreateSentinelResp.prototype.getInfo = function() {
  return /** @type{?proto.librarian.SentinelInfo} */ (
    jspb.Message.getWrapperField(this, proto.librarian.SentinelInfo, 1));
};


/**
 * @param {?proto.librarian.SentinelInfo|undefined} value
 * @return {!proto.librarian.CreateSentinelResp} returns this
*/
proto.librarian.CreateSentinelResp.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.CreateSentinelResp} returns this
 */
proto.librarian.CreateSentinelResp.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.CreateSentinelResp.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.CreateSentinelResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.CreateSentinelResp} returns this
*/
proto.librarian.CreateSentinelResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.CreateSentinelResp} returns this
 */
proto.librarian.CreateSentinelResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.CreateSentinelResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.UpdateSentinelReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.UpdateSentinelReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.UpdateSentinelReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateSentinelReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.UpdateSentinelReq}
 */
proto.librarian.UpdateSentinelReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.UpdateSentinelReq;
  return proto.librarian.UpdateSentinelReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.UpdateSentinelReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.UpdateSentinelReq}
 */
proto.librarian.UpdateSentinelReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.UpdateSentinelReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.UpdateSentinelReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.UpdateSentinelReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateSentinelReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 Id = 1;
 * @return {number}
 */
proto.librarian.UpdateSentinelReq.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.UpdateSentinelReq} returns this
 */
proto.librarian.UpdateSentinelReq.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Comment = 2;
 * @return {string}
 */
proto.librarian.UpdateSentinelReq.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.UpdateSentinelReq} returns this
 */
proto.librarian.UpdateSentinelReq.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 Status = 3;
 * @return {number}
 */
proto.librarian.UpdateSentinelReq.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.UpdateSentinelReq} returns this
 */
proto.librarian.UpdateSentinelReq.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.UpdateSentinelReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.UpdateSentinelReq} returns this
*/
proto.librarian.UpdateSentinelReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.UpdateSentinelReq} returns this
 */
proto.librarian.UpdateSentinelReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.UpdateSentinelReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.UpdateSentinelResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.UpdateSentinelResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.UpdateSentinelResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateSentinelResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.librarian.SentinelInfo.toObject(includeInstance, f),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.UpdateSentinelResp}
 */
proto.librarian.UpdateSentinelResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.UpdateSentinelResp;
  return proto.librarian.UpdateSentinelResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.UpdateSentinelResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.UpdateSentinelResp}
 */
proto.librarian.UpdateSentinelResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.SentinelInfo;
      reader.readMessage(value,proto.librarian.SentinelInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.UpdateSentinelResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.UpdateSentinelResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.UpdateSentinelResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.UpdateSentinelResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.librarian.SentinelInfo.serializeBinaryToWriter
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional SentinelInfo Info = 1;
 * @return {?proto.librarian.SentinelInfo}
 */
proto.librarian.UpdateSentinelResp.prototype.getInfo = function() {
  return /** @type{?proto.librarian.SentinelInfo} */ (
    jspb.Message.getWrapperField(this, proto.librarian.SentinelInfo, 1));
};


/**
 * @param {?proto.librarian.SentinelInfo|undefined} value
 * @return {!proto.librarian.UpdateSentinelResp} returns this
*/
proto.librarian.UpdateSentinelResp.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.UpdateSentinelResp} returns this
 */
proto.librarian.UpdateSentinelResp.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.UpdateSentinelResp.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.UpdateSentinelResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.UpdateSentinelResp} returns this
*/
proto.librarian.UpdateSentinelResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.UpdateSentinelResp} returns this
 */
proto.librarian.UpdateSentinelResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.UpdateSentinelResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.ListSentinelReq.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.ListSentinelReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.ListSentinelReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.ListSentinelReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokenList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    comment: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statusList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    pagenum: jspb.Message.getFieldWithDefault(msg, 10, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.ListSentinelReq}
 */
proto.librarian.ListSentinelReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.ListSentinelReq;
  return proto.librarian.ListSentinelReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.ListSentinelReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.ListSentinelReq}
 */
proto.librarian.ListSentinelReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.ListSentinelReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.ListSentinelReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.ListSentinelReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string Token = 1;
 * @return {!Array<string>}
 */
proto.librarian.ListSentinelReq.prototype.getTokenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.setTokenList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.addToken = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.clearTokenList = function() {
  return this.setTokenList([]);
};


/**
 * optional string Comment = 2;
 * @return {string}
 */
proto.librarian.ListSentinelReq.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.setComment = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.clearComment = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReq.prototype.hasComment = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated int32 Status = 3;
 * @return {!Array<number>}
 */
proto.librarian.ListSentinelReq.prototype.getStatusList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional int32 PageNum = 10;
 * @return {number}
 */
proto.librarian.ListSentinelReq.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.setPagenum = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.clearPagenum = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReq.prototype.hasPagenum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 PageSize = 11;
 * @return {number}
 */
proto.librarian.ListSentinelReq.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.setPagesize = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.clearPagesize = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReq.prototype.hasPagesize = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.ListSentinelReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.ListSentinelReq} returns this
*/
proto.librarian.ListSentinelReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.ListSentinelReq} returns this
 */
proto.librarian.ListSentinelReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.ListSentinelResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.ListSentinelResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.ListSentinelResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.ListSentinelResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosList: jspb.Message.toObjectList(msg.getInfosList(),
    proto.librarian.SentinelInfo.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 10, 0),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.ListSentinelResp}
 */
proto.librarian.ListSentinelResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.ListSentinelResp;
  return proto.librarian.ListSentinelResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.ListSentinelResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.ListSentinelResp}
 */
proto.librarian.ListSentinelResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.SentinelInfo;
      reader.readMessage(value,proto.librarian.SentinelInfo.deserializeBinaryFromReader);
      msg.addInfos(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.ListSentinelResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.ListSentinelResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.ListSentinelResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.SentinelInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SentinelInfo Infos = 1;
 * @return {!Array<!proto.librarian.SentinelInfo>}
 */
proto.librarian.ListSentinelResp.prototype.getInfosList = function() {
  return /** @type{!Array<!proto.librarian.SentinelInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.SentinelInfo, 1));
};


/**
 * @param {!Array<!proto.librarian.SentinelInfo>} value
 * @return {!proto.librarian.ListSentinelResp} returns this
*/
proto.librarian.ListSentinelResp.prototype.setInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.SentinelInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.SentinelInfo}
 */
proto.librarian.ListSentinelResp.prototype.addInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.SentinelInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelResp} returns this
 */
proto.librarian.ListSentinelResp.prototype.clearInfosList = function() {
  return this.setInfosList([]);
};


/**
 * optional int64 Total = 10;
 * @return {number}
 */
proto.librarian.ListSentinelResp.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.ListSentinelResp} returns this
 */
proto.librarian.ListSentinelResp.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.ListSentinelResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.ListSentinelResp} returns this
*/
proto.librarian.ListSentinelResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.ListSentinelResp} returns this
 */
proto.librarian.ListSentinelResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.DeleteSentinelReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.DeleteSentinelReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.DeleteSentinelReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteSentinelReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.DeleteSentinelReq}
 */
proto.librarian.DeleteSentinelReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.DeleteSentinelReq;
  return proto.librarian.DeleteSentinelReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.DeleteSentinelReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.DeleteSentinelReq}
 */
proto.librarian.DeleteSentinelReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.DeleteSentinelReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.DeleteSentinelReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.DeleteSentinelReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteSentinelReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 Id = 1;
 * @return {number}
 */
proto.librarian.DeleteSentinelReq.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.DeleteSentinelReq} returns this
 */
proto.librarian.DeleteSentinelReq.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.DeleteSentinelReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.DeleteSentinelReq} returns this
*/
proto.librarian.DeleteSentinelReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.DeleteSentinelReq} returns this
 */
proto.librarian.DeleteSentinelReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.DeleteSentinelReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.DeleteSentinelResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.DeleteSentinelResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.DeleteSentinelResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteSentinelResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.DeleteSentinelResp}
 */
proto.librarian.DeleteSentinelResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.DeleteSentinelResp;
  return proto.librarian.DeleteSentinelResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.DeleteSentinelResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.DeleteSentinelResp}
 */
proto.librarian.DeleteSentinelResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.DeleteSentinelResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.DeleteSentinelResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.DeleteSentinelResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.DeleteSentinelResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.DeleteSentinelResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.DeleteSentinelResp} returns this
*/
proto.librarian.DeleteSentinelResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.DeleteSentinelResp} returns this
 */
proto.librarian.DeleteSentinelResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.DeleteSentinelResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.SentinelInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.SentinelInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.SentinelInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.SentinelInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    token: jspb.Message.getFieldWithDefault(msg, 2, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.SentinelInfo}
 */
proto.librarian.SentinelInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.SentinelInfo;
  return proto.librarian.SentinelInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.SentinelInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.SentinelInfo}
 */
proto.librarian.SentinelInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.SentinelInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.SentinelInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.SentinelInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.SentinelInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 Id = 1;
 * @return {number}
 */
proto.librarian.SentinelInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.SentinelInfo} returns this
 */
proto.librarian.SentinelInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Token = 2;
 * @return {string}
 */
proto.librarian.SentinelInfo.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.SentinelInfo} returns this
 */
proto.librarian.SentinelInfo.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Comment = 3;
 * @return {string}
 */
proto.librarian.SentinelInfo.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.SentinelInfo} returns this
 */
proto.librarian.SentinelInfo.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Status = 4;
 * @return {number}
 */
proto.librarian.SentinelInfo.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.SentinelInfo} returns this
 */
proto.librarian.SentinelInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.ListSentinelReportReq.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.ListSentinelReportReq.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.ListSentinelReportReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.ListSentinelReportReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelReportReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    sentinelidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    filenameList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    statusList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    pagenum: jspb.Message.getFieldWithDefault(msg, 10, 0),
    pagesize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseReq.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.ListSentinelReportReq}
 */
proto.librarian.ListSentinelReportReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.ListSentinelReportReq;
  return proto.librarian.ListSentinelReportReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.ListSentinelReportReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.ListSentinelReportReq}
 */
proto.librarian.ListSentinelReportReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSentinelid(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFilename(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseReq;
      reader.readMessage(value,librarian_v0_base_pb.BaseReq.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.ListSentinelReportReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.ListSentinelReportReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.ListSentinelReportReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelReportReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSentinelidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
  f = message.getFilenameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseReq.serializeBinaryToWriter
    );
  }
};


/**
 * repeated int64 SentinelId = 1;
 * @return {!Array<number>}
 */
proto.librarian.ListSentinelReportReq.prototype.getSentinelidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.setSentinelidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.addSentinelid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.clearSentinelidList = function() {
  return this.setSentinelidList([]);
};


/**
 * repeated string FileName = 2;
 * @return {!Array<string>}
 */
proto.librarian.ListSentinelReportReq.prototype.getFilenameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.setFilenameList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.addFilename = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.clearFilenameList = function() {
  return this.setFilenameList([]);
};


/**
 * repeated int32 Status = 3;
 * @return {!Array<number>}
 */
proto.librarian.ListSentinelReportReq.prototype.getStatusList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional int32 PageNum = 10;
 * @return {number}
 */
proto.librarian.ListSentinelReportReq.prototype.getPagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.setPagenum = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.clearPagenum = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReportReq.prototype.hasPagenum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 PageSize = 11;
 * @return {number}
 */
proto.librarian.ListSentinelReportReq.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.setPagesize = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.clearPagesize = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReportReq.prototype.hasPagesize = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional BaseReq Base = 2047;
 * @return {?proto.librarian.BaseReq}
 */
proto.librarian.ListSentinelReportReq.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseReq} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseReq, 2047));
};


/**
 * @param {?proto.librarian.BaseReq|undefined} value
 * @return {!proto.librarian.ListSentinelReportReq} returns this
*/
proto.librarian.ListSentinelReportReq.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.ListSentinelReportReq} returns this
 */
proto.librarian.ListSentinelReportReq.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReportReq.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.ListSentinelReportResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.ListSentinelReportResp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.ListSentinelReportResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.ListSentinelReportResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelReportResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosList: jspb.Message.toObjectList(msg.getInfosList(),
    proto.librarian.SentinelReportInfo.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 10, 0),
    base: (f = msg.getBase()) && librarian_v0_base_pb.BaseResp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.ListSentinelReportResp}
 */
proto.librarian.ListSentinelReportResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.ListSentinelReportResp;
  return proto.librarian.ListSentinelReportResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.ListSentinelReportResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.ListSentinelReportResp}
 */
proto.librarian.ListSentinelReportResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.SentinelReportInfo;
      reader.readMessage(value,proto.librarian.SentinelReportInfo.deserializeBinaryFromReader);
      msg.addInfos(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotal(value);
      break;
    case 2047:
      var value = new librarian_v0_base_pb.BaseResp;
      reader.readMessage(value,librarian_v0_base_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.ListSentinelReportResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.ListSentinelReportResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.ListSentinelReportResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.ListSentinelReportResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.SentinelReportInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      2047,
      f,
      librarian_v0_base_pb.BaseResp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SentinelReportInfo Infos = 1;
 * @return {!Array<!proto.librarian.SentinelReportInfo>}
 */
proto.librarian.ListSentinelReportResp.prototype.getInfosList = function() {
  return /** @type{!Array<!proto.librarian.SentinelReportInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.SentinelReportInfo, 1));
};


/**
 * @param {!Array<!proto.librarian.SentinelReportInfo>} value
 * @return {!proto.librarian.ListSentinelReportResp} returns this
*/
proto.librarian.ListSentinelReportResp.prototype.setInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.SentinelReportInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.SentinelReportInfo}
 */
proto.librarian.ListSentinelReportResp.prototype.addInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.SentinelReportInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.ListSentinelReportResp} returns this
 */
proto.librarian.ListSentinelReportResp.prototype.clearInfosList = function() {
  return this.setInfosList([]);
};


/**
 * optional int64 Total = 10;
 * @return {number}
 */
proto.librarian.ListSentinelReportResp.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.ListSentinelReportResp} returns this
 */
proto.librarian.ListSentinelReportResp.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional BaseResp Base = 2047;
 * @return {?proto.librarian.BaseResp}
 */
proto.librarian.ListSentinelReportResp.prototype.getBase = function() {
  return /** @type{?proto.librarian.BaseResp} */ (
    jspb.Message.getWrapperField(this, librarian_v0_base_pb.BaseResp, 2047));
};


/**
 * @param {?proto.librarian.BaseResp|undefined} value
 * @return {!proto.librarian.ListSentinelReportResp} returns this
*/
proto.librarian.ListSentinelReportResp.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 2047, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.ListSentinelReportResp} returns this
 */
proto.librarian.ListSentinelReportResp.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.ListSentinelReportResp.prototype.hasBase = function() {
  return jspb.Message.getField(this, 2047) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.SentinelReportInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.SentinelReportInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.SentinelReportInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.SentinelReportInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sentinelid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filesize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.SentinelReportInfo}
 */
proto.librarian.SentinelReportInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.SentinelReportInfo;
  return proto.librarian.SentinelReportInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.SentinelReportInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.SentinelReportInfo}
 */
proto.librarian.SentinelReportInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentinelid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFilesize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.SentinelReportInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.SentinelReportInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.SentinelReportInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.SentinelReportInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSentinelid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 Id = 1;
 * @return {number}
 */
proto.librarian.SentinelReportInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.SentinelReportInfo} returns this
 */
proto.librarian.SentinelReportInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 SentinelId = 2;
 * @return {number}
 */
proto.librarian.SentinelReportInfo.prototype.getSentinelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.SentinelReportInfo} returns this
 */
proto.librarian.SentinelReportInfo.prototype.setSentinelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string FileName = 3;
 * @return {string}
 */
proto.librarian.SentinelReportInfo.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.SentinelReportInfo} returns this
 */
proto.librarian.SentinelReportInfo.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 FileSize = 4;
 * @return {number}
 */
proto.librarian.SentinelReportInfo.prototype.getFilesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.SentinelReportInfo} returns this
 */
proto.librarian.SentinelReportInfo.prototype.setFilesize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.SentinelReportInfo} returns this
 */
proto.librarian.SentinelReportInfo.prototype.clearFilesize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.SentinelReportInfo.prototype.hasFilesize = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 Status = 5;
 * @return {number}
 */
proto.librarian.SentinelReportInfo.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.SentinelReportInfo} returns this
 */
proto.librarian.SentinelReportInfo.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


goog.object.extend(exports, proto.librarian);
