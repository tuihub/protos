// source: librarian/porter/v1/porter.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var librarian_v1_common_pb = require('../../../librarian/v1/common_pb.js');
goog.object.extend(proto, librarian_v1_common_pb);
goog.exportSymbol('proto.librarian.porter.v1.EnablePorterRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.EnablePorterResponse', null, global);
goog.exportSymbol('proto.librarian.porter.v1.GetPorterInformationRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.GetPorterInformationResponse', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PorterFeatureSummary', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PorterFeatureSummary.Account', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullAccountAppRelationRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullAccountAppRelationResponse', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullAccountRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullAccountResponse', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullAppRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullAppResponse', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullFeedRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PullFeedResponse', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PushFeedItemsRequest', null, global);
goog.exportSymbol('proto.librarian.porter.v1.PushFeedItemsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.GetPorterInformationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.GetPorterInformationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.GetPorterInformationRequest.displayName = 'proto.librarian.porter.v1.GetPorterInformationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.GetPorterInformationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.GetPorterInformationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.GetPorterInformationResponse.displayName = 'proto.librarian.porter.v1.GetPorterInformationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PorterFeatureSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.porter.v1.PorterFeatureSummary.repeatedFields_, null);
};
goog.inherits(proto.librarian.porter.v1.PorterFeatureSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PorterFeatureSummary.displayName = 'proto.librarian.porter.v1.PorterFeatureSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.porter.v1.PorterFeatureSummary.Account.repeatedFields_, null);
};
goog.inherits(proto.librarian.porter.v1.PorterFeatureSummary.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PorterFeatureSummary.Account.displayName = 'proto.librarian.porter.v1.PorterFeatureSummary.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.EnablePorterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.EnablePorterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.EnablePorterRequest.displayName = 'proto.librarian.porter.v1.EnablePorterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.EnablePorterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.EnablePorterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.EnablePorterResponse.displayName = 'proto.librarian.porter.v1.EnablePorterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullAccountRequest.displayName = 'proto.librarian.porter.v1.PullAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullAccountResponse.displayName = 'proto.librarian.porter.v1.PullAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullAppRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullAppRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullAppRequest.displayName = 'proto.librarian.porter.v1.PullAppRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullAppResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullAppResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullAppResponse.displayName = 'proto.librarian.porter.v1.PullAppResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullAccountAppRelationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullAccountAppRelationRequest.displayName = 'proto.librarian.porter.v1.PullAccountAppRelationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.porter.v1.PullAccountAppRelationResponse.repeatedFields_, null);
};
goog.inherits(proto.librarian.porter.v1.PullAccountAppRelationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullAccountAppRelationResponse.displayName = 'proto.librarian.porter.v1.PullAccountAppRelationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullFeedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullFeedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullFeedRequest.displayName = 'proto.librarian.porter.v1.PullFeedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PullFeedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PullFeedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PullFeedResponse.displayName = 'proto.librarian.porter.v1.PullFeedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PushFeedItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.porter.v1.PushFeedItemsRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.porter.v1.PushFeedItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PushFeedItemsRequest.displayName = 'proto.librarian.porter.v1.PushFeedItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.porter.v1.PushFeedItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.porter.v1.PushFeedItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.porter.v1.PushFeedItemsResponse.displayName = 'proto.librarian.porter.v1.PushFeedItemsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.GetPorterInformationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.GetPorterInformationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.GetPorterInformationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.GetPorterInformationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.GetPorterInformationRequest}
 */
proto.librarian.porter.v1.GetPorterInformationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.GetPorterInformationRequest;
  return proto.librarian.porter.v1.GetPorterInformationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.GetPorterInformationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.GetPorterInformationRequest}
 */
proto.librarian.porter.v1.GetPorterInformationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.GetPorterInformationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.GetPorterInformationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.GetPorterInformationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.GetPorterInformationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.GetPorterInformationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.GetPorterInformationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.GetPorterInformationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    globalName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    featureSummary: (f = msg.getFeatureSummary()) && proto.librarian.porter.v1.PorterFeatureSummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.GetPorterInformationResponse;
  return proto.librarian.porter.v1.GetPorterInformationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.GetPorterInformationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGlobalName(value);
      break;
    case 4:
      var value = new proto.librarian.porter.v1.PorterFeatureSummary;
      reader.readMessage(value,proto.librarian.porter.v1.PorterFeatureSummary.deserializeBinaryFromReader);
      msg.setFeatureSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.GetPorterInformationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.GetPorterInformationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.GetPorterInformationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGlobalName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFeatureSummary();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.librarian.porter.v1.PorterFeatureSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse} returns this
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse} returns this
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string global_name = 3;
 * @return {string}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.getGlobalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse} returns this
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.setGlobalName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PorterFeatureSummary feature_summary = 4;
 * @return {?proto.librarian.porter.v1.PorterFeatureSummary}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.getFeatureSummary = function() {
  return /** @type{?proto.librarian.porter.v1.PorterFeatureSummary} */ (
    jspb.Message.getWrapperField(this, proto.librarian.porter.v1.PorterFeatureSummary, 4));
};


/**
 * @param {?proto.librarian.porter.v1.PorterFeatureSummary|undefined} value
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse} returns this
*/
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.setFeatureSummary = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.GetPorterInformationResponse} returns this
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.clearFeatureSummary = function() {
  return this.setFeatureSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.GetPorterInformationResponse.prototype.hasFeatureSummary = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.porter.v1.PorterFeatureSummary.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PorterFeatureSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PorterFeatureSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    supportedAccountsList: jspb.Message.toObjectList(msg.getSupportedAccountsList(),
    proto.librarian.porter.v1.PorterFeatureSummary.Account.toObject, includeInstance),
    supportedAppSourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    supportedFeedSourcesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    supportedNotifyDestinationsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary}
 */
proto.librarian.porter.v1.PorterFeatureSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PorterFeatureSummary;
  return proto.librarian.porter.v1.PorterFeatureSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary}
 */
proto.librarian.porter.v1.PorterFeatureSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.porter.v1.PorterFeatureSummary.Account;
      reader.readMessage(value,proto.librarian.porter.v1.PorterFeatureSummary.Account.deserializeBinaryFromReader);
      msg.addSupportedAccounts(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSupportedAppSources(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSupportedFeedSources(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSupportedNotifyDestinations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PorterFeatureSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PorterFeatureSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSupportedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.porter.v1.PorterFeatureSummary.Account.serializeBinaryToWriter
    );
  }
  f = message.getSupportedAppSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSupportedFeedSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getSupportedNotifyDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PorterFeatureSummary.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    platform: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appRelationTypesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account}
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PorterFeatureSummary.Account;
  return proto.librarian.porter.v1.PorterFeatureSummary.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account}
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatform(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.librarian.v1.AccountAppRelationType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAppRelationTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PorterFeatureSummary.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppRelationTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional string platform = 1;
 * @return {string}
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.getPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated librarian.v1.AccountAppRelationType app_relation_types = 2;
 * @return {!Array<!proto.librarian.v1.AccountAppRelationType>}
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.getAppRelationTypesList = function() {
  return /** @type {!Array<!proto.librarian.v1.AccountAppRelationType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.librarian.v1.AccountAppRelationType>} value
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.setAppRelationTypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.librarian.v1.AccountAppRelationType} value
 * @param {number=} opt_index
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.addAppRelationTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.Account.prototype.clearAppRelationTypesList = function() {
  return this.setAppRelationTypesList([]);
};


/**
 * repeated Account supported_accounts = 1;
 * @return {!Array<!proto.librarian.porter.v1.PorterFeatureSummary.Account>}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.getSupportedAccountsList = function() {
  return /** @type{!Array<!proto.librarian.porter.v1.PorterFeatureSummary.Account>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.porter.v1.PorterFeatureSummary.Account, 1));
};


/**
 * @param {!Array<!proto.librarian.porter.v1.PorterFeatureSummary.Account>} value
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
*/
proto.librarian.porter.v1.PorterFeatureSummary.prototype.setSupportedAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.porter.v1.PorterFeatureSummary.Account=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary.Account}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.addSupportedAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.porter.v1.PorterFeatureSummary.Account, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.clearSupportedAccountsList = function() {
  return this.setSupportedAccountsList([]);
};


/**
 * repeated string supported_app_sources = 2;
 * @return {!Array<string>}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.getSupportedAppSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.setSupportedAppSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.addSupportedAppSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.clearSupportedAppSourcesList = function() {
  return this.setSupportedAppSourcesList([]);
};


/**
 * repeated string supported_feed_sources = 3;
 * @return {!Array<string>}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.getSupportedFeedSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.setSupportedFeedSourcesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.addSupportedFeedSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.clearSupportedFeedSourcesList = function() {
  return this.setSupportedFeedSourcesList([]);
};


/**
 * repeated string supported_notify_destinations = 4;
 * @return {!Array<string>}
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.getSupportedNotifyDestinationsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.setSupportedNotifyDestinationsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.addSupportedNotifyDestinations = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PorterFeatureSummary} returns this
 */
proto.librarian.porter.v1.PorterFeatureSummary.prototype.clearSupportedNotifyDestinationsList = function() {
  return this.setSupportedNotifyDestinationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.EnablePorterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.EnablePorterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.EnablePorterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.EnablePorterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sephirahId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    refreshToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.EnablePorterRequest}
 */
proto.librarian.porter.v1.EnablePorterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.EnablePorterRequest;
  return proto.librarian.porter.v1.EnablePorterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.EnablePorterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.EnablePorterRequest}
 */
proto.librarian.porter.v1.EnablePorterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSephirahId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.EnablePorterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.EnablePorterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.EnablePorterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.EnablePorterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSephirahId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRefreshToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 sephirah_id = 1;
 * @return {number}
 */
proto.librarian.porter.v1.EnablePorterRequest.prototype.getSephirahId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.porter.v1.EnablePorterRequest} returns this
 */
proto.librarian.porter.v1.EnablePorterRequest.prototype.setSephirahId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string refresh_token = 2;
 * @return {string}
 */
proto.librarian.porter.v1.EnablePorterRequest.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.EnablePorterRequest} returns this
 */
proto.librarian.porter.v1.EnablePorterRequest.prototype.setRefreshToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.EnablePorterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.EnablePorterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.EnablePorterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.EnablePorterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.EnablePorterResponse}
 */
proto.librarian.porter.v1.EnablePorterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.EnablePorterResponse;
  return proto.librarian.porter.v1.EnablePorterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.EnablePorterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.EnablePorterResponse}
 */
proto.librarian.porter.v1.EnablePorterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.EnablePorterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.EnablePorterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.EnablePorterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.EnablePorterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: (f = msg.getAccountId()) && librarian_v1_common_pb.AccountID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullAccountRequest}
 */
proto.librarian.porter.v1.PullAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullAccountRequest;
  return proto.librarian.porter.v1.PullAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullAccountRequest}
 */
proto.librarian.porter.v1.PullAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new librarian_v1_common_pb.AccountID;
      reader.readMessage(value,librarian_v1_common_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      librarian_v1_common_pb.AccountID.serializeBinaryToWriter
    );
  }
};


/**
 * optional librarian.v1.AccountID account_id = 1;
 * @return {?proto.librarian.v1.AccountID}
 */
proto.librarian.porter.v1.PullAccountRequest.prototype.getAccountId = function() {
  return /** @type{?proto.librarian.v1.AccountID} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.AccountID, 1));
};


/**
 * @param {?proto.librarian.v1.AccountID|undefined} value
 * @return {!proto.librarian.porter.v1.PullAccountRequest} returns this
*/
proto.librarian.porter.v1.PullAccountRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.PullAccountRequest} returns this
 */
proto.librarian.porter.v1.PullAccountRequest.prototype.clearAccountId = function() {
  return this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.PullAccountRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && librarian_v1_common_pb.Account.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullAccountResponse}
 */
proto.librarian.porter.v1.PullAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullAccountResponse;
  return proto.librarian.porter.v1.PullAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullAccountResponse}
 */
proto.librarian.porter.v1.PullAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new librarian_v1_common_pb.Account;
      reader.readMessage(value,librarian_v1_common_pb.Account.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      librarian_v1_common_pb.Account.serializeBinaryToWriter
    );
  }
};


/**
 * optional librarian.v1.Account account = 1;
 * @return {?proto.librarian.v1.Account}
 */
proto.librarian.porter.v1.PullAccountResponse.prototype.getAccount = function() {
  return /** @type{?proto.librarian.v1.Account} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.Account, 1));
};


/**
 * @param {?proto.librarian.v1.Account|undefined} value
 * @return {!proto.librarian.porter.v1.PullAccountResponse} returns this
*/
proto.librarian.porter.v1.PullAccountResponse.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.PullAccountResponse} returns this
 */
proto.librarian.porter.v1.PullAccountResponse.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.PullAccountResponse.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullAppRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullAppRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullAppRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAppRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: (f = msg.getAppId()) && librarian_v1_common_pb.AppID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullAppRequest}
 */
proto.librarian.porter.v1.PullAppRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullAppRequest;
  return proto.librarian.porter.v1.PullAppRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullAppRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullAppRequest}
 */
proto.librarian.porter.v1.PullAppRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new librarian_v1_common_pb.AppID;
      reader.readMessage(value,librarian_v1_common_pb.AppID.deserializeBinaryFromReader);
      msg.setAppId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullAppRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullAppRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullAppRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAppRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      librarian_v1_common_pb.AppID.serializeBinaryToWriter
    );
  }
};


/**
 * optional librarian.v1.AppID app_id = 1;
 * @return {?proto.librarian.v1.AppID}
 */
proto.librarian.porter.v1.PullAppRequest.prototype.getAppId = function() {
  return /** @type{?proto.librarian.v1.AppID} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.AppID, 1));
};


/**
 * @param {?proto.librarian.v1.AppID|undefined} value
 * @return {!proto.librarian.porter.v1.PullAppRequest} returns this
*/
proto.librarian.porter.v1.PullAppRequest.prototype.setAppId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.PullAppRequest} returns this
 */
proto.librarian.porter.v1.PullAppRequest.prototype.clearAppId = function() {
  return this.setAppId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.PullAppRequest.prototype.hasAppId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullAppResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullAppResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullAppResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAppResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: (f = msg.getApp()) && librarian_v1_common_pb.App.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullAppResponse}
 */
proto.librarian.porter.v1.PullAppResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullAppResponse;
  return proto.librarian.porter.v1.PullAppResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullAppResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullAppResponse}
 */
proto.librarian.porter.v1.PullAppResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new librarian_v1_common_pb.App;
      reader.readMessage(value,librarian_v1_common_pb.App.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullAppResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullAppResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullAppResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAppResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      librarian_v1_common_pb.App.serializeBinaryToWriter
    );
  }
};


/**
 * optional librarian.v1.App app = 1;
 * @return {?proto.librarian.v1.App}
 */
proto.librarian.porter.v1.PullAppResponse.prototype.getApp = function() {
  return /** @type{?proto.librarian.v1.App} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.App, 1));
};


/**
 * @param {?proto.librarian.v1.App|undefined} value
 * @return {!proto.librarian.porter.v1.PullAppResponse} returns this
*/
proto.librarian.porter.v1.PullAppResponse.prototype.setApp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.PullAppResponse} returns this
 */
proto.librarian.porter.v1.PullAppResponse.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.PullAppResponse.prototype.hasApp = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullAccountAppRelationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullAccountAppRelationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    relationType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: (f = msg.getAccountId()) && librarian_v1_common_pb.AccountID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationRequest}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullAccountAppRelationRequest;
  return proto.librarian.porter.v1.PullAccountAppRelationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullAccountAppRelationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationRequest}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.librarian.v1.AccountAppRelationType} */ (reader.readEnum());
      msg.setRelationType(value);
      break;
    case 2:
      var value = new librarian_v1_common_pb.AccountID;
      reader.readMessage(value,librarian_v1_common_pb.AccountID.deserializeBinaryFromReader);
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullAccountAppRelationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullAccountAppRelationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      librarian_v1_common_pb.AccountID.serializeBinaryToWriter
    );
  }
};


/**
 * optional librarian.v1.AccountAppRelationType relation_type = 1;
 * @return {!proto.librarian.v1.AccountAppRelationType}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.getRelationType = function() {
  return /** @type {!proto.librarian.v1.AccountAppRelationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.librarian.v1.AccountAppRelationType} value
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationRequest} returns this
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.setRelationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional librarian.v1.AccountID account_id = 2;
 * @return {?proto.librarian.v1.AccountID}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.getAccountId = function() {
  return /** @type{?proto.librarian.v1.AccountID} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.AccountID, 2));
};


/**
 * @param {?proto.librarian.v1.AccountID|undefined} value
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationRequest} returns this
*/
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationRequest} returns this
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.clearAccountId = function() {
  return this.setAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.PullAccountAppRelationRequest.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullAccountAppRelationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullAccountAppRelationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    appListList: jspb.Message.toObjectList(msg.getAppListList(),
    librarian_v1_common_pb.App.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationResponse}
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullAccountAppRelationResponse;
  return proto.librarian.porter.v1.PullAccountAppRelationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullAccountAppRelationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationResponse}
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new librarian_v1_common_pb.App;
      reader.readMessage(value,librarian_v1_common_pb.App.deserializeBinaryFromReader);
      msg.addAppList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullAccountAppRelationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullAccountAppRelationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      librarian_v1_common_pb.App.serializeBinaryToWriter
    );
  }
};


/**
 * repeated librarian.v1.App app_list = 1;
 * @return {!Array<!proto.librarian.v1.App>}
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.prototype.getAppListList = function() {
  return /** @type{!Array<!proto.librarian.v1.App>} */ (
    jspb.Message.getRepeatedWrapperField(this, librarian_v1_common_pb.App, 1));
};


/**
 * @param {!Array<!proto.librarian.v1.App>} value
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationResponse} returns this
*/
proto.librarian.porter.v1.PullAccountAppRelationResponse.prototype.setAppListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.v1.App=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.v1.App}
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.prototype.addAppList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.v1.App, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PullAccountAppRelationResponse} returns this
 */
proto.librarian.porter.v1.PullAccountAppRelationResponse.prototype.clearAppListList = function() {
  return this.setAppListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullFeedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullFeedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullFeedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullFeedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullFeedRequest}
 */
proto.librarian.porter.v1.PullFeedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullFeedRequest;
  return proto.librarian.porter.v1.PullFeedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullFeedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullFeedRequest}
 */
proto.librarian.porter.v1.PullFeedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullFeedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullFeedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullFeedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullFeedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string source = 1;
 * @return {string}
 */
proto.librarian.porter.v1.PullFeedRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.PullFeedRequest} returns this
 */
proto.librarian.porter.v1.PullFeedRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.librarian.porter.v1.PullFeedRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.PullFeedRequest} returns this
 */
proto.librarian.porter.v1.PullFeedRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PullFeedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PullFeedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PullFeedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullFeedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && librarian_v1_common_pb.Feed.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PullFeedResponse}
 */
proto.librarian.porter.v1.PullFeedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PullFeedResponse;
  return proto.librarian.porter.v1.PullFeedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PullFeedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PullFeedResponse}
 */
proto.librarian.porter.v1.PullFeedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new librarian_v1_common_pb.Feed;
      reader.readMessage(value,librarian_v1_common_pb.Feed.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PullFeedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PullFeedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PullFeedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PullFeedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      librarian_v1_common_pb.Feed.serializeBinaryToWriter
    );
  }
};


/**
 * optional librarian.v1.Feed data = 1;
 * @return {?proto.librarian.v1.Feed}
 */
proto.librarian.porter.v1.PullFeedResponse.prototype.getData = function() {
  return /** @type{?proto.librarian.v1.Feed} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.Feed, 1));
};


/**
 * @param {?proto.librarian.v1.Feed|undefined} value
 * @return {!proto.librarian.porter.v1.PullFeedResponse} returns this
*/
proto.librarian.porter.v1.PullFeedResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.porter.v1.PullFeedResponse} returns this
 */
proto.librarian.porter.v1.PullFeedResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.porter.v1.PullFeedResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.porter.v1.PushFeedItemsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PushFeedItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PushFeedItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PushFeedItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: jspb.Message.getFieldWithDefault(msg, 1, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    librarian_v1_common_pb.FeedItem.toObject, includeInstance),
    token: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PushFeedItemsRequest;
  return proto.librarian.porter.v1.PushFeedItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PushFeedItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 3:
      var value = new librarian_v1_common_pb.FeedItem;
      reader.readMessage(value,librarian_v1_common_pb.FeedItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PushFeedItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PushFeedItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PushFeedItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      librarian_v1_common_pb.FeedItem.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string destination = 1;
 * @return {string}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest} returns this
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string channel_id = 2;
 * @return {string}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest} returns this
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated librarian.v1.FeedItem items = 3;
 * @return {!Array<!proto.librarian.v1.FeedItem>}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.librarian.v1.FeedItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, librarian_v1_common_pb.FeedItem, 3));
};


/**
 * @param {!Array<!proto.librarian.v1.FeedItem>} value
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest} returns this
*/
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.librarian.v1.FeedItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.v1.FeedItem}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.librarian.v1.FeedItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest} returns this
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.porter.v1.PushFeedItemsRequest} returns this
 */
proto.librarian.porter.v1.PushFeedItemsRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.porter.v1.PushFeedItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.porter.v1.PushFeedItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.porter.v1.PushFeedItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PushFeedItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.porter.v1.PushFeedItemsResponse}
 */
proto.librarian.porter.v1.PushFeedItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.porter.v1.PushFeedItemsResponse;
  return proto.librarian.porter.v1.PushFeedItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.porter.v1.PushFeedItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.porter.v1.PushFeedItemsResponse}
 */
proto.librarian.porter.v1.PushFeedItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.porter.v1.PushFeedItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.porter.v1.PushFeedItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.porter.v1.PushFeedItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.porter.v1.PushFeedItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.librarian.porter.v1);
