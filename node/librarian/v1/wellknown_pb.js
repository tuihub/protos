// source: librarian/v1/wellknown.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
var librarian_v1_common_pb = require('../../librarian/v1/common_pb.js');
goog.object.extend(proto, librarian_v1_common_pb);
goog.exportSymbol('proto.librarian.v1.FeatureFlag', null, global);
goog.exportSymbol('proto.librarian.v1.FeatureRequest', null, global);
goog.exportSymbol('proto.librarian.v1.WellKnownAccountPlatform', null, global);
goog.exportSymbol('proto.librarian.v1.WellKnownAppInfoSource', null, global);
goog.exportSymbol('proto.librarian.v1.WellKnownFeedItemAction', null, global);
goog.exportSymbol('proto.librarian.v1.WellKnownFeedSource', null, global);
goog.exportSymbol('proto.librarian.v1.WellKnownNotifyDestination', null, global);
goog.exportSymbol('proto.librarian.v1.toString', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.v1.FeatureFlag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.v1.FeatureFlag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.v1.FeatureFlag.displayName = 'proto.librarian.v1.FeatureFlag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.v1.FeatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.v1.FeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.v1.FeatureRequest.displayName = 'proto.librarian.v1.FeatureRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.v1.FeatureFlag.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.v1.FeatureFlag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.v1.FeatureFlag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.v1.FeatureFlag.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
configJsonSchema: jspb.Message.getFieldWithDefault(msg, 4, ""),
requireContext: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.v1.FeatureFlag}
 */
proto.librarian.v1.FeatureFlag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.v1.FeatureFlag;
  return proto.librarian.v1.FeatureFlag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.v1.FeatureFlag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.v1.FeatureFlag}
 */
proto.librarian.v1.FeatureFlag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigJsonSchema(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequireContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.v1.FeatureFlag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.v1.FeatureFlag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.v1.FeatureFlag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.v1.FeatureFlag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConfigJsonSchema();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequireContext();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.librarian.v1.FeatureFlag.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureFlag} returns this
 */
proto.librarian.v1.FeatureFlag.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.librarian.v1.FeatureFlag.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureFlag} returns this
 */
proto.librarian.v1.FeatureFlag.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.librarian.v1.FeatureFlag.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureFlag} returns this
 */
proto.librarian.v1.FeatureFlag.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string config_json_schema = 4;
 * @return {string}
 */
proto.librarian.v1.FeatureFlag.prototype.getConfigJsonSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureFlag} returns this
 */
proto.librarian.v1.FeatureFlag.prototype.setConfigJsonSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool require_context = 5;
 * @return {boolean}
 */
proto.librarian.v1.FeatureFlag.prototype.getRequireContext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.librarian.v1.FeatureFlag} returns this
 */
proto.librarian.v1.FeatureFlag.prototype.setRequireContext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.v1.FeatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.v1.FeatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.v1.FeatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.v1.FeatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
region: jspb.Message.getFieldWithDefault(msg, 2, ""),
configJson: jspb.Message.getFieldWithDefault(msg, 3, ""),
contextId: (f = msg.getContextId()) && librarian_v1_common_pb.InternalID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.v1.FeatureRequest}
 */
proto.librarian.v1.FeatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.v1.FeatureRequest;
  return proto.librarian.v1.FeatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.v1.FeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.v1.FeatureRequest}
 */
proto.librarian.v1.FeatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigJson(value);
      break;
    case 4:
      var value = new librarian_v1_common_pb.InternalID;
      reader.readMessage(value,librarian_v1_common_pb.InternalID.deserializeBinaryFromReader);
      msg.setContextId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.v1.FeatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.v1.FeatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.v1.FeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.v1.FeatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConfigJson();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      librarian_v1_common_pb.InternalID.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.librarian.v1.FeatureRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureRequest} returns this
 */
proto.librarian.v1.FeatureRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region = 2;
 * @return {string}
 */
proto.librarian.v1.FeatureRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureRequest} returns this
 */
proto.librarian.v1.FeatureRequest.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string config_json = 3;
 * @return {string}
 */
proto.librarian.v1.FeatureRequest.prototype.getConfigJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.librarian.v1.FeatureRequest} returns this
 */
proto.librarian.v1.FeatureRequest.prototype.setConfigJson = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional InternalID context_id = 4;
 * @return {?proto.librarian.v1.InternalID}
 */
proto.librarian.v1.FeatureRequest.prototype.getContextId = function() {
  return /** @type{?proto.librarian.v1.InternalID} */ (
    jspb.Message.getWrapperField(this, librarian_v1_common_pb.InternalID, 4));
};


/**
 * @param {?proto.librarian.v1.InternalID|undefined} value
 * @return {!proto.librarian.v1.FeatureRequest} returns this
*/
proto.librarian.v1.FeatureRequest.prototype.setContextId = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.v1.FeatureRequest} returns this
 */
proto.librarian.v1.FeatureRequest.prototype.clearContextId = function() {
  return this.setContextId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.v1.FeatureRequest.prototype.hasContextId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.librarian.v1.WellKnownAccountPlatform = {
  WELL_KNOWN_ACCOUNT_PLATFORM_UNSPECIFIED: 0,
  WELL_KNOWN_ACCOUNT_PLATFORM_STEAM: 1
};

/**
 * @enum {number}
 */
proto.librarian.v1.WellKnownAppInfoSource = {
  WELL_KNOWN_APP_INFO_SOURCE_UNSPECIFIED: 0,
  WELL_KNOWN_APP_INFO_SOURCE_STEAM: 2,
  WELL_KNOWN_APP_INFO_SOURCE_VNDB: 3,
  WELL_KNOWN_APP_INFO_SOURCE_BANGUMI: 4
};

/**
 * @enum {number}
 */
proto.librarian.v1.WellKnownFeedSource = {
  WELL_KNOWN_FEED_SOURCE_UNSPECIFIED: 0,
  WELL_KNOWN_FEED_SOURCE_RSS: 1
};

/**
 * @enum {number}
 */
proto.librarian.v1.WellKnownNotifyDestination = {
  WELL_KNOWN_NOTIFY_DESTINATION_UNSPECIFIED: 0,
  WELL_KNOWN_NOTIFY_DESTINATION_TELEGRAM: 1
};

/**
 * @enum {number}
 */
proto.librarian.v1.WellKnownFeedItemAction = {
  WELL_KNOWN_FEED_ITEM_ACTION_UNSPECIFIED: 0,
  WELL_KNOWN_FEED_ITEM_ACTION_KEYWORD_FILTER: 1,
  WELL_KNOWN_FEED_ITEM_ACTION_DESCRIPTION_GENERATOR: 2
};


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `toString`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.librarian.v1.toString = new jspb.ExtensionFieldInfo(
    1000,
    {toString: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

google_protobuf_descriptor_pb.EnumValueOptions.extensionsBinary[1000] = new jspb.ExtensionFieldBinaryInfo(
    proto.librarian.v1.toString,
    jspb.BinaryReader.prototype.readString,
    jspb.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.EnumValueOptions.extensions[1000] = proto.librarian.v1.toString;

goog.object.extend(exports, proto.librarian.v1);
