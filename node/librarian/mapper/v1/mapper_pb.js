// source: librarian/mapper/v1/mapper.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.librarian.mapper.v1.DeleteEdgeRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.DeleteEdgeResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.DeleteVertexRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.DeleteVertexResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.Edge', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.EdgeCommonProp', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.EdgeDirection', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.EdgeProp', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.EdgeType', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FetchEqualVertexRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FetchEqualVertexResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FindPathRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FindPathResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.FindPathResponse.SinglePath', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.GoFromVertexRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.GoFromVertexResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.InsertEdgeRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.InsertEdgeResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.InsertVertexRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.InsertVertexResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.UpdateEdgeRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.UpdateEdgeResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.UpdateVertexRequest', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.UpdateVertexResponse', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.Vertex', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.VertexCommonProp', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.VertexProp', null, global);
goog.exportSymbol('proto.librarian.mapper.v1.VertexType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.InsertVertexRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.InsertVertexRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.InsertVertexRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.InsertVertexRequest.displayName = 'proto.librarian.mapper.v1.InsertVertexRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.InsertVertexResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.InsertVertexResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.InsertVertexResponse.displayName = 'proto.librarian.mapper.v1.InsertVertexResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.DeleteVertexRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.DeleteVertexRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.DeleteVertexRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.DeleteVertexRequest.displayName = 'proto.librarian.mapper.v1.DeleteVertexRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.DeleteVertexResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.DeleteVertexResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.DeleteVertexResponse.displayName = 'proto.librarian.mapper.v1.DeleteVertexResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.UpdateVertexRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.UpdateVertexRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.UpdateVertexRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.UpdateVertexRequest.displayName = 'proto.librarian.mapper.v1.UpdateVertexRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.UpdateVertexResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.UpdateVertexResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.UpdateVertexResponse.displayName = 'proto.librarian.mapper.v1.UpdateVertexResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.InsertEdgeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.InsertEdgeRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.InsertEdgeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.InsertEdgeRequest.displayName = 'proto.librarian.mapper.v1.InsertEdgeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.InsertEdgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.InsertEdgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.InsertEdgeResponse.displayName = 'proto.librarian.mapper.v1.InsertEdgeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.DeleteEdgeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.DeleteEdgeRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.DeleteEdgeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.DeleteEdgeRequest.displayName = 'proto.librarian.mapper.v1.DeleteEdgeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.DeleteEdgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.DeleteEdgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.DeleteEdgeResponse.displayName = 'proto.librarian.mapper.v1.DeleteEdgeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.UpdateEdgeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.UpdateEdgeRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.UpdateEdgeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.UpdateEdgeRequest.displayName = 'proto.librarian.mapper.v1.UpdateEdgeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.UpdateEdgeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.UpdateEdgeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.UpdateEdgeResponse.displayName = 'proto.librarian.mapper.v1.UpdateEdgeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.GoFromVertexRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.GoFromVertexRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.GoFromVertexRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.GoFromVertexRequest.displayName = 'proto.librarian.mapper.v1.GoFromVertexRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.GoFromVertexResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.GoFromVertexResponse.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.GoFromVertexResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.GoFromVertexResponse.displayName = 'proto.librarian.mapper.v1.GoFromVertexResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.FetchEqualVertexRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FetchEqualVertexRequest.displayName = 'proto.librarian.mapper.v1.FetchEqualVertexRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.FetchEqualVertexResponse.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.FetchEqualVertexResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FetchEqualVertexResponse.displayName = 'proto.librarian.mapper.v1.FetchEqualVertexResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.displayName = 'proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.displayName = 'proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FindPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.FindPathRequest.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.FindPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FindPathRequest.displayName = 'proto.librarian.mapper.v1.FindPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FindPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.FindPathResponse.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.FindPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FindPathResponse.displayName = 'proto.librarian.mapper.v1.FindPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.librarian.mapper.v1.FindPathResponse.SinglePath.repeatedFields_, null);
};
goog.inherits(proto.librarian.mapper.v1.FindPathResponse.SinglePath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.FindPathResponse.SinglePath.displayName = 'proto.librarian.mapper.v1.FindPathResponse.SinglePath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.Vertex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.Vertex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.Vertex.displayName = 'proto.librarian.mapper.v1.Vertex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.VertexProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.VertexProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.VertexProp.displayName = 'proto.librarian.mapper.v1.VertexProp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.VertexCommonProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.VertexCommonProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.VertexCommonProp.displayName = 'proto.librarian.mapper.v1.VertexCommonProp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.Edge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.Edge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.Edge.displayName = 'proto.librarian.mapper.v1.Edge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.EdgeProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.EdgeProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.EdgeProp.displayName = 'proto.librarian.mapper.v1.EdgeProp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.librarian.mapper.v1.EdgeCommonProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.librarian.mapper.v1.EdgeCommonProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.librarian.mapper.v1.EdgeCommonProp.displayName = 'proto.librarian.mapper.v1.EdgeCommonProp';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.InsertVertexRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.InsertVertexRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.InsertVertexRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.InsertVertexRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertVertexRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertexListList: jspb.Message.toObjectList(msg.getVertexListList(),
    proto.librarian.mapper.v1.Vertex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.InsertVertexRequest}
 */
proto.librarian.mapper.v1.InsertVertexRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.InsertVertexRequest;
  return proto.librarian.mapper.v1.InsertVertexRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.InsertVertexRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.InsertVertexRequest}
 */
proto.librarian.mapper.v1.InsertVertexRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.Vertex;
      reader.readMessage(value,proto.librarian.mapper.v1.Vertex.deserializeBinaryFromReader);
      msg.addVertexList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.InsertVertexRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.InsertVertexRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.InsertVertexRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertVertexRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertexListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.Vertex.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vertex vertex_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.Vertex>}
 */
proto.librarian.mapper.v1.InsertVertexRequest.prototype.getVertexListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Vertex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Vertex, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Vertex>} value
 * @return {!proto.librarian.mapper.v1.InsertVertexRequest} returns this
*/
proto.librarian.mapper.v1.InsertVertexRequest.prototype.setVertexListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Vertex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Vertex}
 */
proto.librarian.mapper.v1.InsertVertexRequest.prototype.addVertexList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.Vertex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.InsertVertexRequest} returns this
 */
proto.librarian.mapper.v1.InsertVertexRequest.prototype.clearVertexListList = function() {
  return this.setVertexListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.InsertVertexResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.InsertVertexResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.InsertVertexResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertVertexResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.InsertVertexResponse}
 */
proto.librarian.mapper.v1.InsertVertexResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.InsertVertexResponse;
  return proto.librarian.mapper.v1.InsertVertexResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.InsertVertexResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.InsertVertexResponse}
 */
proto.librarian.mapper.v1.InsertVertexResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.InsertVertexResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.InsertVertexResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.InsertVertexResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertVertexResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.DeleteVertexRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.DeleteVertexRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.DeleteVertexRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.DeleteVertexRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteVertexRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vidListList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.DeleteVertexRequest}
 */
proto.librarian.mapper.v1.DeleteVertexRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.DeleteVertexRequest;
  return proto.librarian.mapper.v1.DeleteVertexRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.DeleteVertexRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.DeleteVertexRequest}
 */
proto.librarian.mapper.v1.DeleteVertexRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVidList(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.DeleteVertexRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.DeleteVertexRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.DeleteVertexRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteVertexRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVidListList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 vid_list = 1;
 * @return {!Array<number>}
 */
proto.librarian.mapper.v1.DeleteVertexRequest.prototype.getVidListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.librarian.mapper.v1.DeleteVertexRequest} returns this
 */
proto.librarian.mapper.v1.DeleteVertexRequest.prototype.setVidListList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.DeleteVertexRequest} returns this
 */
proto.librarian.mapper.v1.DeleteVertexRequest.prototype.addVidList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.DeleteVertexRequest} returns this
 */
proto.librarian.mapper.v1.DeleteVertexRequest.prototype.clearVidListList = function() {
  return this.setVidListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.DeleteVertexResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.DeleteVertexResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.DeleteVertexResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteVertexResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.DeleteVertexResponse}
 */
proto.librarian.mapper.v1.DeleteVertexResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.DeleteVertexResponse;
  return proto.librarian.mapper.v1.DeleteVertexResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.DeleteVertexResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.DeleteVertexResponse}
 */
proto.librarian.mapper.v1.DeleteVertexResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.DeleteVertexResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.DeleteVertexResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.DeleteVertexResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteVertexResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.UpdateVertexRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.UpdateVertexRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.UpdateVertexRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.UpdateVertexRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateVertexRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertexListList: jspb.Message.toObjectList(msg.getVertexListList(),
    proto.librarian.mapper.v1.Vertex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.UpdateVertexRequest}
 */
proto.librarian.mapper.v1.UpdateVertexRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.UpdateVertexRequest;
  return proto.librarian.mapper.v1.UpdateVertexRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.UpdateVertexRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.UpdateVertexRequest}
 */
proto.librarian.mapper.v1.UpdateVertexRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.Vertex;
      reader.readMessage(value,proto.librarian.mapper.v1.Vertex.deserializeBinaryFromReader);
      msg.addVertexList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.UpdateVertexRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.UpdateVertexRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.UpdateVertexRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateVertexRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertexListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.Vertex.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vertex vertex_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.Vertex>}
 */
proto.librarian.mapper.v1.UpdateVertexRequest.prototype.getVertexListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Vertex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Vertex, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Vertex>} value
 * @return {!proto.librarian.mapper.v1.UpdateVertexRequest} returns this
*/
proto.librarian.mapper.v1.UpdateVertexRequest.prototype.setVertexListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Vertex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Vertex}
 */
proto.librarian.mapper.v1.UpdateVertexRequest.prototype.addVertexList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.Vertex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.UpdateVertexRequest} returns this
 */
proto.librarian.mapper.v1.UpdateVertexRequest.prototype.clearVertexListList = function() {
  return this.setVertexListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.UpdateVertexResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.UpdateVertexResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.UpdateVertexResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateVertexResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.UpdateVertexResponse}
 */
proto.librarian.mapper.v1.UpdateVertexResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.UpdateVertexResponse;
  return proto.librarian.mapper.v1.UpdateVertexResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.UpdateVertexResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.UpdateVertexResponse}
 */
proto.librarian.mapper.v1.UpdateVertexResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.UpdateVertexResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.UpdateVertexResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.UpdateVertexResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateVertexResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.InsertEdgeRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.InsertEdgeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.InsertEdgeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.InsertEdgeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertEdgeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgeListList: jspb.Message.toObjectList(msg.getEdgeListList(),
    proto.librarian.mapper.v1.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.InsertEdgeRequest}
 */
proto.librarian.mapper.v1.InsertEdgeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.InsertEdgeRequest;
  return proto.librarian.mapper.v1.InsertEdgeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.InsertEdgeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.InsertEdgeRequest}
 */
proto.librarian.mapper.v1.InsertEdgeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.Edge;
      reader.readMessage(value,proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader);
      msg.addEdgeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.InsertEdgeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.InsertEdgeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.InsertEdgeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertEdgeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edge_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.Edge>}
 */
proto.librarian.mapper.v1.InsertEdgeRequest.prototype.getEdgeListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Edge, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Edge>} value
 * @return {!proto.librarian.mapper.v1.InsertEdgeRequest} returns this
*/
proto.librarian.mapper.v1.InsertEdgeRequest.prototype.setEdgeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.InsertEdgeRequest.prototype.addEdgeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.InsertEdgeRequest} returns this
 */
proto.librarian.mapper.v1.InsertEdgeRequest.prototype.clearEdgeListList = function() {
  return this.setEdgeListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.InsertEdgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.InsertEdgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.InsertEdgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertEdgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.InsertEdgeResponse}
 */
proto.librarian.mapper.v1.InsertEdgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.InsertEdgeResponse;
  return proto.librarian.mapper.v1.InsertEdgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.InsertEdgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.InsertEdgeResponse}
 */
proto.librarian.mapper.v1.InsertEdgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.InsertEdgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.InsertEdgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.InsertEdgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.InsertEdgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.DeleteEdgeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.DeleteEdgeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgeListList: jspb.Message.toObjectList(msg.getEdgeListList(),
    proto.librarian.mapper.v1.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.DeleteEdgeRequest}
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.DeleteEdgeRequest;
  return proto.librarian.mapper.v1.DeleteEdgeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.DeleteEdgeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.DeleteEdgeRequest}
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.librarian.mapper.v1.Edge;
      reader.readMessage(value,proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader);
      msg.addEdgeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.DeleteEdgeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.DeleteEdgeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.librarian.mapper.v1.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edge_list = 2;
 * @return {!Array<!proto.librarian.mapper.v1.Edge>}
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.prototype.getEdgeListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Edge, 2));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Edge>} value
 * @return {!proto.librarian.mapper.v1.DeleteEdgeRequest} returns this
*/
proto.librarian.mapper.v1.DeleteEdgeRequest.prototype.setEdgeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.prototype.addEdgeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.librarian.mapper.v1.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.DeleteEdgeRequest} returns this
 */
proto.librarian.mapper.v1.DeleteEdgeRequest.prototype.clearEdgeListList = function() {
  return this.setEdgeListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.DeleteEdgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.DeleteEdgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.DeleteEdgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteEdgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.DeleteEdgeResponse}
 */
proto.librarian.mapper.v1.DeleteEdgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.DeleteEdgeResponse;
  return proto.librarian.mapper.v1.DeleteEdgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.DeleteEdgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.DeleteEdgeResponse}
 */
proto.librarian.mapper.v1.DeleteEdgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.DeleteEdgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.DeleteEdgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.DeleteEdgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.DeleteEdgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.UpdateEdgeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.UpdateEdgeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgeListList: jspb.Message.toObjectList(msg.getEdgeListList(),
    proto.librarian.mapper.v1.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.UpdateEdgeRequest}
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.UpdateEdgeRequest;
  return proto.librarian.mapper.v1.UpdateEdgeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.UpdateEdgeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.UpdateEdgeRequest}
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.librarian.mapper.v1.Edge;
      reader.readMessage(value,proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader);
      msg.addEdgeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.UpdateEdgeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.UpdateEdgeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.librarian.mapper.v1.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edge_list = 3;
 * @return {!Array<!proto.librarian.mapper.v1.Edge>}
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.prototype.getEdgeListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Edge, 3));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Edge>} value
 * @return {!proto.librarian.mapper.v1.UpdateEdgeRequest} returns this
*/
proto.librarian.mapper.v1.UpdateEdgeRequest.prototype.setEdgeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.prototype.addEdgeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.librarian.mapper.v1.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.UpdateEdgeRequest} returns this
 */
proto.librarian.mapper.v1.UpdateEdgeRequest.prototype.clearEdgeListList = function() {
  return this.setEdgeListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.UpdateEdgeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.UpdateEdgeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.UpdateEdgeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateEdgeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.UpdateEdgeResponse}
 */
proto.librarian.mapper.v1.UpdateEdgeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.UpdateEdgeResponse;
  return proto.librarian.mapper.v1.UpdateEdgeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.UpdateEdgeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.UpdateEdgeResponse}
 */
proto.librarian.mapper.v1.UpdateEdgeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.UpdateEdgeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.UpdateEdgeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.UpdateEdgeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.UpdateEdgeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.GoFromVertexRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.GoFromVertexRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.GoFromVertexRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.GoFromVertexRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    edgeTypeFilterList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    edgeDirection: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minStep: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxStep: jspb.Message.getFieldWithDefault(msg, 5, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 14, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.GoFromVertexRequest;
  return proto.librarian.mapper.v1.GoFromVertexRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.GoFromVertexRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcVid(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.librarian.mapper.v1.EdgeType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEdgeTypeFilter(values[i]);
      }
      break;
    case 3:
      var value = /** @type {!proto.librarian.mapper.v1.EdgeDirection} */ (reader.readEnum());
      msg.setEdgeDirection(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinStep(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxStep(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.GoFromVertexRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.GoFromVertexRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.GoFromVertexRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEdgeTypeFilterList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getEdgeDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMinStep();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMaxStep();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional int64 src_vid = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getSrcVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setSrcVid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated EdgeType edge_type_filter = 2;
 * @return {!Array<!proto.librarian.mapper.v1.EdgeType>}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getEdgeTypeFilterList = function() {
  return /** @type {!Array<!proto.librarian.mapper.v1.EdgeType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.EdgeType>} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setEdgeTypeFilterList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeType} value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.addEdgeTypeFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.clearEdgeTypeFilterList = function() {
  return this.setEdgeTypeFilterList([]);
};


/**
 * optional EdgeDirection edge_direction = 3;
 * @return {!proto.librarian.mapper.v1.EdgeDirection}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getEdgeDirection = function() {
  return /** @type {!proto.librarian.mapper.v1.EdgeDirection} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeDirection} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setEdgeDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 min_step = 4;
 * @return {number}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getMinStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setMinStep = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 max_step = 5;
 * @return {number}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getMaxStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setMaxStep = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 limit = 14;
 * @return {number}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 offset = 15;
 * @return {number}
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexRequest} returns this
 */
proto.librarian.mapper.v1.GoFromVertexRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.GoFromVertexResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.GoFromVertexResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.GoFromVertexResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.GoFromVertexResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.GoFromVertexResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertexListList: jspb.Message.toObjectList(msg.getVertexListList(),
    proto.librarian.mapper.v1.Vertex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.GoFromVertexResponse}
 */
proto.librarian.mapper.v1.GoFromVertexResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.GoFromVertexResponse;
  return proto.librarian.mapper.v1.GoFromVertexResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.GoFromVertexResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.GoFromVertexResponse}
 */
proto.librarian.mapper.v1.GoFromVertexResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.Vertex;
      reader.readMessage(value,proto.librarian.mapper.v1.Vertex.deserializeBinaryFromReader);
      msg.addVertexList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.GoFromVertexResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.GoFromVertexResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.GoFromVertexResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.GoFromVertexResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertexListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.Vertex.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vertex vertex_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.Vertex>}
 */
proto.librarian.mapper.v1.GoFromVertexResponse.prototype.getVertexListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Vertex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Vertex, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Vertex>} value
 * @return {!proto.librarian.mapper.v1.GoFromVertexResponse} returns this
*/
proto.librarian.mapper.v1.GoFromVertexResponse.prototype.setVertexListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Vertex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Vertex}
 */
proto.librarian.mapper.v1.GoFromVertexResponse.prototype.addVertexList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.Vertex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.GoFromVertexResponse} returns this
 */
proto.librarian.mapper.v1.GoFromVertexResponse.prototype.clearVertexListList = function() {
  return this.setVertexListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FetchEqualVertexRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexRequest}
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FetchEqualVertexRequest;
  return proto.librarian.mapper.v1.FetchEqualVertexRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexRequest}
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcVid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FetchEqualVertexRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 src_vid = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.prototype.getSrcVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexRequest} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexRequest.prototype.setSrcVid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FetchEqualVertexResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vertexListList: jspb.Message.toObjectList(msg.getVertexListList(),
    proto.librarian.mapper.v1.Vertex.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexResponse}
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FetchEqualVertexResponse;
  return proto.librarian.mapper.v1.FetchEqualVertexResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexResponse}
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.Vertex;
      reader.readMessage(value,proto.librarian.mapper.v1.Vertex.deserializeBinaryFromReader);
      msg.addVertexList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FetchEqualVertexResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVertexListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.Vertex.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Vertex vertex_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.Vertex>}
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.prototype.getVertexListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Vertex>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Vertex, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Vertex>} value
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexResponse} returns this
*/
proto.librarian.mapper.v1.FetchEqualVertexResponse.prototype.setVertexListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Vertex=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Vertex}
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.prototype.addVertexList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.Vertex, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexResponse} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexResponse.prototype.clearVertexListList = function() {
  return this.setVertexListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    edgeTypeFilterList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    edgeDirection: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest;
  return proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcVid(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.librarian.mapper.v1.EdgeType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEdgeTypeFilter(values[i]);
      }
      break;
    case 3:
      var value = /** @type {!proto.librarian.mapper.v1.EdgeDirection} */ (reader.readEnum());
      msg.setEdgeDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEdgeTypeFilterList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getEdgeDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int64 src_vid = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.getSrcVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.setSrcVid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated EdgeType edge_type_filter = 2;
 * @return {!Array<!proto.librarian.mapper.v1.EdgeType>}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.getEdgeTypeFilterList = function() {
  return /** @type {!Array<!proto.librarian.mapper.v1.EdgeType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.EdgeType>} value
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.setEdgeTypeFilterList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeType} value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.addEdgeTypeFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.clearEdgeTypeFilterList = function() {
  return this.setEdgeTypeFilterList([]);
};


/**
 * optional EdgeDirection edge_direction = 3;
 * @return {!proto.librarian.mapper.v1.EdgeDirection}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.getEdgeDirection = function() {
  return /** @type {!proto.librarian.mapper.v1.EdgeDirection} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeDirection} value
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborRequest.prototype.setEdgeDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgeListList: jspb.Message.toObjectList(msg.getEdgeListList(),
    proto.librarian.mapper.v1.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse;
  return proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.Edge;
      reader.readMessage(value,proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader);
      msg.addEdgeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edge_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.Edge>}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.prototype.getEdgeListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Edge, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Edge>} value
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse} returns this
*/
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.prototype.setEdgeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.prototype.addEdgeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse} returns this
 */
proto.librarian.mapper.v1.FetchEqualVertexNeighborResponse.prototype.clearEdgeListList = function() {
  return this.setEdgeListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.FindPathRequest.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FindPathRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FindPathRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FindPathRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    dstVidList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    edgeTypeFilterList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    edgeDirection: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxStep: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FindPathRequest}
 */
proto.librarian.mapper.v1.FindPathRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FindPathRequest;
  return proto.librarian.mapper.v1.FindPathRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FindPathRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FindPathRequest}
 */
proto.librarian.mapper.v1.FindPathRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSrcVid(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDstVid(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<!proto.librarian.mapper.v1.EdgeType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEdgeTypeFilter(values[i]);
      }
      break;
    case 4:
      var value = /** @type {!proto.librarian.mapper.v1.EdgeDirection} */ (reader.readEnum());
      msg.setEdgeDirection(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxStep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FindPathRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FindPathRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FindPathRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
  f = message.getDstVidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getEdgeTypeFilterList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getEdgeDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMaxStep();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * repeated int64 src_vid = 1;
 * @return {!Array<number>}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.getSrcVidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.setSrcVidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.addSrcVid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.clearSrcVidList = function() {
  return this.setSrcVidList([]);
};


/**
 * repeated int64 dst_vid = 2;
 * @return {!Array<number>}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.getDstVidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.setDstVidList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.addDstVid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.clearDstVidList = function() {
  return this.setDstVidList([]);
};


/**
 * repeated EdgeType edge_type_filter = 3;
 * @return {!Array<!proto.librarian.mapper.v1.EdgeType>}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.getEdgeTypeFilterList = function() {
  return /** @type {!Array<!proto.librarian.mapper.v1.EdgeType>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.EdgeType>} value
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.setEdgeTypeFilterList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeType} value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.addEdgeTypeFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.clearEdgeTypeFilterList = function() {
  return this.setEdgeTypeFilterList([]);
};


/**
 * optional EdgeDirection edge_direction = 4;
 * @return {!proto.librarian.mapper.v1.EdgeDirection}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.getEdgeDirection = function() {
  return /** @type {!proto.librarian.mapper.v1.EdgeDirection} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeDirection} value
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.setEdgeDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int64 max_step = 5;
 * @return {number}
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.getMaxStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.FindPathRequest} returns this
 */
proto.librarian.mapper.v1.FindPathRequest.prototype.setMaxStep = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.FindPathResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FindPathResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FindPathResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FindPathResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FindPathResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathListList: jspb.Message.toObjectList(msg.getPathListList(),
    proto.librarian.mapper.v1.FindPathResponse.SinglePath.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FindPathResponse}
 */
proto.librarian.mapper.v1.FindPathResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FindPathResponse;
  return proto.librarian.mapper.v1.FindPathResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FindPathResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FindPathResponse}
 */
proto.librarian.mapper.v1.FindPathResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.FindPathResponse.SinglePath;
      reader.readMessage(value,proto.librarian.mapper.v1.FindPathResponse.SinglePath.deserializeBinaryFromReader);
      msg.addPathList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FindPathResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FindPathResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FindPathResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FindPathResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.librarian.mapper.v1.FindPathResponse.SinglePath.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.FindPathResponse.SinglePath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.FindPathResponse.SinglePath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgeListList: jspb.Message.toObjectList(msg.getEdgeListList(),
    proto.librarian.mapper.v1.Edge.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.FindPathResponse.SinglePath}
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.FindPathResponse.SinglePath;
  return proto.librarian.mapper.v1.FindPathResponse.SinglePath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.FindPathResponse.SinglePath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.FindPathResponse.SinglePath}
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.librarian.mapper.v1.Edge;
      reader.readMessage(value,proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader);
      msg.addEdgeList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.FindPathResponse.SinglePath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.FindPathResponse.SinglePath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.librarian.mapper.v1.Edge.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Edge edge_list = 3;
 * @return {!Array<!proto.librarian.mapper.v1.Edge>}
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.prototype.getEdgeListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.Edge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.Edge, 3));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.Edge>} value
 * @return {!proto.librarian.mapper.v1.FindPathResponse.SinglePath} returns this
*/
proto.librarian.mapper.v1.FindPathResponse.SinglePath.prototype.setEdgeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.librarian.mapper.v1.Edge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.prototype.addEdgeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.librarian.mapper.v1.Edge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FindPathResponse.SinglePath} returns this
 */
proto.librarian.mapper.v1.FindPathResponse.SinglePath.prototype.clearEdgeListList = function() {
  return this.setEdgeListList([]);
};


/**
 * repeated SinglePath path_list = 1;
 * @return {!Array<!proto.librarian.mapper.v1.FindPathResponse.SinglePath>}
 */
proto.librarian.mapper.v1.FindPathResponse.prototype.getPathListList = function() {
  return /** @type{!Array<!proto.librarian.mapper.v1.FindPathResponse.SinglePath>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.librarian.mapper.v1.FindPathResponse.SinglePath, 1));
};


/**
 * @param {!Array<!proto.librarian.mapper.v1.FindPathResponse.SinglePath>} value
 * @return {!proto.librarian.mapper.v1.FindPathResponse} returns this
*/
proto.librarian.mapper.v1.FindPathResponse.prototype.setPathListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.librarian.mapper.v1.FindPathResponse.SinglePath=} opt_value
 * @param {number=} opt_index
 * @return {!proto.librarian.mapper.v1.FindPathResponse.SinglePath}
 */
proto.librarian.mapper.v1.FindPathResponse.prototype.addPathList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.librarian.mapper.v1.FindPathResponse.SinglePath, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.librarian.mapper.v1.FindPathResponse} returns this
 */
proto.librarian.mapper.v1.FindPathResponse.prototype.clearPathListList = function() {
  return this.setPathListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.Vertex.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.Vertex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.Vertex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.Vertex.toObject = function(includeInstance, msg) {
  var f, obj = {
    vid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    prop: (f = msg.getProp()) && proto.librarian.mapper.v1.VertexProp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.Vertex}
 */
proto.librarian.mapper.v1.Vertex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.Vertex;
  return proto.librarian.mapper.v1.Vertex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.Vertex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.Vertex}
 */
proto.librarian.mapper.v1.Vertex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVid(value);
      break;
    case 2:
      var value = /** @type {!proto.librarian.mapper.v1.VertexType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.librarian.mapper.v1.VertexProp;
      reader.readMessage(value,proto.librarian.mapper.v1.VertexProp.deserializeBinaryFromReader);
      msg.setProp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.Vertex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.Vertex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.Vertex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.Vertex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getProp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.librarian.mapper.v1.VertexProp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 vid = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.Vertex.prototype.getVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.Vertex} returns this
 */
proto.librarian.mapper.v1.Vertex.prototype.setVid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional VertexType type = 2;
 * @return {!proto.librarian.mapper.v1.VertexType}
 */
proto.librarian.mapper.v1.Vertex.prototype.getType = function() {
  return /** @type {!proto.librarian.mapper.v1.VertexType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.librarian.mapper.v1.VertexType} value
 * @return {!proto.librarian.mapper.v1.Vertex} returns this
 */
proto.librarian.mapper.v1.Vertex.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional VertexProp prop = 3;
 * @return {?proto.librarian.mapper.v1.VertexProp}
 */
proto.librarian.mapper.v1.Vertex.prototype.getProp = function() {
  return /** @type{?proto.librarian.mapper.v1.VertexProp} */ (
    jspb.Message.getWrapperField(this, proto.librarian.mapper.v1.VertexProp, 3));
};


/**
 * @param {?proto.librarian.mapper.v1.VertexProp|undefined} value
 * @return {!proto.librarian.mapper.v1.Vertex} returns this
*/
proto.librarian.mapper.v1.Vertex.prototype.setProp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.mapper.v1.Vertex} returns this
 */
proto.librarian.mapper.v1.Vertex.prototype.clearProp = function() {
  return this.setProp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.Vertex.prototype.hasProp = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.VertexProp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.VertexProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.VertexProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.VertexProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    common: (f = msg.getCommon()) && proto.librarian.mapper.v1.VertexCommonProp.toObject(includeInstance, f),
    additionalMap: (f = msg.getAdditionalMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.VertexProp}
 */
proto.librarian.mapper.v1.VertexProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.VertexProp;
  return proto.librarian.mapper.v1.VertexProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.VertexProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.VertexProp}
 */
proto.librarian.mapper.v1.VertexProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.VertexCommonProp;
      reader.readMessage(value,proto.librarian.mapper.v1.VertexCommonProp.deserializeBinaryFromReader);
      msg.setCommon(value);
      break;
    case 2:
      var value = msg.getAdditionalMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.VertexProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.VertexProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.VertexProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.VertexProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.librarian.mapper.v1.VertexCommonProp.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * optional VertexCommonProp common = 1;
 * @return {?proto.librarian.mapper.v1.VertexCommonProp}
 */
proto.librarian.mapper.v1.VertexProp.prototype.getCommon = function() {
  return /** @type{?proto.librarian.mapper.v1.VertexCommonProp} */ (
    jspb.Message.getWrapperField(this, proto.librarian.mapper.v1.VertexCommonProp, 1));
};


/**
 * @param {?proto.librarian.mapper.v1.VertexCommonProp|undefined} value
 * @return {!proto.librarian.mapper.v1.VertexProp} returns this
*/
proto.librarian.mapper.v1.VertexProp.prototype.setCommon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.mapper.v1.VertexProp} returns this
 */
proto.librarian.mapper.v1.VertexProp.prototype.clearCommon = function() {
  return this.setCommon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.VertexProp.prototype.hasCommon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, int64> additional = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.librarian.mapper.v1.VertexProp.prototype.getAdditionalMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.librarian.mapper.v1.VertexProp} returns this
 */
proto.librarian.mapper.v1.VertexProp.prototype.clearAdditionalMap = function() {
  this.getAdditionalMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.VertexCommonProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.VertexCommonProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.VertexCommonProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    occurTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.VertexCommonProp}
 */
proto.librarian.mapper.v1.VertexCommonProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.VertexCommonProp;
  return proto.librarian.mapper.v1.VertexCommonProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.VertexCommonProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.VertexCommonProp}
 */
proto.librarian.mapper.v1.VertexCommonProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOccurTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.VertexCommonProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.VertexCommonProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.VertexCommonProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 occur_time = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.getOccurTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.VertexCommonProp} returns this
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.setOccurTime = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.VertexCommonProp} returns this
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.clearOccurTime = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.hasOccurTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 create_time = 2;
 * @return {number}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.VertexCommonProp} returns this
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.setCreateTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.VertexCommonProp} returns this
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.clearCreateTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 update_time = 3;
 * @return {number}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.VertexCommonProp} returns this
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.setUpdateTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.VertexCommonProp} returns this
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.clearUpdateTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.VertexCommonProp.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.Edge.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.Edge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.Edge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.Edge.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcVid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dstVid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    prop: (f = msg.getProp()) && proto.librarian.mapper.v1.EdgeProp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.Edge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.Edge;
  return proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.Edge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.Edge}
 */
proto.librarian.mapper.v1.Edge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcVid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDstVid(value);
      break;
    case 3:
      var value = /** @type {!proto.librarian.mapper.v1.EdgeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.librarian.mapper.v1.EdgeProp;
      reader.readMessage(value,proto.librarian.mapper.v1.EdgeProp.deserializeBinaryFromReader);
      msg.setProp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.Edge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.Edge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.Edge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.Edge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcVid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDstVid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getProp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.librarian.mapper.v1.EdgeProp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 src_vid = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.Edge.prototype.getSrcVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.Edge} returns this
 */
proto.librarian.mapper.v1.Edge.prototype.setSrcVid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 dst_vid = 2;
 * @return {number}
 */
proto.librarian.mapper.v1.Edge.prototype.getDstVid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.Edge} returns this
 */
proto.librarian.mapper.v1.Edge.prototype.setDstVid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EdgeType type = 3;
 * @return {!proto.librarian.mapper.v1.EdgeType}
 */
proto.librarian.mapper.v1.Edge.prototype.getType = function() {
  return /** @type {!proto.librarian.mapper.v1.EdgeType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.librarian.mapper.v1.EdgeType} value
 * @return {!proto.librarian.mapper.v1.Edge} returns this
 */
proto.librarian.mapper.v1.Edge.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional EdgeProp prop = 4;
 * @return {?proto.librarian.mapper.v1.EdgeProp}
 */
proto.librarian.mapper.v1.Edge.prototype.getProp = function() {
  return /** @type{?proto.librarian.mapper.v1.EdgeProp} */ (
    jspb.Message.getWrapperField(this, proto.librarian.mapper.v1.EdgeProp, 4));
};


/**
 * @param {?proto.librarian.mapper.v1.EdgeProp|undefined} value
 * @return {!proto.librarian.mapper.v1.Edge} returns this
*/
proto.librarian.mapper.v1.Edge.prototype.setProp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.mapper.v1.Edge} returns this
 */
proto.librarian.mapper.v1.Edge.prototype.clearProp = function() {
  return this.setProp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.Edge.prototype.hasProp = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.EdgeProp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.EdgeProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.EdgeProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.EdgeProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    common: (f = msg.getCommon()) && proto.librarian.mapper.v1.EdgeCommonProp.toObject(includeInstance, f),
    additionalMap: (f = msg.getAdditionalMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.EdgeProp}
 */
proto.librarian.mapper.v1.EdgeProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.EdgeProp;
  return proto.librarian.mapper.v1.EdgeProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.EdgeProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.EdgeProp}
 */
proto.librarian.mapper.v1.EdgeProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.librarian.mapper.v1.EdgeCommonProp;
      reader.readMessage(value,proto.librarian.mapper.v1.EdgeCommonProp.deserializeBinaryFromReader);
      msg.setCommon(value);
      break;
    case 2:
      var value = msg.getAdditionalMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.EdgeProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.EdgeProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.EdgeProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.EdgeProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.librarian.mapper.v1.EdgeCommonProp.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * optional EdgeCommonProp common = 1;
 * @return {?proto.librarian.mapper.v1.EdgeCommonProp}
 */
proto.librarian.mapper.v1.EdgeProp.prototype.getCommon = function() {
  return /** @type{?proto.librarian.mapper.v1.EdgeCommonProp} */ (
    jspb.Message.getWrapperField(this, proto.librarian.mapper.v1.EdgeCommonProp, 1));
};


/**
 * @param {?proto.librarian.mapper.v1.EdgeCommonProp|undefined} value
 * @return {!proto.librarian.mapper.v1.EdgeProp} returns this
*/
proto.librarian.mapper.v1.EdgeProp.prototype.setCommon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.librarian.mapper.v1.EdgeProp} returns this
 */
proto.librarian.mapper.v1.EdgeProp.prototype.clearCommon = function() {
  return this.setCommon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.EdgeProp.prototype.hasCommon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, int64> additional = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.librarian.mapper.v1.EdgeProp.prototype.getAdditionalMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.librarian.mapper.v1.EdgeProp} returns this
 */
proto.librarian.mapper.v1.EdgeProp.prototype.clearAdditionalMap = function() {
  this.getAdditionalMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.toObject = function(opt_includeInstance) {
  return proto.librarian.mapper.v1.EdgeCommonProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.librarian.mapper.v1.EdgeCommonProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.EdgeCommonProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    occurTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updateTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rank: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp}
 */
proto.librarian.mapper.v1.EdgeCommonProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.librarian.mapper.v1.EdgeCommonProp;
  return proto.librarian.mapper.v1.EdgeCommonProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.librarian.mapper.v1.EdgeCommonProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp}
 */
proto.librarian.mapper.v1.EdgeCommonProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOccurTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreateTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRank(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.librarian.mapper.v1.EdgeCommonProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.librarian.mapper.v1.EdgeCommonProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.librarian.mapper.v1.EdgeCommonProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 occur_time = 1;
 * @return {number}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.getOccurTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.setOccurTime = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.clearOccurTime = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.hasOccurTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 create_time = 2;
 * @return {number}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.setCreateTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.clearCreateTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 update_time = 3;
 * @return {number}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.getUpdateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.setUpdateTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.clearUpdateTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 rank = 4;
 * @return {number}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.setRank = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.librarian.mapper.v1.EdgeCommonProp} returns this
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.clearRank = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.librarian.mapper.v1.EdgeCommonProp.prototype.hasRank = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.librarian.mapper.v1.VertexType = {
  VERTEX_TYPE_UNSPECIFIED: 0,
  VERTEX_TYPE_ABSTRACT: 1,
  VERTEX_TYPE_ENTITY: 2,
  VERTEX_TYPE_MESSAGE: 3,
  VERTEX_TYPE_OBJECT: 4
};

/**
 * @enum {number}
 */
proto.librarian.mapper.v1.EdgeType = {
  EDGE_TYPE_UNSPECIFIED: 0,
  EDGE_TYPE_GENERAL: 1,
  EDGE_TYPE_EQUAL: 2,
  EDGE_TYPE_CREATE: 3,
  EDGE_TYPE_ENJOY: 4,
  EDGE_TYPE_MENTION: 5,
  EDGE_TYPE_DERIVE: 6,
  EDGE_TYPE_CONTROL: 7,
  EDGE_TYPE_FOLLOW: 8
};

/**
 * @enum {number}
 */
proto.librarian.mapper.v1.EdgeDirection = {
  EDGE_DIRECTION_UNSPECIFIED: 0,
  EDGE_DIRECTION_OUT: 1,
  EDGE_DIRECTION_IN: 2,
  EDGE_DIRECTION_BOTH: 3
};

goog.object.extend(exports, proto.librarian.mapper.v1);
