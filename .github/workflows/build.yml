name: build-and-deploy

on:
  push:
    branches: [ "master" ]

  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  packages: write
  
concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v4.1.0
        with:
          go-version: 'oldstable'

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.8.2
      
      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/tuihub/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Setup Rust environment
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup Dart environment
        uses: dart-lang/setup-dart@v1.4

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Install Protoc Plugins
        run: make install-plugins

      - name: Setup bufbuild  
        uses: bufbuild/buf-setup-action@v1.28.1

      - name: Build
        run: make generate
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main

      - name: Apply Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: apply auto code generation'

      - name: Build C# project
        run: dotnet build TuiHub.Protos.csproj -c Release
      - name: Create nuget package
        run: dotnet pack TuiHub.Protos.csproj --no-build -c Release
      - name: Publish nuget package to GPR
        run: dotnet nuget push bin/Release/*.nupkg --skip-duplicate
      - name: Publish nuget package to nuget.org
        run: dotnet nuget push bin/Release/*.nupkg --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}}
