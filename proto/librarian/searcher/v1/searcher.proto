syntax = "proto3";

package librarian.searcher.v1;

import "librarian/v1/common.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.Searcher.V1";
option go_package = "github.com/tuihub/protos/pkg/librarian/searcher/v1;v1";

/*
   * The main role of Searcher is to encapsulate id generate and search operations.
   * In Searcher's model:
   * 1. Each id is unique throughout the system
   * 2. Id can be described by custom content, only the submitted description
   be included in the search scope
   * 3. When searching, search for the closest id by keyword
*/
service LibrarianSearcherService {
  rpc NewID(NewIDRequest) returns (NewIDResponse);
  rpc NewBatchIDs(NewBatchIDsRequest) returns (NewBatchIDsResponse);
  rpc DescribeID(DescribeIDRequest) returns (DescribeIDResponse);
  rpc SearchID(SearchIDRequest) returns (SearchIDResponse);
}

message NewIDRequest {}
message NewIDResponse {
  librarian.v1.InternalID id = 1;
}

message NewBatchIDsRequest {
  int32 num = 1;
}
message NewBatchIDsResponse {
  repeated librarian.v1.InternalID ids = 1;
}

message DescribeIDRequest {
  librarian.v1.InternalID id = 1;
  string description = 2;
  DescribeMode mode = 3;
  Index index = 4;

  enum DescribeMode {
    DESCRIBE_MODE_UNSPECIFIED = 0;
    DESCRIBE_MODE_OVERRIDE = 1;
    DESCRIBE_MODE_APPEND = 2;
  }
}

message DescribeIDResponse {}

message SearchIDRequest {
  librarian.v1.PagingRequest paging = 1;
  string keyword = 2;
  Index index = 3;
}

message SearchIDResponse {
  librarian.v1.PagingResponse paging = 1;
  repeated Result result = 2;

  message Result {
    librarian.v1.InternalID id = 1;
    int64 rank = 2;
  }
}

enum Index {
  INDEX_UNSPECIFIED = 0;
  INDEX_GENERAL = 1;
  INDEX_GEBURA_APP = 2;
  INDEX_CHESED_IMAGE = 3;
}
