syntax = "proto3";

package librarian.sephirah.v1;

import "librarian/v1/common.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.Sephirah.V1";
option go_package = "github.com/tuihub/protos/pkg/librarian/sephirah/v1;v1";

message GetTokenRequest {
  string username = 1;
  string password = 2;
}

message GetTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshTokenRequest {}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message GainUserPrivilegeRequest {
  librarian.v1.InternalID user_id = 1;
}

message GainUserPrivilegeResponse {
  string access_token = 1;
}

message CreateUserRequest {
  User user = 1;
}
message CreateUserResponse {
  librarian.v1.InternalID id = 1;
}

message UpdateUserRequest {
  User user = 1;
  // Original password. Required if new password is not empty string
  optional string password = 2;
}
message UpdateUserResponse {}

message GetUserRequest {
  // leave empty to get self user info
  optional librarian.v1.InternalID id = 1;
}

message GetUserResponse {
  User user = 1;
}

message ListUsersRequest {
  librarian.v1.PagingRequest paging = 1;
  repeated UserType type_filter = 2;
  repeated UserStatus status_filter = 3;
}
message ListUsersResponse {
  librarian.v1.PagingResponse paging = 1;
  // self will not contained in the list
  repeated User users = 2;
}

message LinkAccountRequest {
  librarian.v1.AccountID account_id = 1;
}
message LinkAccountResponse {
  librarian.v1.InternalID account_id = 1;
}
message UnLinkAccountRequest {
  librarian.v1.AccountID account_id = 1;
}
message UnLinkAccountResponse {}

message ListLinkAccountsRequest {
  // Used to list other user's account
  optional librarian.v1.InternalID user_id = 1;
}
message ListLinkAccountsResponse {
  repeated librarian.v1.Account accounts = 1;
}

message ListPortersRequest {
  librarian.v1.PagingRequest paging = 1;
}
message ListPortersResponse {
  librarian.v1.PagingResponse paging = 1;
  repeated Porter porters = 2;
}

message UpdatePorterStatusRequest {
  librarian.v1.InternalID porter_id = 1;
  UserStatus status = 2;
}
message UpdatePorterStatusResponse {}

message UpdatePorterPrivilegeRequest {
  librarian.v1.InternalID porter_id = 1;
  PorterPrivilege privilege = 2;
}
message UpdatePorterPrivilegeResponse {}

message PorterPrivilege {
  bool all = 1;
}

message User {
  librarian.v1.InternalID id = 1;
  string username = 2;
  string password = 3;
  UserType type = 4;
  UserStatus status = 5;
}

enum UserType {
  USER_TYPE_UNSPECIFIED = 0;
  USER_TYPE_ADMIN = 1;
  USER_TYPE_NORMAL = 2;
  USER_TYPE_SENTINEL = 3;
  USER_TYPE_PORTER = 4;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_BLOCKED = 2;
}

message Porter {
  librarian.v1.InternalID id = 1;
  string name = 2;
  string version = 3;
  string global_name = 4;
  string feature_summary = 5;
  UserStatus status = 6;
}
