syntax = "proto3";

package librarian.sephirah.v1.sephirah;

import "google/protobuf/timestamp.proto";
import "librarian/v1/common.proto";
import "librarian/v1/wellknown.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.Sephirah.V1.Sephirah";
option go_package = "github.com/tuihub/protos/pkg/librarian/sephirah/v1;v1";

message GetTokenRequest {
  string username = 1;
  string password = 2;
  // Always ignore this if client don't impl device info feature.
  // Otherwise, re-login after registered device with this and every time after
  optional librarian.v1.InternalID device_id = 3;
}

message GetTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RefreshTokenRequest {
  // Always ignore this if client don't impl device info feature.
  // Be used to add device info after registered device.
  // Only first device_id will be used.
  optional librarian.v1.InternalID device_id = 3;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message RegisterUserRequest {
  string username = 1;
  string password = 2;
  message Captcha {
    string id = 1;
    string value = 2;
  }
  optional Captcha captcha = 3;
}

message RegisterUserResponse {
  message ImageCaptcha {
    string id = 1;
    bytes image = 2;
  }
  oneof stage {
    // If captcha required
    ImageCaptcha captcha = 1;
    // If register success
    string refresh_token = 2;
  }
}

message RegisterDeviceRequest {
  DeviceInfo device_info = 1;
  // Client locally generated id, same local id will be treated as same device
  optional string client_local_id = 2;
}
message RegisterDeviceResponse {
  librarian.v1.InternalID device_id = 1;
}

message ListRegisteredDevicesRequest {}
message ListRegisteredDevicesResponse {
  repeated DeviceInfo devices = 1;
}

message ListUserSessionsRequest {}
message ListUserSessionsResponse {
  repeated UserSession sessions = 1;
}

message DeleteUserSessionRequest {
  librarian.v1.InternalID session_id = 1;
}
message DeleteUserSessionResponse {}

message UpdateUserRequest {
  User user = 1;
  // Original password. Required if new password is not empty
  optional string password = 2;
}
message UpdateUserResponse {}

message GetUserRequest {
  // leave empty to get self user info
  optional librarian.v1.InternalID id = 1;
}

message GetUserResponse {
  User user = 1;
}

message LinkAccountRequest {
  // WellKnownAccountPlatform
  string platform = 1;
  string platform_account_id = 2;
}
message LinkAccountResponse {
  librarian.v1.InternalID account_id = 1;
}
message UnLinkAccountRequest {
  // WellKnownAccountPlatform
  string platform = 1;
  string platform_account_id = 2;
}
message UnLinkAccountResponse {}

message ListLinkAccountsRequest {
  // Used to list other user's account
  optional librarian.v1.InternalID user_id = 1;
}
message ListLinkAccountsResponse {
  repeated Account accounts = 1;
}

message ListPorterDigestsRequest {
  librarian.v1.PagingRequest paging = 1;
  // Normal user can only list active porters
  repeated UserStatus status_filter = 2;
}
message ListPorterDigestsResponse {
  librarian.v1.PagingResponse paging = 1;
  repeated PorterDigest porter_digests = 2;
}

message CreatePorterContextRequest {
  PorterContext context = 1;
}

message CreatePorterContextResponse {
  librarian.v1.InternalID context_id = 1;
}

message ListPorterContextsRequest {
  librarian.v1.PagingRequest paging = 1;
}

message ListPorterContextsResponse {
  librarian.v1.PagingResponse paging = 1;
  repeated PorterContext contexts = 2;
}

message UpdatePorterContextRequest {
  PorterContext context = 1;
}
message UpdatePorterContextResponse {}

message DeletePorterContextRequest {
  librarian.v1.InternalID context_id = 1;
}
message DeletePorterContextResponse {}

message Account {
  librarian.v1.InternalID id = 1;
  // WellKnownPlatform
  string platform = 2;
  string platform_account_id = 3;
  string name = 4;
  string profile_url = 5;
  string avatar_url = 6;
  google.protobuf.Timestamp latest_update_time = 7;
}

message User {
  librarian.v1.InternalID id = 1;
  string username = 2;
  string password = 3;
  UserType type = 4;
  UserStatus status = 5;
}

message UserSession {
  librarian.v1.InternalID id = 1;
  librarian.v1.InternalID user_id = 2;
  DeviceInfo device_info = 3;
  google.protobuf.Timestamp create_time = 4;
  google.protobuf.Timestamp expire_time = 5;
}

message DeviceInfo {
  librarian.v1.InternalID device_id = 1;
  string device_name = 2;
  SystemType system_type = 3;
  string system_version = 4;

  string client_name = 5;
  string client_source_code_address = 6;
  string client_version = 7;
}

enum SystemType {
  SYSTEM_TYPE_UNSPECIFIED = 0;
  SYSTEM_TYPE_ANDROID = 1;
  SYSTEM_TYPE_IOS = 2;
  SYSTEM_TYPE_WINDOWS = 3;
  SYSTEM_TYPE_MACOS = 4;
  SYSTEM_TYPE_LINUX = 5;
  SYSTEM_TYPE_WEB = 6;
}

enum UserType {
  USER_TYPE_UNSPECIFIED = 0;
  USER_TYPE_ADMIN = 1;
  USER_TYPE_NORMAL = 2;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_BLOCKED = 2;
}

message Porter {
  librarian.v1.InternalID id = 1;
  librarian.v1.PorterBinarySummary binary_summary = 2;
  string global_name = 3;
  string region = 4;
  librarian.v1.FeatureSummary feature_summary = 5;
  UserStatus status = 6;
  // Only used in response
  PorterConnectionStatus connection_status = 7;
  // Only used in response
  optional string context_json_schema = 8;
  // Only used in response
  string connection_status_message = 9;
}

enum PorterConnectionStatus {
  PORTER_CONNECTION_STATUS_UNSPECIFIED = 0;
  // Available and not active
  PORTER_CONNECTION_STATUS_CONNECTED = 1;
  // Not available
  PORTER_CONNECTION_STATUS_DISCONNECTED = 2;
  // Available and active
  PORTER_CONNECTION_STATUS_ACTIVE = 3;
  // Available but failed to activate
  PORTER_CONNECTION_STATUS_ACTIVATION_FAILED = 4;
  // Active but downgraded
  PORTER_CONNECTION_STATUS_DOWNGRADED = 5;
}

message PorterContext {
  librarian.v1.InternalID id = 1;
  string global_name = 2;
  string region = 3;
  string context_json = 4;
  string name = 5;
  string description = 6;
  PorterContextStatus status = 7;
  // Only used in response
  PorterContextHandleStatus handle_status = 8;
  // Only used in response
  string handle_status_message = 9;
}

enum PorterContextStatus {
  PORTER_CONTEXT_STATUS_UNSPECIFIED = 0;
  PORTER_CONTEXT_STATUS_ACTIVE = 1;
  PORTER_CONTEXT_STATUS_DISABLED = 2;
}

enum PorterContextHandleStatus {
  PORTER_CONTEXT_HANDLE_STATUS_UNSPECIFIED = 0;
  // Active and can be used
  PORTER_CONTEXT_HANDLE_STATUS_ACTIVE = 1;
  // Active but downgraded
  PORTER_CONTEXT_HANDLE_STATUS_DOWNGRADED = 2;
  // In queueing
  PORTER_CONTEXT_HANDLE_STATUS_QUEUEING = 3;
  // Blocked by some reason (e.g. no available resources)
  PORTER_CONTEXT_HANDLE_STATUS_BLOCKED = 4;
}

message PorterDigest {
  librarian.v1.PorterBinarySummary binary_summary = 1;
  string global_name = 2;
  repeated string regions = 3;
  optional string context_json_schema = 4;
  librarian.v1.FeatureSummary feature_summary = 5;
}
