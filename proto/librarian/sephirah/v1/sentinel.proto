syntax = "proto3";

package librarian.sephirah.v1;

import "librarian/sephirah/v1/gebura.proto";
import "librarian/sephirah/v1/tiphereth.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.Sephirah.V1";
option go_package = "github.com/tuihub/protos/pkg/librarian/sephirah/v1;v1";

service LibrarianSentinelService {
  // `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

  // `Gebura` `Sentinel`
  rpc ReportSentinelInformation(ReportSentinelInformationRequest) returns (ReportSentinelInformationResponse);
  // `Gebura` `Sentinel`
  // Full update, changes are handled by librarian
  rpc ReportAppBinaries(ReportAppBinariesRequest) returns (ReportAppBinariesResponse);
}

message ReportSentinelInformationRequest {
  repeated string hostnames = 1;
  ServerScheme scheme = 2;
  // valid when need_token is true
  string get_token_url_path = 3;
  string download_file_url_path = 4;
  repeated SentinelLibrary libraries = 5;
  message SentinelLibrary {
    int64 id = 1;
    string download_base_path = 2;
  }
  enum ServerScheme {
    SERVER_SCHEME_UNSPECIFIED = 0;
    SERVER_SCHEME_HTTP = 1;
    SERVER_SCHEME_HTTPS = 2;
  }
}

message ReportSentinelInformationResponse {}

message ReportAppBinariesRequest {
  repeated SentinelAppBinary sentinel_app_binaries = 1;
  message SentinelAppBinary {
    AppBinary app_binary = 1;
    int64 sentinel_library_id = 2;
    string sentinel_generated_id = 3;
  }
}

message ReportAppBinariesResponse {}