syntax = "proto3";

package librarian.sephirah.v1.porter;

import "librarian/v1/common.proto";
import "librarian/v1/wellknown.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.Sephirah.V1.Porter";
option go_package = "github.com/tuihub/protos/pkg/librarian/sephirah/v1/porter;v1";

service LibrarianSephirahPorterService {
  // `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

  // `Tiphereth` `Porter` Obtain access_token of a specific user after user authorization.
  // This token can be used to perform actions on behalf of the user.
  rpc AcquireUserToken(AcquireUserTokenRequest) returns (AcquireUserTokenResponse);

  // `Netzach` `Porter`
  rpc GetNotifyTargetItems(GetNotifyTargetItemsRequest) returns (GetNotifyTargetItemsResponse);

  // `Yesod` `Porter`
  rpc UpsertFeed(UpsertFeedRequest) returns (UpsertFeedResponse);
  // `Yesod` `Porter`
  rpc GetFeed(GetFeedRequest) returns (GetFeedResponse);
}

message RefreshTokenRequest {}
message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message AcquireUserTokenRequest {
  librarian.v1.InternalID user_id = 1;
}

message AcquireUserTokenResponse {
  string access_token = 1;
}

message GetNotifyTargetItemsRequest {
  librarian.v1.InternalID id = 1;
  librarian.v1.PagingRequest paging = 2;
}
message GetNotifyTargetItemsResponse {
  librarian.v1.PagingResponse paging = 1;
  librarian.v1.FeatureRequest destination = 2;
  repeated librarian.v1.FeedItem items = 3;
}

message UpsertFeedRequest {
  librarian.v1.InternalID id = 1;
  librarian.v1.Feed data = 2;
}

message UpsertFeedResponse {}

message GetFeedRequest {
  librarian.v1.InternalID id = 1;
}

message GetFeedResponse {
  librarian.v1.Feed data = 1;
}
