syntax = "proto3";

package librarian.sephirah.v1;

import "google/protobuf/duration.proto";
import "librarian/sephirah/v1/base.proto";
import "librarian/v1/common.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.Sephirah.V1";
option go_package = "github.com/tuihub/protos/pkg/librarian/sephirah/v1;v1";

message CreateAppRequest {
  // `id` can be anything, `internal` must be true
  librarian.v1.App app = 1;
}
message CreateAppResponse {
  librarian.v1.InternalID id = 1;
}

message UpdateAppRequest {
  // `internal` must be true
  librarian.v1.App app = 1;
}

message UpdateAppResponse {}

message ListAppsRequest {
  librarian.v1.PagingRequest paging = 1;
  bool exclude_internal = 2;
  repeated string source_filter = 3;
  repeated librarian.v1.AppType type_filter = 4;
  repeated librarian.v1.InternalID id_filter = 5;
  bool contain_details = 6;
}

message ListAppsResponse {
  librarian.v1.PagingResponse paging = 1;
  repeated librarian.v1.App apps = 2;
}

message SyncAppsRequest {
  librarian.v1.AppID app_id = 1;
}

message SyncAppsResponse {}

message MergeAppsRequest {
  // `internal` must be true
  librarian.v1.App base = 1;
  // Must be internal app.
  // The InternalID will be dropped after merge.
  // Other apps bind to this app will rebind to base.
  librarian.v1.InternalID merged = 2;
}

message MergeAppsResponse {}

message PickAppRequest {
  // `internal` must be false
  librarian.v1.InternalID picked = 1;
}

message PickAppResponse {}

message SyncAccountAppsRequest {
  librarian.v1.AccountID account_id = 1;
}

message SyncAccountAppsResponse {}

message SearchAppsRequest {
  librarian.v1.PagingRequest paging = 1;
  string keywords = 2;
}
message SearchAppsResponse {
  librarian.v1.PagingResponse paging = 1;
  // without details
  repeated librarian.v1.AppMixed apps = 2;
}

message GetAppRequest {
  librarian.v1.InternalID app_id = 1;
}

message GetAppResponse {
  librarian.v1.App app = 1;
}

message GetBoundAppsRequest {
  librarian.v1.InternalID app_id = 1;
}

message GetBoundAppsResponse {
  repeated librarian.v1.App apps = 1;
}

message PurchaseAppRequest {
  // `internal` must be true
  librarian.v1.InternalID app_id = 1;
}

message PurchaseAppResponse {}

message GetPurchasedAppsRequest {
  optional string source = 1;
}
message GetPurchasedAppsResponse {
  // without details
  repeated librarian.v1.AppMixed apps = 1;
}

message CreateAppPackageRequest {
  librarian.v1.AppPackage app_package = 1;
}

message CreateAppPackageResponse {
  librarian.v1.InternalID id = 1;
}

message UpdateAppPackageRequest {
  librarian.v1.AppPackage app_package = 1;
}

message UpdateAppPackageResponse {}

message ListAppPackagesRequest {
  librarian.v1.PagingRequest paging = 1;
  repeated librarian.v1.AppPackageSource source_filter = 2;
  repeated librarian.v1.InternalID id_filter = 3;
  repeated librarian.v1.InternalID assigned_app_id_filter = 4;
}

message ListAppPackagesResponse {
  librarian.v1.PagingResponse paging = 1;
  repeated librarian.v1.AppPackage app_packages = 2;
}

message ReportAppPackagesRequest {
  message SentinelAppPackageBinary {
    // Sentinel generated id, not InternalId
    int64 id = 1;
    librarian.v1.AppPackageBinary app_package_binary = 2;
  }
  repeated SentinelAppPackageBinary sentinel_app_package_binaries = 1;
}

message ReportAppPackagesResponse {}

message AssignAppPackageRequest {
  // `internal` must be true
  librarian.v1.InternalID app_id = 1;
  librarian.v1.InternalID app_package_id = 2;
}

message AssignAppPackageResponse {}

message UnAssignAppPackageRequest {
  librarian.v1.InternalID app_package_id = 1;
}

message UnAssignAppPackageResponse {}

message AddAppPackageRunTimeRequest {
  librarian.v1.InternalID app_package_id = 1;
  librarian.v1.TimeRange time_range = 2;
}

message AddAppPackageRunTimeResponse {}

message SumAppPackageRunTimeRequest {
  librarian.v1.InternalID app_package_id = 1;
  librarian.v1.TimeAggregation time_aggregation = 2;
}

message SumAppPackageRunTimeResponse {
  message Group {
    librarian.v1.TimeRange time_range = 1;
    google.protobuf.Duration duration = 2;
  }
  repeated Group run_time_groups = 1;
}

message UploadGameSaveFileRequest {
  FileMetadata file_metadata = 1;
  librarian.v1.InternalID app_package_id = 2;
}

message UploadGameSaveFileResponse {
  string upload_token = 1;
}

message DownloadGameSaveFileRequest {
  librarian.v1.InternalID id = 1;
}

message DownloadGameSaveFileResponse {
  string download_token = 2;
}

message ListGameSaveFilesRequest {
  librarian.v1.InternalID app_package_id = 1;
}

message ListGameSaveFilesResponse {
  message Result {
    FileMetadata file = 1;
    bool pinned = 2;
  }
  repeated Result results = 1;
}

message RemoveGameSaveFileRequest {
  librarian.v1.InternalID id = 1;
}

message RemoveGameSaveFileResponse {}

message PinGameSaveFileRequest {
  librarian.v1.InternalID id = 1;
}

message PinGameSaveFileResponse {}

message UnpinGameSaveFileRequest {
  librarian.v1.InternalID id = 1;
}

message UnpinGameSaveFileResponse {}

message SetUserSaveFileCapacityRequest {
  librarian.v1.InternalID user_id = 1;
  // set null to restore server default value
  optional int64 capacity_bytes = 2;
}

message SetUserSaveFileCapacityResponse {}

message SetSaveFileRotationRequest {
  // don't care if valid_scope is VAILD_SCOPE_ACCOUNT
  librarian.v1.InternalID entity_id = 1;
  VaildScope vaild_scope = 2;
  int64 count = 3;
  // set false to disable save file rotation(unlimited save file)
  bool enabled = 4;
}

enum VaildScope {
  VAILD_SCOPE_UNSPECIFIED = 0;
  VAILD_SCOPE_ACCOUNT = 1;
  VAILD_SCOPE_APP = 2;
  VAILD_SCOPE_APP_PACKAGE = 3;
}

message SetSaveFileRotationResponse {}

message ListAppCategoriesRequest {}

message ListAppCategoriesResponse {
  repeated librarian.v1.AppCategory app_categories = 1;
}

message CreateAppCategoryRequest {
  librarian.v1.AppCategory app_category = 1;
}

message CreateAppCategoryResponse {
  librarian.v1.InternalID id = 1;
}

message UpdateAppCategoryRequest {
  librarian.v1.AppCategory app_category = 1;
}

message UpdateAppCategoryResponse {}

message RemoveAppCategoryRequest {
  librarian.v1.InternalID id = 1;
}

message RemoveAppCategoryResponse {}
