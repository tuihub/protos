syntax = "proto3";

package librarian.v1;

import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.V1";
option go_package = "github.com/tuihub/protos/pkg/librarian/v1;v1";

extend google.protobuf.EnumValueOptions {
  string to_string = 1000;
}

message PagingRequest {
  // start from 1, not 0
  int64 page_num = 1 [(buf.validate.field).int64.gt = 0];
  int64 page_size = 2 [(buf.validate.field).int64.gt = 0];
}

message PagingResponse {
  int64 total_size = 1 [(buf.validate.field).int64.gte = 0];
}

// half-open e.g.
// {
//   start_time: "2023.01.01 00:00",
//   duration: "1d"
// }
// means the whole day of 2023.1.1;
// or [2023.01.01 00:00 , 2023.01.02 00:00)
message TimeRange {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Duration duration = 2 [(buf.validate.field).duration.gte = {seconds: 0}];
}

// A globally unique identifier
message InternalID {
  int64 id = 1;
}

message I18NString {
  // The key of the string. MUST only contain a-zA-Z0-9_.-
  string key = 1;
  // The default value of the string.
  string value = 2;
}

message FileMetadata {
  librarian.v1.InternalID id = 1;
  string name = 2;
  int64 size_bytes = 3;
  FileType type = 4;
  bytes sha256 = 5;
  google.protobuf.Timestamp create_time = 6;
}

enum FileType {
  FILE_TYPE_UNSPECIFIED = 0;
  FILE_TYPE_GEBURA_SAVE = 1;
  FILE_TYPE_CHESED_IMAGE = 2;
  FILE_TYPE_GEBURA_APP_INFO_IMAGE = 3;
}

// FeatureFlag is used to identify features.
// It will also be sent to clients for UI display.
message FeatureFlag {
  // Global identifier to each feature.
  // It is recommended to use ASCII characters only.
  string id = 1;
  // Human-readable name
  string name = 2;
  // Human-readable description
  string description = 3;
  // Customized JSON schema for feature
  string config_json_schema = 4;
  // Require context to use this feature
  bool require_context = 5;
  // Extra information
  map<string, string> extra = 6;
}

// FeatureRequest is used to deliver feature-related request parameters.
message FeatureRequest {
  // See `FeatureFlag.id`
  string id = 1;
  // See `FeatureFlag.region`
  string region = 2;
  // Configuration JSON, must be validated by schema
  string config_json = 3;
  // Require if feature needs context
  optional InternalID context_id = 4;
}

message FeatureSummary {
  // WellKnownAccountPlatform
  repeated librarian.v1.FeatureFlag account_platforms = 1;
  // WellKnownAppInfoSource
  repeated librarian.v1.FeatureFlag app_info_sources = 2;
  // WellKnownFeedSource
  repeated librarian.v1.FeatureFlag feed_sources = 3;
  // WellKnownNotifySource
  repeated librarian.v1.FeatureFlag notify_source = 8;
  // WellKnownNotifyDestination
  repeated librarian.v1.FeatureFlag notify_destinations = 4;
  // WellKnownFeedItemAction
  repeated librarian.v1.FeatureFlag feed_item_actions = 5;
  repeated librarian.v1.FeatureFlag feed_setters = 6;
  repeated librarian.v1.FeatureFlag feed_getters = 7;
}

enum WellKnownAccountPlatform {
  WELL_KNOWN_ACCOUNT_PLATFORM_UNSPECIFIED = 0 [(to_string) = ""];
  WELL_KNOWN_ACCOUNT_PLATFORM_STEAM = 1 [(to_string) = "steam"];
}

enum WellKnownAppInfoSource {
  WELL_KNOWN_APP_INFO_SOURCE_UNSPECIFIED = 0 [(to_string) = ""];
  WELL_KNOWN_APP_INFO_SOURCE_STEAM = 2 [(to_string) = "steam"];
  WELL_KNOWN_APP_INFO_SOURCE_VNDB = 3 [(to_string) = "vndb"];
  WELL_KNOWN_APP_INFO_SOURCE_BANGUMI = 4 [(to_string) = "bangumi"];
}

enum WellKnownFeedSource {
  WELL_KNOWN_FEED_SOURCE_UNSPECIFIED = 0 [(to_string) = ""];
  WELL_KNOWN_FEED_SOURCE_RSS = 1 [(to_string) = "rss"];
}

enum WellKnownNotifySource {
  WELL_KNOWN_NOTIFY_SOURCE_UNSPECIFIED = 0 [(to_string) = ""];
  WELL_KNOWN_NOTIFY_SOURCE_FEED = 1 [(to_string) = "feed"];
  WELL_KNOWN_NOTIFY_SOURCE_FEED_TAG = 2 [(to_string) = "feed_tag"];
}

enum WellKnownNotifyDestination {
  WELL_KNOWN_NOTIFY_DESTINATION_UNSPECIFIED = 0 [(to_string) = ""];
  WELL_KNOWN_NOTIFY_DESTINATION_TELEGRAM = 1 [(to_string) = "telegram"];
  WELL_KNOWN_NOTIFY_DESTINATION_RSS = 2 [(to_string) = "rss"];
}

enum WellKnownFeedItemAction {
  WELL_KNOWN_FEED_ITEM_ACTION_UNSPECIFIED = 0 [(to_string) = ""];
  // filter item by keywords
  WELL_KNOWN_FEED_ITEM_ACTION_KEYWORD_FILTER = 1 [(to_string) = "keyword_filter"];
  // generate description form content
  WELL_KNOWN_FEED_ITEM_ACTION_DESCRIPTION_GENERATOR = 2 [(to_string) = "description_generator"];
}
