syntax = "proto3";

package librarian.v1;

import "google/protobuf/timestamp.proto";
import "librarian/v1/wellknown.proto";

option csharp_namespace = "TuiHub.Protos.Librarian.V1";
option go_package = "github.com/tuihub/protos/pkg/librarian/v1;v1";

message Feed {
  InternalID id = 1;
  // `standard field`
  string title = 2;
  // `standard field`
  string link = 3;
  // `standard field`
  string description = 4;
  // `standard field`
  repeated FeedItem items = 5;

  // `standard field`
  string language = 6;
  // `standard field`
  FeedImage image = 7;
  // `standard field`
  repeated FeedPerson authors = 8;
}

message FeedItem {
  InternalID id = 1;
  // `standard field`
  string title = 2;
  // `standard field`
  repeated FeedPerson authors = 3;
  // `standard field`
  string description = 4;
  // `standard field`
  string content = 5;
  // `standard field`
  string guid = 6;
  // `standard field`. e.g. https://github.com/TuiHub/Librarian/releases.atom
  string link = 7;
  // `standard field`
  FeedImage image = 8;
  // `standard field`
  string published = 9;
  // must valid when send to client.
  // if server failed to generate, fallback to server time.
  optional google.protobuf.Timestamp published_parsed = 10;
  // `standard field`
  string updated = 11;
  optional google.protobuf.Timestamp updated_parsed = 12;
  // `standard field`
  repeated FeedEnclosure enclosures = 13;
  // hostname of `link`. e.g. github.com
  string publish_platform = 14;
  // recorded read times
  int64 read_count = 15;
  // tags
  repeated string tags = 16;
}

// Person is an individual specified in a feed
// (e.g. an author)
message FeedPerson {
  // `standard field`
  string name = 1;
  // `standard field`
  string email = 2;
}

// Image is an image that is the artwork for a given
// feed or item.
message FeedImage {
  // `standard field`
  string url = 1;
  // `standard field`
  string title = 2;
}

// Enclosure is a file associated with a given Item.
message FeedEnclosure {
  // `standard field`
  string url = 1;
  // `standard field`
  string length = 2;
  // `standard field`
  string type = 3;
}

message PorterBinarySummary {
  // Server source code address.
  // *Should* be a valid http address.
  string source_code_address = 1;
  // Binary build version.
  // The content *should* be a semantic version string similar to the one generated by `git describe`,
  // but rely on the actual implementation.
  string build_version = 2;
  // Binary build date.
  // The content *should* be a date format that is human-readable.
  string build_date = 3;
  // Human-readable name. plain text.
  string name = 4;
  // Human-readable version. plain text.
  string version = 5;
  // Human-readable description. plain text or markdown.
  string description = 6;
}
