// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: librarian/v0/librarian.proto

package librarian

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReq) Reset()         { *m = PingReq{} }
func (m *PingReq) String() string { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()    {}
func (*PingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd59e1fa82a7926, []int{0}
}
func (m *PingReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PingReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReq.Merge(m, src)
}
func (m *PingReq) XXX_Size() int {
	return m.Size()
}
func (m *PingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReq.DiscardUnknown(m)
}

var xxx_messageInfo_PingReq proto.InternalMessageInfo

type PingResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResp) Reset()         { *m = PingResp{} }
func (m *PingResp) String() string { return proto.CompactTextString(m) }
func (*PingResp) ProtoMessage()    {}
func (*PingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd59e1fa82a7926, []int{1}
}
func (m *PingResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PingResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PingResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PingResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResp.Merge(m, src)
}
func (m *PingResp) XXX_Size() int {
	return m.Size()
}
func (m *PingResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResp.DiscardUnknown(m)
}

var xxx_messageInfo_PingResp proto.InternalMessageInfo

type GetTokenReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Base                 *BaseReq `protobuf:"bytes,2047,opt,name=Base,proto3" json:"Base,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenReq) Reset()         { *m = GetTokenReq{} }
func (m *GetTokenReq) String() string { return proto.CompactTextString(m) }
func (*GetTokenReq) ProtoMessage()    {}
func (*GetTokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd59e1fa82a7926, []int{2}
}
func (m *GetTokenReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTokenReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenReq.Merge(m, src)
}
func (m *GetTokenReq) XXX_Size() int {
	return m.Size()
}
func (m *GetTokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenReq proto.InternalMessageInfo

func (m *GetTokenReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetTokenReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *GetTokenReq) GetBase() *BaseReq {
	if m != nil {
		return m.Base
	}
	return nil
}

type GetTokenResp struct {
	Token                string    `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	Base                 *BaseResp `protobuf:"bytes,2047,opt,name=Base,proto3" json:"Base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTokenResp) Reset()         { *m = GetTokenResp{} }
func (m *GetTokenResp) String() string { return proto.CompactTextString(m) }
func (*GetTokenResp) ProtoMessage()    {}
func (*GetTokenResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cd59e1fa82a7926, []int{3}
}
func (m *GetTokenResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTokenResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTokenResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTokenResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenResp.Merge(m, src)
}
func (m *GetTokenResp) XXX_Size() int {
	return m.Size()
}
func (m *GetTokenResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenResp proto.InternalMessageInfo

func (m *GetTokenResp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetTokenResp) GetBase() *BaseResp {
	if m != nil {
		return m.Base
	}
	return nil
}

func init() {
	proto.RegisterType((*PingReq)(nil), "librarian.PingReq")
	proto.RegisterType((*PingResp)(nil), "librarian.PingResp")
	proto.RegisterType((*GetTokenReq)(nil), "librarian.GetTokenReq")
	proto.RegisterType((*GetTokenResp)(nil), "librarian.GetTokenResp")
}

func init() { proto.RegisterFile("librarian/v0/librarian.proto", fileDescriptor_5cd59e1fa82a7926) }

var fileDescriptor_5cd59e1fa82a7926 = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x95, 0x5d, 0x6f, 0x12, 0x4f,
	0x14, 0xc6, 0xff, 0xfb, 0x4f, 0xb5, 0x70, 0xa8, 0x2f, 0x39, 0x55, 0xa0, 0x0b, 0x12, 0xe4, 0x46,
	0x6e, 0x04, 0x53, 0x6f, 0x4c, 0x4c, 0x4c, 0xc0, 0x26, 0x4d, 0x4c, 0x35, 0xcd, 0xd6, 0x5e, 0xe8,
	0x8d, 0xd9, 0xed, 0x4e, 0xda, 0x8d, 0xb0, 0x7b, 0xd8, 0xb3, 0xe0, 0x57, 0xf1, 0x23, 0x79, 0xe9,
	0x47, 0x30, 0x98, 0xf8, 0x35, 0x34, 0xc3, 0xec, 0xcb, 0xec, 0xb0, 0xe8, 0x1d, 0xf3, 0xfc, 0xce,
	0x79, 0xce, 0x79, 0x26, 0x03, 0x40, 0x77, 0x16, 0x78, 0xb1, 0x1b, 0x07, 0x6e, 0x38, 0x5e, 0x3d,
	0x1b, 0xe7, 0x87, 0x11, 0xc5, 0x51, 0x12, 0x61, 0x3d, 0x17, 0xec, 0x56, 0xa9, 0x70, 0xc9, 0x22,
	0x56, 0x35, 0x76, 0xb3, 0x04, 0x5c, 0xa2, 0x54, 0xef, 0x94, 0x74, 0x16, 0x61, 0x12, 0x84, 0x62,
	0x96, 0xc2, 0xb2, 0x9b, 0xe7, 0xb2, 0xa8, 0xec, 0x72, 0x89, 0x3e, 0x79, 0x41, 0xe8, 0x2b, 0x38,
	0xa8, 0xc3, 0xfe, 0x79, 0x10, 0x5e, 0x3b, 0x62, 0x31, 0x00, 0xa8, 0xa9, 0x8f, 0x4c, 0x83, 0x10,
	0x1a, 0xa7, 0x22, 0x79, 0x1f, 0x7d, 0x16, 0xa1, 0x23, 0x16, 0x68, 0x43, 0xed, 0x92, 0x45, 0x1c,
	0xba, 0x73, 0xd1, 0xb6, 0xfa, 0xd6, 0xb0, 0xee, 0xe4, 0x67, 0xc9, 0xce, 0x5d, 0xe6, 0x2f, 0x51,
	0xec, 0xb7, 0xff, 0x57, 0x2c, 0x3b, 0xe3, 0x13, 0xd8, 0x9b, 0xba, 0x2c, 0xda, 0xbf, 0xef, 0xf5,
	0xad, 0x61, 0xe3, 0x18, 0x47, 0xc5, 0x6d, 0x48, 0xdd, 0x11, 0x0b, 0x67, 0x53, 0x30, 0x78, 0x07,
	0x07, 0xc5, 0x3c, 0x26, 0x7c, 0x00, 0xb7, 0x36, 0x87, 0x74, 0x9a, 0x3a, 0xe0, 0xb0, 0x6c, 0x77,
	0xb8, 0x65, 0xc7, 0xa4, 0xfc, 0x8e, 0x7f, 0xd5, 0xe1, 0xfe, 0x59, 0x06, 0x2f, 0x44, 0xbc, 0x0a,
	0xae, 0x04, 0x8e, 0x61, 0x4f, 0x06, 0x44, 0x7d, 0x8d, 0x34, 0xbc, 0x7d, 0xb8, 0xa5, 0x31, 0xe1,
	0x4b, 0xa8, 0x65, 0x5b, 0x61, 0x53, 0x2b, 0xd0, 0xae, 0xc6, 0x6e, 0x55, 0xea, 0x4c, 0x38, 0x01,
	0x78, 0x1d, 0x0b, 0x37, 0x11, 0xf2, 0xa6, 0xb0, 0xad, 0x95, 0x15, 0xb2, 0x34, 0x38, 0xda, 0x41,
	0x94, 0xc5, 0x25, 0xf9, 0x55, 0x16, 0x85, 0x6c, 0x5a, 0xe8, 0x44, 0x45, 0x38, 0x0b, 0x38, 0xd9,
	0x18, 0xe8, 0x11, 0x32, 0xd1, 0x8c, 0x50, 0xe8, 0x6a, 0xfe, 0x89, 0x98, 0x89, 0x8a, 0xf9, 0x85,
	0x6c, 0xce, 0xd7, 0x09, 0x13, 0xbe, 0x82, 0xba, 0x0a, 0x35, 0x21, 0xc2, 0xd6, 0x56, 0xd4, 0x09,
	0x91, 0x34, 0x68, 0x57, 0x03, 0xd5, 0xaf, 0x12, 0x99, 0xfd, 0xb9, 0x6a, 0xf6, 0x6b, 0x80, 0x09,
	0x5f, 0xc0, 0xbe, 0x8c, 0x24, 0xbb, 0x1f, 0x1a, 0x31, 0xd3, 0xde, 0x66, 0x95, 0xac, 0x26, 0xab,
	0x2c, 0xe6, 0xe4, 0x5c, 0x35, 0x27, 0x6b, 0x80, 0x09, 0xdf, 0xc2, 0x5d, 0x15, 0xe5, 0x22, 0xfd,
	0x9e, 0x62, 0x77, 0x2b, 0x65, 0x86, 0xa4, 0xd3, 0xa3, 0xbf, 0x50, 0x65, 0xa7, 0x92, 0x55, 0xda,
	0x95, 0x91, 0x69, 0x67, 0x52, 0x26, 0x3c, 0x85, 0x03, 0x19, 0x36, 0x37, 0xb3, 0x8d, 0x5b, 0xd0,
	0xad, 0x3a, 0x3b, 0x99, 0xda, 0x4b, 0xe5, 0xae, 0xdc, 0xab, 0x8c, 0xcc, 0xbd, 0x4c, 0xca, 0x84,
	0x1f, 0x00, 0xcb, 0x23, 0x28, 0x8a, 0x13, 0xec, 0xef, 0xdc, 0x40, 0x62, 0x69, 0xfb, 0xf8, 0x1f,
	0x15, 0xea, 0x35, 0x4f, 0x7c, 0x7f, 0x42, 0x34, 0x0d, 0x42, 0xbf, 0xf4, 0x9a, 0x0b, 0xd9, 0x7c,
	0xcd, 0x3a, 0x61, 0xc2, 0x37, 0x70, 0xc7, 0x11, 0xf3, 0x68, 0x25, 0x32, 0x17, 0xfd, 0x6a, 0x4a,
	0x44, 0x1a, 0x75, 0x77, 0x43, 0x26, 0x3c, 0x81, 0x46, 0xfa, 0xdc, 0x36, 0x4e, 0x47, 0xdb, 0xcf,
	0x30, 0xf3, 0xb1, 0x77, 0x21, 0xa6, 0xe9, 0xd3, 0x6f, 0xeb, 0x9e, 0xf5, 0x7d, 0xdd, 0xb3, 0x7e,
	0xac, 0x7b, 0xd6, 0xd7, 0x9f, 0xbd, 0xff, 0x3e, 0x76, 0xae, 0x83, 0xe4, 0x66, 0xe9, 0x8d, 0xae,
	0xa2, 0xf9, 0x38, 0x59, 0x06, 0x37, 0x4b, 0xaf, 0xf8, 0x0f, 0xf2, 0x6e, 0x6f, 0x7e, 0xf5, 0x9f,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x19, 0x14, 0x46, 0x2b, 0xa4, 0x06, 0x00, 0x00,
}

func (m *PingReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PingReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PingReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *PingResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PingResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PingResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetTokenReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTokenReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTokenReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLibrarian(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7f
		i--
		dAtA[i] = 0xfa
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintLibrarian(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintLibrarian(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetTokenResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTokenResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTokenResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLibrarian(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7f
		i--
		dAtA[i] = 0xfa
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintLibrarian(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLibrarian(dAtA []byte, offset int, v uint64) int {
	offset -= sovLibrarian(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PingReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PingResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTokenReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovLibrarian(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovLibrarian(uint64(l))
	}
	if m.Base != nil {
		l = m.Base.Size()
		n += 2 + l + sovLibrarian(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTokenResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovLibrarian(uint64(l))
	}
	if m.Base != nil {
		l = m.Base.Size()
		n += 2 + l + sovLibrarian(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovLibrarian(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLibrarian(x uint64) (n int) {
	return sovLibrarian(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PingReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrarian
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PingReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PingReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipLibrarian(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLibrarian
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PingResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrarian
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PingResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PingResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipLibrarian(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLibrarian
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTokenReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrarian
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTokenReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTokenReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLibrarian
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLibrarian
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLibrarian
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLibrarian
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2047:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLibrarian
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLibrarian
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseReq{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLibrarian(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLibrarian
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTokenResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrarian
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTokenResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTokenResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLibrarian
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLibrarian
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2047:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLibrarian
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLibrarian
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseResp{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLibrarian(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLibrarian
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLibrarian(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLibrarian
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLibrarian
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLibrarian
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLibrarian
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLibrarian
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLibrarian        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLibrarian          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLibrarian = fmt.Errorf("proto: unexpected end of group")
)
