// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: librarian/v0/base.proto

package librarian

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_Reserved_Unexpected Status = 0
	Status_Delete              Status = 1
	Status_Active              Status = 2
	Status_Disable             Status = 3
)

var Status_name = map[int32]string{
	0: "Reserved_Unexpected",
	1: "Delete",
	2: "Active",
	3: "Disable",
}

var Status_value = map[string]int32{
	"Reserved_Unexpected": 0,
	"Delete":              1,
	"Active":              2,
	"Disable":             3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4636f9861d440d33, []int{0}
}

type BaseReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseReq) Reset()         { *m = BaseReq{} }
func (m *BaseReq) String() string { return proto.CompactTextString(m) }
func (*BaseReq) ProtoMessage()    {}
func (*BaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4636f9861d440d33, []int{0}
}
func (m *BaseReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BaseReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseReq.Merge(m, src)
}
func (m *BaseReq) XXX_Size() int {
	return m.Size()
}
func (m *BaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_BaseReq proto.InternalMessageInfo

type BaseResp struct {
	// Types that are valid to be assigned to XStatusCode:
	//	*BaseResp_StatusCode
	XStatusCode isBaseResp_XStatusCode `protobuf_oneof:"_StatusCode"`
	// Types that are valid to be assigned to XStatusMsg:
	//	*BaseResp_StatusMsg
	XStatusMsg           isBaseResp_XStatusMsg `protobuf_oneof:"_StatusMsg"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BaseResp) Reset()         { *m = BaseResp{} }
func (m *BaseResp) String() string { return proto.CompactTextString(m) }
func (*BaseResp) ProtoMessage()    {}
func (*BaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4636f9861d440d33, []int{1}
}
func (m *BaseResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BaseResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResp.Merge(m, src)
}
func (m *BaseResp) XXX_Size() int {
	return m.Size()
}
func (m *BaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResp proto.InternalMessageInfo

type isBaseResp_XStatusCode interface {
	isBaseResp_XStatusCode()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isBaseResp_XStatusMsg interface {
	isBaseResp_XStatusMsg()
	MarshalTo([]byte) (int, error)
	Size() int
}

type BaseResp_StatusCode struct {
	StatusCode int32 `protobuf:"varint,1,opt,name=StatusCode,proto3,oneof" json:"StatusCode,omitempty"`
}
type BaseResp_StatusMsg struct {
	StatusMsg string `protobuf:"bytes,2,opt,name=StatusMsg,proto3,oneof" json:"StatusMsg,omitempty"`
}

func (*BaseResp_StatusCode) isBaseResp_XStatusCode() {}
func (*BaseResp_StatusMsg) isBaseResp_XStatusMsg()   {}

func (m *BaseResp) GetXStatusCode() isBaseResp_XStatusCode {
	if m != nil {
		return m.XStatusCode
	}
	return nil
}
func (m *BaseResp) GetXStatusMsg() isBaseResp_XStatusMsg {
	if m != nil {
		return m.XStatusMsg
	}
	return nil
}

func (m *BaseResp) GetStatusCode() int32 {
	if x, ok := m.GetXStatusCode().(*BaseResp_StatusCode); ok {
		return x.StatusCode
	}
	return 0
}

func (m *BaseResp) GetStatusMsg() string {
	if x, ok := m.GetXStatusMsg().(*BaseResp_StatusMsg); ok {
		return x.StatusMsg
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BaseResp) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BaseResp_StatusCode)(nil),
		(*BaseResp_StatusMsg)(nil),
	}
}

func init() {
	proto.RegisterEnum("librarian.Status", Status_name, Status_value)
	proto.RegisterType((*BaseReq)(nil), "librarian.BaseReq")
	proto.RegisterType((*BaseResp)(nil), "librarian.BaseResp")
}

func init() { proto.RegisterFile("librarian/v0/base.proto", fileDescriptor_4636f9861d440d33) }

var fileDescriptor_4636f9861d440d33 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0x02, 0x41,
	0x18, 0xc7, 0xfd, 0x56, 0xd2, 0xf6, 0x33, 0x61, 0x99, 0x08, 0x85, 0x60, 0x31, 0xbb, 0x48, 0x07,
	0x37, 0xe8, 0x09, 0x9a, 0xa4, 0x3c, 0x28, 0xc8, 0x46, 0x20, 0x11, 0xc8, 0xcc, 0xee, 0x87, 0x0e,
	0xa8, 0x63, 0x3b, 0xb3, 0xd2, 0x23, 0x08, 0xbd, 0x40, 0xe7, 0x8e, 0x3d, 0x49, 0x74, 0xea, 0x11,
	0x62, 0xbb, 0xf5, 0x14, 0x61, 0xd2, 0xea, 0xed, 0x37, 0xbf, 0xff, 0x7f, 0x0e, 0xff, 0x0f, 0x6b,
	0x53, 0x25, 0x13, 0x91, 0x28, 0x31, 0x0f, 0x96, 0xe7, 0x81, 0x14, 0x86, 0xda, 0x8b, 0x44, 0x5b,
	0xcd, 0xdc, 0x3c, 0x68, 0xba, 0x58, 0xe6, 0xc2, 0x50, 0x48, 0x8f, 0x4d, 0x8d, 0xfb, 0x1b, 0x34,
	0x0b, 0x76, 0x8a, 0x78, 0x6b, 0x85, 0x4d, 0xcd, 0x95, 0x8e, 0xa9, 0x0e, 0x0d, 0x68, 0xed, 0x75,
	0x0b, 0xe1, 0x8e, 0x5b, 0x01, 0xb0, 0x13, 0x74, 0x37, 0xa2, 0x6f, 0xc6, 0x75, 0xa7, 0x01, 0x2d,
	0xb7, 0x0b, 0xe1, 0x56, 0xad, 0x00, 0x78, 0x15, 0x2b, 0xa3, 0xed, 0x27, 0x7e, 0x80, 0x38, 0xca,
	0xf3, 0xb3, 0x6b, 0x2c, 0x6d, 0x1e, 0xac, 0x86, 0x87, 0x21, 0x19, 0x4a, 0x96, 0x14, 0x8f, 0xee,
	0xe6, 0xf4, 0xb4, 0xa0, 0xc8, 0x52, 0xec, 0x15, 0x18, 0x62, 0xa9, 0x43, 0x53, 0xb2, 0xe4, 0xc1,
	0x9a, 0x2f, 0x23, 0xab, 0x96, 0xe4, 0x39, 0xac, 0x82, 0xe5, 0x8e, 0x32, 0x42, 0x4e, 0xc9, 0x2b,
	0xf2, 0x67, 0x78, 0xcf, 0x7c, 0xf8, 0xcc, 0x7c, 0xf8, 0xca, 0x7c, 0x78, 0xf9, 0xf6, 0x0b, 0x58,
	0x8d, 0xf4, 0xac, 0x9d, 0xaf, 0xe4, 0xee, 0x7a, 0xd8, 0x60, 0xbd, 0x7d, 0x00, 0xf7, 0xc7, 0x63,
	0x65, 0x27, 0xa9, 0x6c, 0x47, 0x7a, 0x16, 0xd8, 0x54, 0x4d, 0x52, 0x19, 0xe4, 0xcd, 0x57, 0xa7,
	0xd8, 0x1b, 0x0e, 0xdf, 0x1c, 0xb7, 0xf7, 0x6f, 0x3e, 0x76, 0x38, 0x73, 0x8e, 0x72, 0x7e, 0xb8,
	0x19, 0xf0, 0x3e, 0x59, 0x11, 0x0b, 0x2b, 0x7e, 0x76, 0x3a, 0xb2, 0xf4, 0x77, 0xe3, 0x8b, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xc7, 0x65, 0x34, 0x7e, 0x01, 0x00, 0x00,
}

func (m *BaseReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BaseReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BaseReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *BaseResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BaseResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BaseResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.XStatusMsg != nil {
		{
			size := m.XStatusMsg.Size()
			i -= size
			if _, err := m.XStatusMsg.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.XStatusCode != nil {
		{
			size := m.XStatusCode.Size()
			i -= size
			if _, err := m.XStatusCode.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *BaseResp_StatusCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BaseResp_StatusCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintBase(dAtA, i, uint64(m.StatusCode))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *BaseResp_StatusMsg) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BaseResp_StatusMsg) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.StatusMsg)
	copy(dAtA[i:], m.StatusMsg)
	i = encodeVarintBase(dAtA, i, uint64(len(m.StatusMsg)))
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}
func encodeVarintBase(dAtA []byte, offset int, v uint64) int {
	offset -= sovBase(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BaseReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BaseResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XStatusCode != nil {
		n += m.XStatusCode.Size()
	}
	if m.XStatusMsg != nil {
		n += m.XStatusMsg.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BaseResp_StatusCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBase(uint64(m.StatusCode))
	return n
}
func (m *BaseResp_StatusMsg) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StatusMsg)
	n += 1 + l + sovBase(uint64(l))
	return n
}

func sovBase(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBase(x uint64) (n int) {
	return sovBase(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BaseReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BaseReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BaseReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BaseResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BaseResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BaseResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusCode", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.XStatusCode = &BaseResp_StatusCode{v}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.XStatusMsg = &BaseResp_StatusMsg{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBase(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBase
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBase
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBase
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBase
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBase        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBase          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBase = fmt.Errorf("proto: unexpected end of group")
)
