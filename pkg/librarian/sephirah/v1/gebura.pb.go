// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: librarian/sephirah/v1/gebura.proto

package v1

import (
	v1 "github.com/tuihub/protos/pkg/librarian/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppSaveFileCapacityStrategy int32

const (
	AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED                   AppSaveFileCapacityStrategy = 0
	AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_FAIL                          AppSaveFileCapacityStrategy = 1
	AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_DELETE_OLDEST                 AppSaveFileCapacityStrategy = 2
	AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_DELETE_OLDEST_UNTIL_SATISFIED AppSaveFileCapacityStrategy = 3
)

// Enum value maps for AppSaveFileCapacityStrategy.
var (
	AppSaveFileCapacityStrategy_name = map[int32]string{
		0: "APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED",
		1: "APP_SAVE_FILE_CAPACITY_STRATEGY_FAIL",
		2: "APP_SAVE_FILE_CAPACITY_STRATEGY_DELETE_OLDEST",
		3: "APP_SAVE_FILE_CAPACITY_STRATEGY_DELETE_OLDEST_UNTIL_SATISFIED",
	}
	AppSaveFileCapacityStrategy_value = map[string]int32{
		"APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED":                   0,
		"APP_SAVE_FILE_CAPACITY_STRATEGY_FAIL":                          1,
		"APP_SAVE_FILE_CAPACITY_STRATEGY_DELETE_OLDEST":                 2,
		"APP_SAVE_FILE_CAPACITY_STRATEGY_DELETE_OLDEST_UNTIL_SATISFIED": 3,
	}
)

func (x AppSaveFileCapacityStrategy) Enum() *AppSaveFileCapacityStrategy {
	p := new(AppSaveFileCapacityStrategy)
	*p = x
	return p
}

func (x AppSaveFileCapacityStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppSaveFileCapacityStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_sephirah_v1_gebura_proto_enumTypes[0].Descriptor()
}

func (AppSaveFileCapacityStrategy) Type() protoreflect.EnumType {
	return &file_librarian_sephirah_v1_gebura_proto_enumTypes[0]
}

func (x AppSaveFileCapacityStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppSaveFileCapacityStrategy.Descriptor instead.
func (AppSaveFileCapacityStrategy) EnumDescriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{0}
}

type ReportSentinelInformationRequest_ServerScheme int32

const (
	ReportSentinelInformationRequest_SERVER_SCHEME_UNSPECIFIED ReportSentinelInformationRequest_ServerScheme = 0
	ReportSentinelInformationRequest_SERVER_SCHEME_HTTP        ReportSentinelInformationRequest_ServerScheme = 1
	ReportSentinelInformationRequest_SERVER_SCHEME_HTTPS       ReportSentinelInformationRequest_ServerScheme = 2
)

// Enum value maps for ReportSentinelInformationRequest_ServerScheme.
var (
	ReportSentinelInformationRequest_ServerScheme_name = map[int32]string{
		0: "SERVER_SCHEME_UNSPECIFIED",
		1: "SERVER_SCHEME_HTTP",
		2: "SERVER_SCHEME_HTTPS",
	}
	ReportSentinelInformationRequest_ServerScheme_value = map[string]int32{
		"SERVER_SCHEME_UNSPECIFIED": 0,
		"SERVER_SCHEME_HTTP":        1,
		"SERVER_SCHEME_HTTPS":       2,
	}
)

func (x ReportSentinelInformationRequest_ServerScheme) Enum() *ReportSentinelInformationRequest_ServerScheme {
	p := new(ReportSentinelInformationRequest_ServerScheme)
	*p = x
	return p
}

func (x ReportSentinelInformationRequest_ServerScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportSentinelInformationRequest_ServerScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_sephirah_v1_gebura_proto_enumTypes[1].Descriptor()
}

func (ReportSentinelInformationRequest_ServerScheme) Type() protoreflect.EnumType {
	return &file_librarian_sephirah_v1_gebura_proto_enumTypes[1]
}

func (x ReportSentinelInformationRequest_ServerScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportSentinelInformationRequest_ServerScheme.Descriptor instead.
func (ReportSentinelInformationRequest_ServerScheme) EnumDescriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{32, 0}
}

type CreateAppInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `id` can be anything, `internal` must be true
	AppInfo       *v1.AppInfo `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppInfoRequest) Reset() {
	*x = CreateAppInfoRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppInfoRequest) ProtoMessage() {}

func (x *CreateAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAppInfoRequest) GetAppInfo() *v1.AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type CreateAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppInfoResponse) Reset() {
	*x = CreateAppInfoResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppInfoResponse) ProtoMessage() {}

func (x *CreateAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppInfoResponse.ProtoReflect.Descriptor instead.
func (*CreateAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAppInfoResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateAppInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `internal` must be true
	AppInfo       *v1.AppInfo `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppInfoRequest) Reset() {
	*x = UpdateAppInfoRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppInfoRequest) ProtoMessage() {}

func (x *UpdateAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAppInfoRequest) GetAppInfo() *v1.AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type UpdateAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppInfoResponse) Reset() {
	*x = UpdateAppInfoResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppInfoResponse) ProtoMessage() {}

func (x *UpdateAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{3}
}

type ListAppInfosRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Paging          *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ExcludeInternal bool                   `protobuf:"varint,2,opt,name=exclude_internal,json=excludeInternal,proto3" json:"exclude_internal,omitempty"`
	SourceFilter    []string               `protobuf:"bytes,3,rep,name=source_filter,json=sourceFilter,proto3" json:"source_filter,omitempty"`
	TypeFilter      []v1.AppType           `protobuf:"varint,4,rep,packed,name=type_filter,json=typeFilter,proto3,enum=librarian.v1.AppType" json:"type_filter,omitempty"`
	IdFilter        []*v1.InternalID       `protobuf:"bytes,5,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	ContainDetails  bool                   `protobuf:"varint,6,opt,name=contain_details,json=containDetails,proto3" json:"contain_details,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListAppInfosRequest) Reset() {
	*x = ListAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppInfosRequest) ProtoMessage() {}

func (x *ListAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppInfosRequest.ProtoReflect.Descriptor instead.
func (*ListAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{4}
}

func (x *ListAppInfosRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListAppInfosRequest) GetExcludeInternal() bool {
	if x != nil {
		return x.ExcludeInternal
	}
	return false
}

func (x *ListAppInfosRequest) GetSourceFilter() []string {
	if x != nil {
		return x.SourceFilter
	}
	return nil
}

func (x *ListAppInfosRequest) GetTypeFilter() []v1.AppType {
	if x != nil {
		return x.TypeFilter
	}
	return nil
}

func (x *ListAppInfosRequest) GetIdFilter() []*v1.InternalID {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

func (x *ListAppInfosRequest) GetContainDetails() bool {
	if x != nil {
		return x.ContainDetails
	}
	return false
}

type ListAppInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	AppInfos      []*v1.AppInfo          `protobuf:"bytes,2,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppInfosResponse) Reset() {
	*x = ListAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppInfosResponse) ProtoMessage() {}

func (x *ListAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppInfosResponse.ProtoReflect.Descriptor instead.
func (*ListAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{5}
}

func (x *ListAppInfosResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListAppInfosResponse) GetAppInfos() []*v1.AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type SyncAppInfosRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	AppInfoIds []*v1.AppInfoID        `protobuf:"bytes,1,rep,name=app_info_ids,json=appInfoIds,proto3" json:"app_info_ids,omitempty"`
	// if false, server will return immediately.
	// if true, server will return data after sync finished.
	WaitData      *bool `protobuf:"varint,2,opt,name=wait_data,json=waitData,proto3,oneof" json:"wait_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAppInfosRequest) Reset() {
	*x = SyncAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAppInfosRequest) ProtoMessage() {}

func (x *SyncAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAppInfosRequest.ProtoReflect.Descriptor instead.
func (*SyncAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{6}
}

func (x *SyncAppInfosRequest) GetAppInfoIds() []*v1.AppInfoID {
	if x != nil {
		return x.AppInfoIds
	}
	return nil
}

func (x *SyncAppInfosRequest) GetWaitData() bool {
	if x != nil && x.WaitData != nil {
		return *x.WaitData
	}
	return false
}

type SyncAppInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfos      []*v1.AppInfo          `protobuf:"bytes,1,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAppInfosResponse) Reset() {
	*x = SyncAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAppInfosResponse) ProtoMessage() {}

func (x *SyncAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAppInfosResponse.ProtoReflect.Descriptor instead.
func (*SyncAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{7}
}

func (x *SyncAppInfosResponse) GetAppInfos() []*v1.AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type MergeAppInfosRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `internal` must be true
	Base *v1.AppInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// Must be internal app.
	// The InternalID will be dropped after merge.
	// Other apps bind to this app will rebind to base.
	Merged        *v1.InternalID `protobuf:"bytes,2,opt,name=merged,proto3" json:"merged,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeAppInfosRequest) Reset() {
	*x = MergeAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeAppInfosRequest) ProtoMessage() {}

func (x *MergeAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeAppInfosRequest.ProtoReflect.Descriptor instead.
func (*MergeAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{8}
}

func (x *MergeAppInfosRequest) GetBase() *v1.AppInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MergeAppInfosRequest) GetMerged() *v1.InternalID {
	if x != nil {
		return x.Merged
	}
	return nil
}

type MergeAppInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeAppInfosResponse) Reset() {
	*x = MergeAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeAppInfosResponse) ProtoMessage() {}

func (x *MergeAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeAppInfosResponse.ProtoReflect.Descriptor instead.
func (*MergeAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{9}
}

type PickAppInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `internal` must be false
	Picked        *v1.InternalID `protobuf:"bytes,1,opt,name=picked,proto3" json:"picked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PickAppInfoRequest) Reset() {
	*x = PickAppInfoRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickAppInfoRequest) ProtoMessage() {}

func (x *PickAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickAppInfoRequest.ProtoReflect.Descriptor instead.
func (*PickAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{10}
}

func (x *PickAppInfoRequest) GetPicked() *v1.InternalID {
	if x != nil {
		return x.Picked
	}
	return nil
}

type PickAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PickAppInfoResponse) Reset() {
	*x = PickAppInfoResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickAppInfoResponse) ProtoMessage() {}

func (x *PickAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickAppInfoResponse.ProtoReflect.Descriptor instead.
func (*PickAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{11}
}

type SyncAccountAppInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     *v1.AccountID          `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAccountAppInfosRequest) Reset() {
	*x = SyncAccountAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAccountAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAccountAppInfosRequest) ProtoMessage() {}

func (x *SyncAccountAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAccountAppInfosRequest.ProtoReflect.Descriptor instead.
func (*SyncAccountAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{12}
}

func (x *SyncAccountAppInfosRequest) GetAccountId() *v1.AccountID {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type SyncAccountAppInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncAccountAppInfosResponse) Reset() {
	*x = SyncAccountAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAccountAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAccountAppInfosResponse) ProtoMessage() {}

func (x *SyncAccountAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAccountAppInfosResponse.ProtoReflect.Descriptor instead.
func (*SyncAccountAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{13}
}

type SearchAppInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAppInfosRequest) Reset() {
	*x = SearchAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppInfosRequest) ProtoMessage() {}

func (x *SearchAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppInfosRequest.ProtoReflect.Descriptor instead.
func (*SearchAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{14}
}

func (x *SearchAppInfosRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchAppInfosRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchAppInfosResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Paging *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// without details
	AppInfos      []*v1.AppInfoMixed `protobuf:"bytes,2,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAppInfosResponse) Reset() {
	*x = SearchAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppInfosResponse) ProtoMessage() {}

func (x *SearchAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppInfosResponse.ProtoReflect.Descriptor instead.
func (*SearchAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{15}
}

func (x *SearchAppInfosResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchAppInfosResponse) GetAppInfos() []*v1.AppInfoMixed {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type SearchNewAppInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SourceFilter  []string               `protobuf:"bytes,3,rep,name=source_filter,json=sourceFilter,proto3" json:"source_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchNewAppInfosRequest) Reset() {
	*x = SearchNewAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNewAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNewAppInfosRequest) ProtoMessage() {}

func (x *SearchNewAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNewAppInfosRequest.ProtoReflect.Descriptor instead.
func (*SearchNewAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{16}
}

func (x *SearchNewAppInfosRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchNewAppInfosRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchNewAppInfosRequest) GetSourceFilter() []string {
	if x != nil {
		return x.SourceFilter
	}
	return nil
}

type SearchNewAppInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	AppInfos      []*v1.AppInfo          `protobuf:"bytes,2,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchNewAppInfosResponse) Reset() {
	*x = SearchNewAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNewAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNewAppInfosResponse) ProtoMessage() {}

func (x *SearchNewAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNewAppInfosResponse.ProtoReflect.Descriptor instead.
func (*SearchNewAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{17}
}

func (x *SearchNewAppInfosResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *SearchNewAppInfosResponse) GetAppInfos() []*v1.AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type GetAppInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfoId     *v1.InternalID         `protobuf:"bytes,1,opt,name=app_info_id,json=appInfoId,proto3" json:"app_info_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppInfoRequest) Reset() {
	*x = GetAppInfoRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppInfoRequest) ProtoMessage() {}

func (x *GetAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{18}
}

func (x *GetAppInfoRequest) GetAppInfoId() *v1.InternalID {
	if x != nil {
		return x.AppInfoId
	}
	return nil
}

type GetAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfo       *v1.AppInfo            `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppInfoResponse) Reset() {
	*x = GetAppInfoResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppInfoResponse) ProtoMessage() {}

func (x *GetAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{19}
}

func (x *GetAppInfoResponse) GetAppInfo() *v1.AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type GetBoundAppInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfoId     *v1.InternalID         `protobuf:"bytes,1,opt,name=app_info_id,json=appInfoId,proto3" json:"app_info_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoundAppInfosRequest) Reset() {
	*x = GetBoundAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoundAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoundAppInfosRequest) ProtoMessage() {}

func (x *GetBoundAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoundAppInfosRequest.ProtoReflect.Descriptor instead.
func (*GetBoundAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{20}
}

func (x *GetBoundAppInfosRequest) GetAppInfoId() *v1.InternalID {
	if x != nil {
		return x.AppInfoId
	}
	return nil
}

type GetBoundAppInfosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfos      []*v1.AppInfo          `protobuf:"bytes,1,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBoundAppInfosResponse) Reset() {
	*x = GetBoundAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoundAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoundAppInfosResponse) ProtoMessage() {}

func (x *GetBoundAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoundAppInfosResponse.ProtoReflect.Descriptor instead.
func (*GetBoundAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{21}
}

func (x *GetBoundAppInfosResponse) GetAppInfos() []*v1.AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type PurchaseAppInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When `internal` is true, `source_app_id` must be valid InternalID.
	// When `internal` is false, Server should create that app and return no matter the source is supported.
	AppInfoId     *v1.AppInfoID `protobuf:"bytes,1,opt,name=app_info_id,json=appInfoId,proto3" json:"app_info_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseAppInfoRequest) Reset() {
	*x = PurchaseAppInfoRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseAppInfoRequest) ProtoMessage() {}

func (x *PurchaseAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseAppInfoRequest.ProtoReflect.Descriptor instead.
func (*PurchaseAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{22}
}

func (x *PurchaseAppInfoRequest) GetAppInfoId() *v1.AppInfoID {
	if x != nil {
		return x.AppInfoId
	}
	return nil
}

type PurchaseAppInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When purchase external app, return the auto created internal app id.
	Id            *v1.InternalID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurchaseAppInfoResponse) Reset() {
	*x = PurchaseAppInfoResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurchaseAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseAppInfoResponse) ProtoMessage() {}

func (x *PurchaseAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseAppInfoResponse.ProtoReflect.Descriptor instead.
func (*PurchaseAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{23}
}

func (x *PurchaseAppInfoResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetPurchasedAppInfosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        *string                `protobuf:"bytes,1,opt,name=source,proto3,oneof" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPurchasedAppInfosRequest) Reset() {
	*x = GetPurchasedAppInfosRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPurchasedAppInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchasedAppInfosRequest) ProtoMessage() {}

func (x *GetPurchasedAppInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchasedAppInfosRequest.ProtoReflect.Descriptor instead.
func (*GetPurchasedAppInfosRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{24}
}

func (x *GetPurchasedAppInfosRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type GetPurchasedAppInfosResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// without details
	AppInfos      []*v1.AppInfoMixed `protobuf:"bytes,1,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPurchasedAppInfosResponse) Reset() {
	*x = GetPurchasedAppInfosResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPurchasedAppInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchasedAppInfosResponse) ProtoMessage() {}

func (x *GetPurchasedAppInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchasedAppInfosResponse.ProtoReflect.Descriptor instead.
func (*GetPurchasedAppInfosResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{25}
}

func (x *GetPurchasedAppInfosResponse) GetAppInfos() []*v1.AppInfoMixed {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type CreateAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *App                   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppRequest) Reset() {
	*x = CreateAppRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppRequest) ProtoMessage() {}

func (x *CreateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppRequest.ProtoReflect.Descriptor instead.
func (*CreateAppRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{26}
}

func (x *CreateAppRequest) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

type CreateAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppResponse) Reset() {
	*x = CreateAppResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppResponse) ProtoMessage() {}

func (x *CreateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppResponse.ProtoReflect.Descriptor instead.
func (*CreateAppResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{27}
}

func (x *CreateAppResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	App           *App                   `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateAppRequest) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

type UpdateAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppResponse) Reset() {
	*x = UpdateAppResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppResponse) ProtoMessage() {}

func (x *UpdateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{29}
}

type ListAppsRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Paging *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	// List owned apps by default.
	// Used to get other's **public** apps.
	OwnerIdFilter           []*v1.InternalID `protobuf:"bytes,2,rep,name=owner_id_filter,json=ownerIdFilter,proto3" json:"owner_id_filter,omitempty"`
	IdFilter                []*v1.InternalID `protobuf:"bytes,3,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	AssignedAppInfoIdFilter []*v1.InternalID `protobuf:"bytes,4,rep,name=assigned_app_info_id_filter,json=assignedAppInfoIdFilter,proto3" json:"assigned_app_info_id_filter,omitempty"`
	DeviceIdFilter          []*v1.InternalID `protobuf:"bytes,5,rep,name=device_id_filter,json=deviceIdFilter,proto3" json:"device_id_filter,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListAppsRequest) Reset() {
	*x = ListAppsRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRequest) ProtoMessage() {}

func (x *ListAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRequest.ProtoReflect.Descriptor instead.
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{30}
}

func (x *ListAppsRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListAppsRequest) GetOwnerIdFilter() []*v1.InternalID {
	if x != nil {
		return x.OwnerIdFilter
	}
	return nil
}

func (x *ListAppsRequest) GetIdFilter() []*v1.InternalID {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

func (x *ListAppsRequest) GetAssignedAppInfoIdFilter() []*v1.InternalID {
	if x != nil {
		return x.AssignedAppInfoIdFilter
	}
	return nil
}

func (x *ListAppsRequest) GetDeviceIdFilter() []*v1.InternalID {
	if x != nil {
		return x.DeviceIdFilter
	}
	return nil
}

type ListAppsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Apps          []*App                 `protobuf:"bytes,2,rep,name=apps,proto3" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppsResponse) Reset() {
	*x = ListAppsResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResponse) ProtoMessage() {}

func (x *ListAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResponse.ProtoReflect.Descriptor instead.
func (*ListAppsResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{31}
}

func (x *ListAppsResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListAppsResponse) GetApps() []*App {
	if x != nil {
		return x.Apps
	}
	return nil
}

type ReportSentinelInformationRequest struct {
	state     protoimpl.MessageState                        `protogen:"open.v1"`
	Hostnames []string                                      `protobuf:"bytes,1,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	Scheme    ReportSentinelInformationRequest_ServerScheme `protobuf:"varint,2,opt,name=scheme,proto3,enum=librarian.sephirah.v1.ReportSentinelInformationRequest_ServerScheme" json:"scheme,omitempty"`
	// valid when need_token is true
	GetTokenUrlPath     string                                              `protobuf:"bytes,3,opt,name=get_token_url_path,json=getTokenUrlPath,proto3" json:"get_token_url_path,omitempty"`
	DownloadFileUrlPath string                                              `protobuf:"bytes,4,opt,name=download_file_url_path,json=downloadFileUrlPath,proto3" json:"download_file_url_path,omitempty"`
	Libraries           []*ReportSentinelInformationRequest_SentinelLibrary `protobuf:"bytes,5,rep,name=libraries,proto3" json:"libraries,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReportSentinelInformationRequest) Reset() {
	*x = ReportSentinelInformationRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSentinelInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSentinelInformationRequest) ProtoMessage() {}

func (x *ReportSentinelInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSentinelInformationRequest.ProtoReflect.Descriptor instead.
func (*ReportSentinelInformationRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{32}
}

func (x *ReportSentinelInformationRequest) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *ReportSentinelInformationRequest) GetScheme() ReportSentinelInformationRequest_ServerScheme {
	if x != nil {
		return x.Scheme
	}
	return ReportSentinelInformationRequest_SERVER_SCHEME_UNSPECIFIED
}

func (x *ReportSentinelInformationRequest) GetGetTokenUrlPath() string {
	if x != nil {
		return x.GetTokenUrlPath
	}
	return ""
}

func (x *ReportSentinelInformationRequest) GetDownloadFileUrlPath() string {
	if x != nil {
		return x.DownloadFileUrlPath
	}
	return ""
}

func (x *ReportSentinelInformationRequest) GetLibraries() []*ReportSentinelInformationRequest_SentinelLibrary {
	if x != nil {
		return x.Libraries
	}
	return nil
}

type ReportSentinelInformationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportSentinelInformationResponse) Reset() {
	*x = ReportSentinelInformationResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSentinelInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSentinelInformationResponse) ProtoMessage() {}

func (x *ReportSentinelInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSentinelInformationResponse.ProtoReflect.Descriptor instead.
func (*ReportSentinelInformationResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{33}
}

type ReportAppBinariesRequest struct {
	state               protoimpl.MessageState                        `protogen:"open.v1"`
	SentinelAppBinaries []*ReportAppBinariesRequest_SentinelAppBinary `protobuf:"bytes,1,rep,name=sentinel_app_binaries,json=sentinelAppBinaries,proto3" json:"sentinel_app_binaries,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReportAppBinariesRequest) Reset() {
	*x = ReportAppBinariesRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppBinariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppBinariesRequest) ProtoMessage() {}

func (x *ReportAppBinariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppBinariesRequest.ProtoReflect.Descriptor instead.
func (*ReportAppBinariesRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{34}
}

func (x *ReportAppBinariesRequest) GetSentinelAppBinaries() []*ReportAppBinariesRequest_SentinelAppBinary {
	if x != nil {
		return x.SentinelAppBinaries
	}
	return nil
}

type ReportAppBinariesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAppBinariesResponse) Reset() {
	*x = ReportAppBinariesResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppBinariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppBinariesResponse) ProtoMessage() {}

func (x *ReportAppBinariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppBinariesResponse.ProtoReflect.Descriptor instead.
func (*ReportAppBinariesResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{35}
}

type AssignAppRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `internal` must be true
	AppInfoId     *v1.InternalID `protobuf:"bytes,1,opt,name=app_info_id,json=appInfoId,proto3" json:"app_info_id,omitempty"`
	AppId         *v1.InternalID `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignAppRequest) Reset() {
	*x = AssignAppRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAppRequest) ProtoMessage() {}

func (x *AssignAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAppRequest.ProtoReflect.Descriptor instead.
func (*AssignAppRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{36}
}

func (x *AssignAppRequest) GetAppInfoId() *v1.InternalID {
	if x != nil {
		return x.AppInfoId
	}
	return nil
}

func (x *AssignAppRequest) GetAppId() *v1.InternalID {
	if x != nil {
		return x.AppId
	}
	return nil
}

type AssignAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignAppResponse) Reset() {
	*x = AssignAppResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignAppResponse) ProtoMessage() {}

func (x *AssignAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignAppResponse.ProtoReflect.Descriptor instead.
func (*AssignAppResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{37}
}

type UnAssignAppRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         *v1.InternalID         `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnAssignAppRequest) Reset() {
	*x = UnAssignAppRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnAssignAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnAssignAppRequest) ProtoMessage() {}

func (x *UnAssignAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnAssignAppRequest.ProtoReflect.Descriptor instead.
func (*UnAssignAppRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{38}
}

func (x *UnAssignAppRequest) GetAppId() *v1.InternalID {
	if x != nil {
		return x.AppId
	}
	return nil
}

type UnAssignAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnAssignAppResponse) Reset() {
	*x = UnAssignAppResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnAssignAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnAssignAppResponse) ProtoMessage() {}

func (x *UnAssignAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnAssignAppResponse.ProtoReflect.Descriptor instead.
func (*UnAssignAppResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{39}
}

type DownloadAppBinaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadAppBinaryRequest) Reset() {
	*x = DownloadAppBinaryRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadAppBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAppBinaryRequest) ProtoMessage() {}

func (x *DownloadAppBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAppBinaryRequest.ProtoReflect.Descriptor instead.
func (*DownloadAppBinaryRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{40}
}

func (x *DownloadAppBinaryRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DownloadAppBinaryResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AppBinary *AppBinary             `protobuf:"bytes,1,opt,name=app_binary,json=appBinary,proto3" json:"app_binary,omitempty"`
	// base url to be path-joined when need_token is false
	DownloadUrl string `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	// valid when need_token is true
	Token         *string `protobuf:"bytes,3,opt,name=token,proto3,oneof" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadAppBinaryResponse) Reset() {
	*x = DownloadAppBinaryResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadAppBinaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAppBinaryResponse) ProtoMessage() {}

func (x *DownloadAppBinaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAppBinaryResponse.ProtoReflect.Descriptor instead.
func (*DownloadAppBinaryResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{41}
}

func (x *DownloadAppBinaryResponse) GetAppBinary() *AppBinary {
	if x != nil {
		return x.AppBinary
	}
	return nil
}

func (x *DownloadAppBinaryResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *DownloadAppBinaryResponse) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type AddAppRunTimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         *v1.InternalID         `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	DeviceId      *v1.InternalID         `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	TimeRange     *v1.TimeRange          `protobuf:"bytes,3,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAppRunTimeRequest) Reset() {
	*x = AddAppRunTimeRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAppRunTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppRunTimeRequest) ProtoMessage() {}

func (x *AddAppRunTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppRunTimeRequest.ProtoReflect.Descriptor instead.
func (*AddAppRunTimeRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{42}
}

func (x *AddAppRunTimeRequest) GetAppId() *v1.InternalID {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *AddAppRunTimeRequest) GetDeviceId() *v1.InternalID {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *AddAppRunTimeRequest) GetTimeRange() *v1.TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type AddAppRunTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAppRunTimeResponse) Reset() {
	*x = AddAppRunTimeResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAppRunTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppRunTimeResponse) ProtoMessage() {}

func (x *AddAppRunTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppRunTimeResponse.ProtoReflect.Descriptor instead.
func (*AddAppRunTimeResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{43}
}

type SumAppRunTimeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AppIdFilter     []*v1.InternalID       `protobuf:"bytes,1,rep,name=app_id_filter,json=appIdFilter,proto3" json:"app_id_filter,omitempty"`
	DeviceIdFilter  []*v1.InternalID       `protobuf:"bytes,2,rep,name=device_id_filter,json=deviceIdFilter,proto3" json:"device_id_filter,omitempty"`
	TimeAggregation *v1.TimeAggregation    `protobuf:"bytes,3,opt,name=time_aggregation,json=timeAggregation,proto3" json:"time_aggregation,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SumAppRunTimeRequest) Reset() {
	*x = SumAppRunTimeRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumAppRunTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumAppRunTimeRequest) ProtoMessage() {}

func (x *SumAppRunTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumAppRunTimeRequest.ProtoReflect.Descriptor instead.
func (*SumAppRunTimeRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{44}
}

func (x *SumAppRunTimeRequest) GetAppIdFilter() []*v1.InternalID {
	if x != nil {
		return x.AppIdFilter
	}
	return nil
}

func (x *SumAppRunTimeRequest) GetDeviceIdFilter() []*v1.InternalID {
	if x != nil {
		return x.DeviceIdFilter
	}
	return nil
}

func (x *SumAppRunTimeRequest) GetTimeAggregation() *v1.TimeAggregation {
	if x != nil {
		return x.TimeAggregation
	}
	return nil
}

type SumAppRunTimeResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	RunTimeGroups []*SumAppRunTimeResponse_Group `protobuf:"bytes,1,rep,name=run_time_groups,json=runTimeGroups,proto3" json:"run_time_groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumAppRunTimeResponse) Reset() {
	*x = SumAppRunTimeResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumAppRunTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumAppRunTimeResponse) ProtoMessage() {}

func (x *SumAppRunTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumAppRunTimeResponse.ProtoReflect.Descriptor instead.
func (*SumAppRunTimeResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{45}
}

func (x *SumAppRunTimeResponse) GetRunTimeGroups() []*SumAppRunTimeResponse_Group {
	if x != nil {
		return x.RunTimeGroups
	}
	return nil
}

type UploadAppSaveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileMetadata  *FileMetadata          `protobuf:"bytes,1,opt,name=file_metadata,json=fileMetadata,proto3" json:"file_metadata,omitempty"`
	AppId         *v1.InternalID         `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAppSaveFileRequest) Reset() {
	*x = UploadAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAppSaveFileRequest) ProtoMessage() {}

func (x *UploadAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*UploadAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{46}
}

func (x *UploadAppSaveFileRequest) GetFileMetadata() *FileMetadata {
	if x != nil {
		return x.FileMetadata
	}
	return nil
}

func (x *UploadAppSaveFileRequest) GetAppId() *v1.InternalID {
	if x != nil {
		return x.AppId
	}
	return nil
}

type UploadAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadToken   string                 `protobuf:"bytes,1,opt,name=upload_token,json=uploadToken,proto3" json:"upload_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAppSaveFileResponse) Reset() {
	*x = UploadAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAppSaveFileResponse) ProtoMessage() {}

func (x *UploadAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*UploadAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{47}
}

func (x *UploadAppSaveFileResponse) GetUploadToken() string {
	if x != nil {
		return x.UploadToken
	}
	return ""
}

type DownloadAppSaveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadAppSaveFileRequest) Reset() {
	*x = DownloadAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAppSaveFileRequest) ProtoMessage() {}

func (x *DownloadAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{48}
}

func (x *DownloadAppSaveFileRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DownloadAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DownloadToken string                 `protobuf:"bytes,2,opt,name=download_token,json=downloadToken,proto3" json:"download_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadAppSaveFileResponse) Reset() {
	*x = DownloadAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAppSaveFileResponse) ProtoMessage() {}

func (x *DownloadAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{49}
}

func (x *DownloadAppSaveFileResponse) GetDownloadToken() string {
	if x != nil {
		return x.DownloadToken
	}
	return ""
}

type ListAppSaveFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         *v1.InternalID         `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppSaveFilesRequest) Reset() {
	*x = ListAppSaveFilesRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppSaveFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppSaveFilesRequest) ProtoMessage() {}

func (x *ListAppSaveFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppSaveFilesRequest.ProtoReflect.Descriptor instead.
func (*ListAppSaveFilesRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{50}
}

func (x *ListAppSaveFilesRequest) GetAppId() *v1.InternalID {
	if x != nil {
		return x.AppId
	}
	return nil
}

type ListAppSaveFilesResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Results       []*ListAppSaveFilesResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppSaveFilesResponse) Reset() {
	*x = ListAppSaveFilesResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppSaveFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppSaveFilesResponse) ProtoMessage() {}

func (x *ListAppSaveFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppSaveFilesResponse.ProtoReflect.Descriptor instead.
func (*ListAppSaveFilesResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{51}
}

func (x *ListAppSaveFilesResponse) GetResults() []*ListAppSaveFilesResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type RemoveAppSaveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAppSaveFileRequest) Reset() {
	*x = RemoveAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppSaveFileRequest) ProtoMessage() {}

func (x *RemoveAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*RemoveAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{52}
}

func (x *RemoveAppSaveFileRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type RemoveAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAppSaveFileResponse) Reset() {
	*x = RemoveAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppSaveFileResponse) ProtoMessage() {}

func (x *RemoveAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*RemoveAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{53}
}

type PinAppSaveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinAppSaveFileRequest) Reset() {
	*x = PinAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinAppSaveFileRequest) ProtoMessage() {}

func (x *PinAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*PinAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{54}
}

func (x *PinAppSaveFileRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type PinAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinAppSaveFileResponse) Reset() {
	*x = PinAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinAppSaveFileResponse) ProtoMessage() {}

func (x *PinAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*PinAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{55}
}

type UnpinAppSaveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpinAppSaveFileRequest) Reset() {
	*x = UnpinAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpinAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinAppSaveFileRequest) ProtoMessage() {}

func (x *UnpinAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*UnpinAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{56}
}

func (x *UnpinAppSaveFileRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UnpinAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpinAppSaveFileResponse) Reset() {
	*x = UnpinAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpinAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinAppSaveFileResponse) ProtoMessage() {}

func (x *UnpinAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*UnpinAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{57}
}

type SetAppSaveFileCapacityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entity:
	//
	//	*SetAppSaveFileCapacityRequest_User
	//	*SetAppSaveFileCapacityRequest_AppId
	Entity isSetAppSaveFileCapacityRequest_Entity `protobuf_oneof:"entity"`
	// negative value means use default
	Count int64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// negative value means use default
	SizeBytes int64 `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// unspecified means use default
	// strategies of smaller scopes have higher priority when multiple scopes reach limit
	Strategy      AppSaveFileCapacityStrategy `protobuf:"varint,6,opt,name=strategy,proto3,enum=librarian.sephirah.v1.AppSaveFileCapacityStrategy" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAppSaveFileCapacityRequest) Reset() {
	*x = SetAppSaveFileCapacityRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAppSaveFileCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppSaveFileCapacityRequest) ProtoMessage() {}

func (x *SetAppSaveFileCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppSaveFileCapacityRequest.ProtoReflect.Descriptor instead.
func (*SetAppSaveFileCapacityRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{58}
}

func (x *SetAppSaveFileCapacityRequest) GetEntity() isSetAppSaveFileCapacityRequest_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SetAppSaveFileCapacityRequest) GetUser() bool {
	if x != nil {
		if x, ok := x.Entity.(*SetAppSaveFileCapacityRequest_User); ok {
			return x.User
		}
	}
	return false
}

func (x *SetAppSaveFileCapacityRequest) GetAppId() *v1.InternalID {
	if x != nil {
		if x, ok := x.Entity.(*SetAppSaveFileCapacityRequest_AppId); ok {
			return x.AppId
		}
	}
	return nil
}

func (x *SetAppSaveFileCapacityRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SetAppSaveFileCapacityRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *SetAppSaveFileCapacityRequest) GetStrategy() AppSaveFileCapacityStrategy {
	if x != nil {
		return x.Strategy
	}
	return AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED
}

type isSetAppSaveFileCapacityRequest_Entity interface {
	isSetAppSaveFileCapacityRequest_Entity()
}

type SetAppSaveFileCapacityRequest_User struct {
	User bool `protobuf:"varint,1,opt,name=user,proto3,oneof"`
}

type SetAppSaveFileCapacityRequest_AppId struct {
	AppId *v1.InternalID `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3,oneof"`
}

func (*SetAppSaveFileCapacityRequest_User) isSetAppSaveFileCapacityRequest_Entity() {}

func (*SetAppSaveFileCapacityRequest_AppId) isSetAppSaveFileCapacityRequest_Entity() {}

type SetAppSaveFileCapacityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAppSaveFileCapacityResponse) Reset() {
	*x = SetAppSaveFileCapacityResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAppSaveFileCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppSaveFileCapacityResponse) ProtoMessage() {}

func (x *SetAppSaveFileCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppSaveFileCapacityResponse.ProtoReflect.Descriptor instead.
func (*SetAppSaveFileCapacityResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{59}
}

type SetAppSaveFileCapacityDefaultRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entity:
	//
	//	*SetAppSaveFileCapacityDefaultRequest_App
	Entity isSetAppSaveFileCapacityDefaultRequest_Entity `protobuf_oneof:"entity"`
	// negative value means no limit
	Count int64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// negative value means no limit
	SizeBytes     int64                       `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Strategy      AppSaveFileCapacityStrategy `protobuf:"varint,6,opt,name=strategy,proto3,enum=librarian.sephirah.v1.AppSaveFileCapacityStrategy" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAppSaveFileCapacityDefaultRequest) Reset() {
	*x = SetAppSaveFileCapacityDefaultRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAppSaveFileCapacityDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppSaveFileCapacityDefaultRequest) ProtoMessage() {}

func (x *SetAppSaveFileCapacityDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppSaveFileCapacityDefaultRequest.ProtoReflect.Descriptor instead.
func (*SetAppSaveFileCapacityDefaultRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{60}
}

func (x *SetAppSaveFileCapacityDefaultRequest) GetEntity() isSetAppSaveFileCapacityDefaultRequest_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SetAppSaveFileCapacityDefaultRequest) GetApp() bool {
	if x != nil {
		if x, ok := x.Entity.(*SetAppSaveFileCapacityDefaultRequest_App); ok {
			return x.App
		}
	}
	return false
}

func (x *SetAppSaveFileCapacityDefaultRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SetAppSaveFileCapacityDefaultRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *SetAppSaveFileCapacityDefaultRequest) GetStrategy() AppSaveFileCapacityStrategy {
	if x != nil {
		return x.Strategy
	}
	return AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED
}

type isSetAppSaveFileCapacityDefaultRequest_Entity interface {
	isSetAppSaveFileCapacityDefaultRequest_Entity()
}

type SetAppSaveFileCapacityDefaultRequest_App struct {
	App bool `protobuf:"varint,1,opt,name=app,proto3,oneof"`
}

func (*SetAppSaveFileCapacityDefaultRequest_App) isSetAppSaveFileCapacityDefaultRequest_Entity() {}

type SetAppSaveFileCapacityDefaultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAppSaveFileCapacityDefaultResponse) Reset() {
	*x = SetAppSaveFileCapacityDefaultResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAppSaveFileCapacityDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppSaveFileCapacityDefaultResponse) ProtoMessage() {}

func (x *SetAppSaveFileCapacityDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppSaveFileCapacityDefaultResponse.ProtoReflect.Descriptor instead.
func (*SetAppSaveFileCapacityDefaultResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{61}
}

type GetAppSaveFileCapacityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entity:
	//
	//	*GetAppSaveFileCapacityRequest_User
	//	*GetAppSaveFileCapacityRequest_AppId
	Entity        isGetAppSaveFileCapacityRequest_Entity `protobuf_oneof:"entity"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSaveFileCapacityRequest) Reset() {
	*x = GetAppSaveFileCapacityRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSaveFileCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSaveFileCapacityRequest) ProtoMessage() {}

func (x *GetAppSaveFileCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSaveFileCapacityRequest.ProtoReflect.Descriptor instead.
func (*GetAppSaveFileCapacityRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{62}
}

func (x *GetAppSaveFileCapacityRequest) GetEntity() isGetAppSaveFileCapacityRequest_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetAppSaveFileCapacityRequest) GetUser() bool {
	if x != nil {
		if x, ok := x.Entity.(*GetAppSaveFileCapacityRequest_User); ok {
			return x.User
		}
	}
	return false
}

func (x *GetAppSaveFileCapacityRequest) GetAppId() *v1.InternalID {
	if x != nil {
		if x, ok := x.Entity.(*GetAppSaveFileCapacityRequest_AppId); ok {
			return x.AppId
		}
	}
	return nil
}

type isGetAppSaveFileCapacityRequest_Entity interface {
	isGetAppSaveFileCapacityRequest_Entity()
}

type GetAppSaveFileCapacityRequest_User struct {
	User bool `protobuf:"varint,1,opt,name=user,proto3,oneof"`
}

type GetAppSaveFileCapacityRequest_AppId struct {
	AppId *v1.InternalID `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3,oneof"`
}

func (*GetAppSaveFileCapacityRequest_User) isGetAppSaveFileCapacityRequest_Entity() {}

func (*GetAppSaveFileCapacityRequest_AppId) isGetAppSaveFileCapacityRequest_Entity() {}

type GetAppSaveFileCapacityResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Count         int64                       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	SizeBytes     int64                       `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Strategy      AppSaveFileCapacityStrategy `protobuf:"varint,3,opt,name=strategy,proto3,enum=librarian.sephirah.v1.AppSaveFileCapacityStrategy" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSaveFileCapacityResponse) Reset() {
	*x = GetAppSaveFileCapacityResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSaveFileCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSaveFileCapacityResponse) ProtoMessage() {}

func (x *GetAppSaveFileCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSaveFileCapacityResponse.ProtoReflect.Descriptor instead.
func (*GetAppSaveFileCapacityResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{63}
}

func (x *GetAppSaveFileCapacityResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetAppSaveFileCapacityResponse) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *GetAppSaveFileCapacityResponse) GetStrategy() AppSaveFileCapacityStrategy {
	if x != nil {
		return x.Strategy
	}
	return AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED
}

type GetAppSaveFileCapacityDefaultRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entity:
	//
	//	*GetAppSaveFileCapacityDefaultRequest_App
	Entity        isGetAppSaveFileCapacityDefaultRequest_Entity `protobuf_oneof:"entity"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSaveFileCapacityDefaultRequest) Reset() {
	*x = GetAppSaveFileCapacityDefaultRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSaveFileCapacityDefaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSaveFileCapacityDefaultRequest) ProtoMessage() {}

func (x *GetAppSaveFileCapacityDefaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSaveFileCapacityDefaultRequest.ProtoReflect.Descriptor instead.
func (*GetAppSaveFileCapacityDefaultRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{64}
}

func (x *GetAppSaveFileCapacityDefaultRequest) GetEntity() isGetAppSaveFileCapacityDefaultRequest_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GetAppSaveFileCapacityDefaultRequest) GetApp() bool {
	if x != nil {
		if x, ok := x.Entity.(*GetAppSaveFileCapacityDefaultRequest_App); ok {
			return x.App
		}
	}
	return false
}

type isGetAppSaveFileCapacityDefaultRequest_Entity interface {
	isGetAppSaveFileCapacityDefaultRequest_Entity()
}

type GetAppSaveFileCapacityDefaultRequest_App struct {
	App bool `protobuf:"varint,1,opt,name=app,proto3,oneof"`
}

func (*GetAppSaveFileCapacityDefaultRequest_App) isGetAppSaveFileCapacityDefaultRequest_Entity() {}

type GetAppSaveFileCapacityDefaultResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Count         int64                       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	SizeBytes     int64                       `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Strategy      AppSaveFileCapacityStrategy `protobuf:"varint,3,opt,name=strategy,proto3,enum=librarian.sephirah.v1.AppSaveFileCapacityStrategy" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppSaveFileCapacityDefaultResponse) Reset() {
	*x = GetAppSaveFileCapacityDefaultResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppSaveFileCapacityDefaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppSaveFileCapacityDefaultResponse) ProtoMessage() {}

func (x *GetAppSaveFileCapacityDefaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppSaveFileCapacityDefaultResponse.ProtoReflect.Descriptor instead.
func (*GetAppSaveFileCapacityDefaultResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{65}
}

func (x *GetAppSaveFileCapacityDefaultResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetAppSaveFileCapacityDefaultResponse) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *GetAppSaveFileCapacityDefaultResponse) GetStrategy() AppSaveFileCapacityStrategy {
	if x != nil {
		return x.Strategy
	}
	return AppSaveFileCapacityStrategy_APP_SAVE_FILE_CAPACITY_STRATEGY_UNSPECIFIED
}

type CreateSharedAppSaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SharedAppSave *SharedAppSave         `protobuf:"bytes,1,opt,name=shared_app_save,json=sharedAppSave,proto3" json:"shared_app_save,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSharedAppSaveRequest) Reset() {
	*x = CreateSharedAppSaveRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSharedAppSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSharedAppSaveRequest) ProtoMessage() {}

func (x *CreateSharedAppSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSharedAppSaveRequest.ProtoReflect.Descriptor instead.
func (*CreateSharedAppSaveRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{66}
}

func (x *CreateSharedAppSaveRequest) GetSharedAppSave() *SharedAppSave {
	if x != nil {
		return x.SharedAppSave
	}
	return nil
}

type CreateSharedAppSaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSharedAppSaveResponse) Reset() {
	*x = CreateSharedAppSaveResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSharedAppSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSharedAppSaveResponse) ProtoMessage() {}

func (x *CreateSharedAppSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSharedAppSaveResponse.ProtoReflect.Descriptor instead.
func (*CreateSharedAppSaveResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{67}
}

func (x *CreateSharedAppSaveResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateSharedAppSaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SharedAppSave *SharedAppSave         `protobuf:"bytes,1,opt,name=shared_app_save,json=sharedAppSave,proto3" json:"shared_app_save,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSharedAppSaveRequest) Reset() {
	*x = UpdateSharedAppSaveRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSharedAppSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSharedAppSaveRequest) ProtoMessage() {}

func (x *UpdateSharedAppSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSharedAppSaveRequest.ProtoReflect.Descriptor instead.
func (*UpdateSharedAppSaveRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateSharedAppSaveRequest) GetSharedAppSave() *SharedAppSave {
	if x != nil {
		return x.SharedAppSave
	}
	return nil
}

type UpdateSharedAppSaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSharedAppSaveResponse) Reset() {
	*x = UpdateSharedAppSaveResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSharedAppSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSharedAppSaveResponse) ProtoMessage() {}

func (x *UpdateSharedAppSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSharedAppSaveResponse.ProtoReflect.Descriptor instead.
func (*UpdateSharedAppSaveResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{69}
}

type ListSharedAppSavesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Paging          *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	IdFilter        []*v1.InternalID       `protobuf:"bytes,2,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	AppInfoIdFilter []*v1.InternalID       `protobuf:"bytes,3,rep,name=app_info_id_filter,json=appInfoIdFilter,proto3" json:"app_info_id_filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListSharedAppSavesRequest) Reset() {
	*x = ListSharedAppSavesRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSharedAppSavesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSharedAppSavesRequest) ProtoMessage() {}

func (x *ListSharedAppSavesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSharedAppSavesRequest.ProtoReflect.Descriptor instead.
func (*ListSharedAppSavesRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{70}
}

func (x *ListSharedAppSavesRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSharedAppSavesRequest) GetIdFilter() []*v1.InternalID {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

func (x *ListSharedAppSavesRequest) GetAppInfoIdFilter() []*v1.InternalID {
	if x != nil {
		return x.AppInfoIdFilter
	}
	return nil
}

type ListSharedAppSavesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Paging         *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	SharedAppSaves []*SharedAppSave       `protobuf:"bytes,2,rep,name=shared_app_saves,json=sharedAppSaves,proto3" json:"shared_app_saves,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListSharedAppSavesResponse) Reset() {
	*x = ListSharedAppSavesResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSharedAppSavesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSharedAppSavesResponse) ProtoMessage() {}

func (x *ListSharedAppSavesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSharedAppSavesResponse.ProtoReflect.Descriptor instead.
func (*ListSharedAppSavesResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{71}
}

func (x *ListSharedAppSavesResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSharedAppSavesResponse) GetSharedAppSaves() []*SharedAppSave {
	if x != nil {
		return x.SharedAppSaves
	}
	return nil
}

type RemoveSharedAppSaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSharedAppSaveRequest) Reset() {
	*x = RemoveSharedAppSaveRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSharedAppSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSharedAppSaveRequest) ProtoMessage() {}

func (x *RemoveSharedAppSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSharedAppSaveRequest.ProtoReflect.Descriptor instead.
func (*RemoveSharedAppSaveRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{72}
}

func (x *RemoveSharedAppSaveRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type RemoveSharedAppSaveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSharedAppSaveResponse) Reset() {
	*x = RemoveSharedAppSaveResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSharedAppSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSharedAppSaveResponse) ProtoMessage() {}

func (x *RemoveSharedAppSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSharedAppSaveResponse.ProtoReflect.Descriptor instead.
func (*RemoveSharedAppSaveResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{73}
}

type CreateSharedAppSaveFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `Normal` will always create non-public SharedAppSaveFile
	SharedAppSaveFile *SharedAppSaveFile `protobuf:"bytes,1,opt,name=shared_app_save_file,json=sharedAppSaveFile,proto3" json:"shared_app_save_file,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateSharedAppSaveFileRequest) Reset() {
	*x = CreateSharedAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSharedAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSharedAppSaveFileRequest) ProtoMessage() {}

func (x *CreateSharedAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSharedAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*CreateSharedAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{74}
}

func (x *CreateSharedAppSaveFileRequest) GetSharedAppSaveFile() *SharedAppSaveFile {
	if x != nil {
		return x.SharedAppSaveFile
	}
	return nil
}

type CreateSharedAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSharedAppSaveFileResponse) Reset() {
	*x = CreateSharedAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSharedAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSharedAppSaveFileResponse) ProtoMessage() {}

func (x *CreateSharedAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSharedAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*CreateSharedAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{75}
}

func (x *CreateSharedAppSaveFileResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateSharedAppSaveFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `Normal` can't set public field
	SharedAppSaveFile *SharedAppSaveFile `protobuf:"bytes,1,opt,name=shared_app_save_file,json=sharedAppSaveFile,proto3" json:"shared_app_save_file,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateSharedAppSaveFileRequest) Reset() {
	*x = UpdateSharedAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSharedAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSharedAppSaveFileRequest) ProtoMessage() {}

func (x *UpdateSharedAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSharedAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*UpdateSharedAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{76}
}

func (x *UpdateSharedAppSaveFileRequest) GetSharedAppSaveFile() *SharedAppSaveFile {
	if x != nil {
		return x.SharedAppSaveFile
	}
	return nil
}

type UpdateSharedAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSharedAppSaveFileResponse) Reset() {
	*x = UpdateSharedAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSharedAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSharedAppSaveFileResponse) ProtoMessage() {}

func (x *UpdateSharedAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSharedAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*UpdateSharedAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{77}
}

type ListSharedAppSaveFilesRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Paging                *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	IdFilter              []*v1.InternalID       `protobuf:"bytes,2,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	SharedAppSaveIdFilter []*v1.InternalID       `protobuf:"bytes,3,rep,name=shared_app_save_id_filter,json=sharedAppSaveIdFilter,proto3" json:"shared_app_save_id_filter,omitempty"`
	UserIdFilter          []*v1.InternalID       `protobuf:"bytes,4,rep,name=user_id_filter,json=userIdFilter,proto3" json:"user_id_filter,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListSharedAppSaveFilesRequest) Reset() {
	*x = ListSharedAppSaveFilesRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSharedAppSaveFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSharedAppSaveFilesRequest) ProtoMessage() {}

func (x *ListSharedAppSaveFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSharedAppSaveFilesRequest.ProtoReflect.Descriptor instead.
func (*ListSharedAppSaveFilesRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{78}
}

func (x *ListSharedAppSaveFilesRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSharedAppSaveFilesRequest) GetIdFilter() []*v1.InternalID {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

func (x *ListSharedAppSaveFilesRequest) GetSharedAppSaveIdFilter() []*v1.InternalID {
	if x != nil {
		return x.SharedAppSaveIdFilter
	}
	return nil
}

func (x *ListSharedAppSaveFilesRequest) GetUserIdFilter() []*v1.InternalID {
	if x != nil {
		return x.UserIdFilter
	}
	return nil
}

type ListSharedAppSaveFilesResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Paging             *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	SharedAppSaveFiles []*SharedAppSaveFile   `protobuf:"bytes,2,rep,name=shared_app_save_files,json=sharedAppSaveFiles,proto3" json:"shared_app_save_files,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListSharedAppSaveFilesResponse) Reset() {
	*x = ListSharedAppSaveFilesResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSharedAppSaveFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSharedAppSaveFilesResponse) ProtoMessage() {}

func (x *ListSharedAppSaveFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSharedAppSaveFilesResponse.ProtoReflect.Descriptor instead.
func (*ListSharedAppSaveFilesResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{79}
}

func (x *ListSharedAppSaveFilesResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSharedAppSaveFilesResponse) GetSharedAppSaveFiles() []*SharedAppSaveFile {
	if x != nil {
		return x.SharedAppSaveFiles
	}
	return nil
}

type RemoveSharedAppSaveFileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `Normal` can only remove owned SharedAppSaveFile
	Id            *v1.InternalID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSharedAppSaveFileRequest) Reset() {
	*x = RemoveSharedAppSaveFileRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSharedAppSaveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSharedAppSaveFileRequest) ProtoMessage() {}

func (x *RemoveSharedAppSaveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSharedAppSaveFileRequest.ProtoReflect.Descriptor instead.
func (*RemoveSharedAppSaveFileRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{80}
}

func (x *RemoveSharedAppSaveFileRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type RemoveSharedAppSaveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSharedAppSaveFileResponse) Reset() {
	*x = RemoveSharedAppSaveFileResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSharedAppSaveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSharedAppSaveFileResponse) ProtoMessage() {}

func (x *RemoveSharedAppSaveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSharedAppSaveFileResponse.ProtoReflect.Descriptor instead.
func (*RemoveSharedAppSaveFileResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{81}
}

type ListAppCategoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppCategoriesRequest) Reset() {
	*x = ListAppCategoriesRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppCategoriesRequest) ProtoMessage() {}

func (x *ListAppCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppCategoriesRequest.ProtoReflect.Descriptor instead.
func (*ListAppCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{82}
}

type ListAppCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppCategories []*AppCategory         `protobuf:"bytes,1,rep,name=app_categories,json=appCategories,proto3" json:"app_categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppCategoriesResponse) Reset() {
	*x = ListAppCategoriesResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppCategoriesResponse) ProtoMessage() {}

func (x *ListAppCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ListAppCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{83}
}

func (x *ListAppCategoriesResponse) GetAppCategories() []*AppCategory {
	if x != nil {
		return x.AppCategories
	}
	return nil
}

type CreateAppCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppCategory   *AppCategory           `protobuf:"bytes,1,opt,name=app_category,json=appCategory,proto3" json:"app_category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppCategoryRequest) Reset() {
	*x = CreateAppCategoryRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppCategoryRequest) ProtoMessage() {}

func (x *CreateAppCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateAppCategoryRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{84}
}

func (x *CreateAppCategoryRequest) GetAppCategory() *AppCategory {
	if x != nil {
		return x.AppCategory
	}
	return nil
}

type CreateAppCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppCategoryResponse) Reset() {
	*x = CreateAppCategoryResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppCategoryResponse) ProtoMessage() {}

func (x *CreateAppCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateAppCategoryResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{85}
}

func (x *CreateAppCategoryResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateAppCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppCategory   *AppCategory           `protobuf:"bytes,1,opt,name=app_category,json=appCategory,proto3" json:"app_category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppCategoryRequest) Reset() {
	*x = UpdateAppCategoryRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppCategoryRequest) ProtoMessage() {}

func (x *UpdateAppCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppCategoryRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{86}
}

func (x *UpdateAppCategoryRequest) GetAppCategory() *AppCategory {
	if x != nil {
		return x.AppCategory
	}
	return nil
}

type UpdateAppCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAppCategoryResponse) Reset() {
	*x = UpdateAppCategoryResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppCategoryResponse) ProtoMessage() {}

func (x *UpdateAppCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateAppCategoryResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{87}
}

type RemoveAppCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAppCategoryRequest) Reset() {
	*x = RemoveAppCategoryRequest{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAppCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppCategoryRequest) ProtoMessage() {}

func (x *RemoveAppCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppCategoryRequest.ProtoReflect.Descriptor instead.
func (*RemoveAppCategoryRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{88}
}

func (x *RemoveAppCategoryRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type RemoveAppCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAppCategoryResponse) Reset() {
	*x = RemoveAppCategoryResponse{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAppCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppCategoryResponse) ProtoMessage() {}

func (x *RemoveAppCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppCategoryResponse.ProtoReflect.Descriptor instead.
func (*RemoveAppCategoryResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{89}
}

type App struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Only used in response
	// Available when assigned to an app
	AssignedAppInfoId *v1.InternalID `protobuf:"bytes,4,opt,name=assigned_app_info_id,json=assignedAppInfoId,proto3,oneof" json:"assigned_app_info_id,omitempty"`
	DeviceId          *v1.InternalID `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	// false by default
	Public        bool `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *App) Reset() {
	*x = App{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{90}
}

func (x *App) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *App) GetAssignedAppInfoId() *v1.InternalID {
	if x != nil {
		return x.AssignedAppInfoId
	}
	return nil
}

func (x *App) GetDeviceId() *v1.InternalID {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *App) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type AppBinary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	NeedToken     bool                   `protobuf:"varint,4,opt,name=need_token,json=needToken,proto3" json:"need_token,omitempty"`
	Files         []*AppBinaryFile       `protobuf:"bytes,10,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppBinary) Reset() {
	*x = AppBinary{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBinary) ProtoMessage() {}

func (x *AppBinary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBinary.ProtoReflect.Descriptor instead.
func (*AppBinary) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{91}
}

func (x *AppBinary) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AppBinary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppBinary) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *AppBinary) GetNeedToken() bool {
	if x != nil {
		return x.NeedToken
	}
	return false
}

func (x *AppBinary) GetFiles() []*AppBinaryFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type AppBinaryFile struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SizeBytes int64                  `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Sha256    []byte                 `protobuf:"bytes,3,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// should be path-joined to download_url when need_token is false
	ServerFilePath string `protobuf:"bytes,4,opt,name=server_file_path,json=serverFilePath,proto3" json:"server_file_path,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AppBinaryFile) Reset() {
	*x = AppBinaryFile{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppBinaryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBinaryFile) ProtoMessage() {}

func (x *AppBinaryFile) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBinaryFile.ProtoReflect.Descriptor instead.
func (*AppBinaryFile) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{92}
}

func (x *AppBinaryFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppBinaryFile) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *AppBinaryFile) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

func (x *AppBinaryFile) GetServerFilePath() string {
	if x != nil {
		return x.ServerFilePath
	}
	return ""
}

type AppBinaryFileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OffsetBytes   int64                  `protobuf:"varint,1,opt,name=offset_bytes,json=offsetBytes,proto3" json:"offset_bytes,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Sha256        []byte                 `protobuf:"bytes,3,opt,name=sha256,proto3" json:"sha256,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppBinaryFileChunk) Reset() {
	*x = AppBinaryFileChunk{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppBinaryFileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBinaryFileChunk) ProtoMessage() {}

func (x *AppBinaryFileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBinaryFileChunk.ProtoReflect.Descriptor instead.
func (*AppBinaryFileChunk) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{93}
}

func (x *AppBinaryFileChunk) GetOffsetBytes() int64 {
	if x != nil {
		return x.OffsetBytes
	}
	return 0
}

func (x *AppBinaryFileChunk) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *AppBinaryFileChunk) GetSha256() []byte {
	if x != nil {
		return x.Sha256
	}
	return nil
}

type AppCategory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Full update
	AppIds []*v1.InternalID `protobuf:"bytes,3,rep,name=app_ids,json=appIds,proto3" json:"app_ids,omitempty"`
	// Full update
	AppInfoIds    []*v1.InternalID `protobuf:"bytes,4,rep,name=app_info_ids,json=appInfoIds,proto3" json:"app_info_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppCategory) Reset() {
	*x = AppCategory{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCategory) ProtoMessage() {}

func (x *AppCategory) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCategory.ProtoReflect.Descriptor instead.
func (*AppCategory) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{94}
}

func (x *AppCategory) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AppCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppCategory) GetAppIds() []*v1.InternalID {
	if x != nil {
		return x.AppIds
	}
	return nil
}

func (x *AppCategory) GetAppInfoIds() []*v1.InternalID {
	if x != nil {
		return x.AppInfoIds
	}
	return nil
}

type SharedAppSave struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AppInfoId     *v1.InternalID         `protobuf:"bytes,4,opt,name=app_info_id,json=appInfoId,proto3" json:"app_info_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SharedAppSave) Reset() {
	*x = SharedAppSave{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharedAppSave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedAppSave) ProtoMessage() {}

func (x *SharedAppSave) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedAppSave.ProtoReflect.Descriptor instead.
func (*SharedAppSave) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{95}
}

func (x *SharedAppSave) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SharedAppSave) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharedAppSave) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SharedAppSave) GetAppInfoId() *v1.InternalID {
	if x != nil {
		return x.AppInfoId
	}
	return nil
}

type SharedAppSaveFile struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Public          bool                   `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	SharedAppSaveId *v1.InternalID         `protobuf:"bytes,5,opt,name=shared_app_save_id,json=sharedAppSaveId,proto3" json:"shared_app_save_id,omitempty"`
	FileMetadataId  *v1.InternalID         `protobuf:"bytes,6,opt,name=file_metadata_id,json=fileMetadataId,proto3" json:"file_metadata_id,omitempty"`
	UserId          *v1.InternalID         `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SharedAppSaveFile) Reset() {
	*x = SharedAppSaveFile{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharedAppSaveFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedAppSaveFile) ProtoMessage() {}

func (x *SharedAppSaveFile) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedAppSaveFile.ProtoReflect.Descriptor instead.
func (*SharedAppSaveFile) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{96}
}

func (x *SharedAppSaveFile) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SharedAppSaveFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharedAppSaveFile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SharedAppSaveFile) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *SharedAppSaveFile) GetSharedAppSaveId() *v1.InternalID {
	if x != nil {
		return x.SharedAppSaveId
	}
	return nil
}

func (x *SharedAppSaveFile) GetFileMetadataId() *v1.InternalID {
	if x != nil {
		return x.FileMetadataId
	}
	return nil
}

func (x *SharedAppSaveFile) GetUserId() *v1.InternalID {
	if x != nil {
		return x.UserId
	}
	return nil
}

type ReportSentinelInformationRequest_SentinelLibrary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DownloadBasePath string                 `protobuf:"bytes,2,opt,name=download_base_path,json=downloadBasePath,proto3" json:"download_base_path,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReportSentinelInformationRequest_SentinelLibrary) Reset() {
	*x = ReportSentinelInformationRequest_SentinelLibrary{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSentinelInformationRequest_SentinelLibrary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSentinelInformationRequest_SentinelLibrary) ProtoMessage() {}

func (x *ReportSentinelInformationRequest_SentinelLibrary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSentinelInformationRequest_SentinelLibrary.ProtoReflect.Descriptor instead.
func (*ReportSentinelInformationRequest_SentinelLibrary) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{32, 0}
}

func (x *ReportSentinelInformationRequest_SentinelLibrary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReportSentinelInformationRequest_SentinelLibrary) GetDownloadBasePath() string {
	if x != nil {
		return x.DownloadBasePath
	}
	return ""
}

type ReportAppBinariesRequest_SentinelAppBinary struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AppBinary           *AppBinary             `protobuf:"bytes,1,opt,name=app_binary,json=appBinary,proto3" json:"app_binary,omitempty"`
	SentinelId          *v1.InternalID         `protobuf:"bytes,2,opt,name=sentinel_id,json=sentinelId,proto3" json:"sentinel_id,omitempty"`
	SentinelLibraryId   int64                  `protobuf:"varint,3,opt,name=sentinel_library_id,json=sentinelLibraryId,proto3" json:"sentinel_library_id,omitempty"`
	SentinelGeneratedId string                 `protobuf:"bytes,4,opt,name=sentinel_generated_id,json=sentinelGeneratedId,proto3" json:"sentinel_generated_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReportAppBinariesRequest_SentinelAppBinary) Reset() {
	*x = ReportAppBinariesRequest_SentinelAppBinary{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppBinariesRequest_SentinelAppBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppBinariesRequest_SentinelAppBinary) ProtoMessage() {}

func (x *ReportAppBinariesRequest_SentinelAppBinary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppBinariesRequest_SentinelAppBinary.ProtoReflect.Descriptor instead.
func (*ReportAppBinariesRequest_SentinelAppBinary) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{34, 0}
}

func (x *ReportAppBinariesRequest_SentinelAppBinary) GetAppBinary() *AppBinary {
	if x != nil {
		return x.AppBinary
	}
	return nil
}

func (x *ReportAppBinariesRequest_SentinelAppBinary) GetSentinelId() *v1.InternalID {
	if x != nil {
		return x.SentinelId
	}
	return nil
}

func (x *ReportAppBinariesRequest_SentinelAppBinary) GetSentinelLibraryId() int64 {
	if x != nil {
		return x.SentinelLibraryId
	}
	return 0
}

func (x *ReportAppBinariesRequest_SentinelAppBinary) GetSentinelGeneratedId() string {
	if x != nil {
		return x.SentinelGeneratedId
	}
	return ""
}

type SumAppRunTimeResponse_Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeRange     *v1.TimeRange          `protobuf:"bytes,1,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SumAppRunTimeResponse_Group) Reset() {
	*x = SumAppRunTimeResponse_Group{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumAppRunTimeResponse_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumAppRunTimeResponse_Group) ProtoMessage() {}

func (x *SumAppRunTimeResponse_Group) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumAppRunTimeResponse_Group.ProtoReflect.Descriptor instead.
func (*SumAppRunTimeResponse_Group) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{45, 0}
}

func (x *SumAppRunTimeResponse_Group) GetTimeRange() *v1.TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *SumAppRunTimeResponse_Group) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type ListAppSaveFilesResponse_Result struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	File          *FileMetadata          `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Pinned        bool                   `protobuf:"varint,3,opt,name=pinned,proto3" json:"pinned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppSaveFilesResponse_Result) Reset() {
	*x = ListAppSaveFilesResponse_Result{}
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppSaveFilesResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppSaveFilesResponse_Result) ProtoMessage() {}

func (x *ListAppSaveFilesResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_gebura_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppSaveFilesResponse_Result.ProtoReflect.Descriptor instead.
func (*ListAppSaveFilesResponse_Result) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_gebura_proto_rawDescGZIP(), []int{51, 0}
}

func (x *ListAppSaveFilesResponse_Result) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListAppSaveFilesResponse_Result) GetFile() *FileMetadata {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ListAppSaveFilesResponse_Result) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

var File_librarian_sephirah_v1_gebura_proto protoreflect.FileDescriptor

var file_librarian_sephirah_v1_gebura_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x62, 0x75, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x41, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a,
	0x09, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x69, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x80, 0x01,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x73, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x06, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a,
	0x12, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x06, 0x70,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x1a,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x62, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x69, 0x78, 0x65, 0x64, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x19, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x32,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x64, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x22, 0x4e,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x51,
	0x0a, 0x16, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x64, 0x22, 0x43, 0x0a, 0x17, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x57, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x40, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x3d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb,
	0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x69, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x56, 0x0a, 0x1b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x17, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x78, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x98, 0x04, 0x0a, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x65, 0x0a, 0x09, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0x4f, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x5e, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d,
	0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10,
	0x02, 0x22, 0x23, 0x0a, 0x21, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73,
	0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x41,
	0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xf3, 0x01, 0x0a, 0x11, 0x53,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x09, 0x61, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15,
	0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64,
	0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a,
	0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x45, 0x0a, 0x12, 0x55, 0x6e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x6e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x44, 0x0a, 0x18, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x09, 0x61, 0x70, 0x70, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb6, 0x01, 0x0a,
	0x14, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x52,
	0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe2,
	0x01, 0x0a, 0x14, 0x53, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x10, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x52, 0x75,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x0f, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x6d, 0x41, 0x70, 0x70, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x76, 0x0a, 0x05, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x95, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x53,
	0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48,
	0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x19, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x46, 0x0a, 0x1a, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x44, 0x0a, 0x1b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70,
	0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4a, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x53,
	0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65,
	0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x1a, 0x83, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x50,
	0x69, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18,
	0x0a, 0x16, 0x50, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x17, 0x55, 0x6e, 0x70, 0x69,
	0x6e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a,
	0x18, 0x55, 0x6e, 0x70, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x1d, 0x53, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x27, 0x0a, 0x25, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa5,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x44, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xac, 0x01, 0x0a,
	0x25, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x08, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x6a, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73,
	0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x22, 0x47, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x6a, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c,
	0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x61, 0x76,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x0d, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x35,
	0x0a, 0x09, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x69, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa2, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61,
	0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x12, 0x4e, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x61, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65,
	0x73, 0x22, 0x46, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x4b, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x7b, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73,
	0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x11, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22,
	0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x69, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x52, 0x0a, 0x19, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73,
	0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x15, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x49, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0xb3, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x5b, 0x0a,
	0x15, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x61, 0x76, 0x65,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x1e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x61, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x45, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x61,
	0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1b, 0x0a,
	0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x03, 0x41,
	0x70, 0x70, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x14, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x48, 0x00, 0x52, 0x11, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x48,
	0x01, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xc3, 0x01,
	0x0a, 0x09, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x65,
	0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32,
	0x35, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x6e, 0x0a, 0x12, 0x41, 0x70,
	0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0xba, 0x01, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x06, 0x61, 0x70, 0x70, 0x49, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x64, 0x22, 0xda, 0x02, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0e, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x2a, 0xee, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x2f, 0x0a, 0x2b, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54,
	0x45, 0x47, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x28, 0x0a, 0x24, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x46, 0x49,
	0x4c, 0x45, 0x5f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x45, 0x47, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x31, 0x0a, 0x2d, 0x41,
	0x50, 0x50, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x50,
	0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4f, 0x4c, 0x44, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x41,
	0x0a, 0x3d, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47,
	0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4f, 0x4c, 0x44, 0x45, 0x53, 0x54, 0x5f,
	0x55, 0x4e, 0x54, 0x49, 0x4c, 0x5f, 0x53, 0x41, 0x54, 0x49, 0x53, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x03, 0x42, 0x5d, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x75, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xaa, 0x02, 0x23, 0x54, 0x75, 0x69,
	0x48, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_librarian_sephirah_v1_gebura_proto_rawDescOnce sync.Once
	file_librarian_sephirah_v1_gebura_proto_rawDescData = file_librarian_sephirah_v1_gebura_proto_rawDesc
)

func file_librarian_sephirah_v1_gebura_proto_rawDescGZIP() []byte {
	file_librarian_sephirah_v1_gebura_proto_rawDescOnce.Do(func() {
		file_librarian_sephirah_v1_gebura_proto_rawDescData = protoimpl.X.CompressGZIP(file_librarian_sephirah_v1_gebura_proto_rawDescData)
	})
	return file_librarian_sephirah_v1_gebura_proto_rawDescData
}

var file_librarian_sephirah_v1_gebura_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_librarian_sephirah_v1_gebura_proto_msgTypes = make([]protoimpl.MessageInfo, 101)
var file_librarian_sephirah_v1_gebura_proto_goTypes = []any{
	(AppSaveFileCapacityStrategy)(0),                         // 0: librarian.sephirah.v1.AppSaveFileCapacityStrategy
	(ReportSentinelInformationRequest_ServerScheme)(0),       // 1: librarian.sephirah.v1.ReportSentinelInformationRequest.ServerScheme
	(*CreateAppInfoRequest)(nil),                             // 2: librarian.sephirah.v1.CreateAppInfoRequest
	(*CreateAppInfoResponse)(nil),                            // 3: librarian.sephirah.v1.CreateAppInfoResponse
	(*UpdateAppInfoRequest)(nil),                             // 4: librarian.sephirah.v1.UpdateAppInfoRequest
	(*UpdateAppInfoResponse)(nil),                            // 5: librarian.sephirah.v1.UpdateAppInfoResponse
	(*ListAppInfosRequest)(nil),                              // 6: librarian.sephirah.v1.ListAppInfosRequest
	(*ListAppInfosResponse)(nil),                             // 7: librarian.sephirah.v1.ListAppInfosResponse
	(*SyncAppInfosRequest)(nil),                              // 8: librarian.sephirah.v1.SyncAppInfosRequest
	(*SyncAppInfosResponse)(nil),                             // 9: librarian.sephirah.v1.SyncAppInfosResponse
	(*MergeAppInfosRequest)(nil),                             // 10: librarian.sephirah.v1.MergeAppInfosRequest
	(*MergeAppInfosResponse)(nil),                            // 11: librarian.sephirah.v1.MergeAppInfosResponse
	(*PickAppInfoRequest)(nil),                               // 12: librarian.sephirah.v1.PickAppInfoRequest
	(*PickAppInfoResponse)(nil),                              // 13: librarian.sephirah.v1.PickAppInfoResponse
	(*SyncAccountAppInfosRequest)(nil),                       // 14: librarian.sephirah.v1.SyncAccountAppInfosRequest
	(*SyncAccountAppInfosResponse)(nil),                      // 15: librarian.sephirah.v1.SyncAccountAppInfosResponse
	(*SearchAppInfosRequest)(nil),                            // 16: librarian.sephirah.v1.SearchAppInfosRequest
	(*SearchAppInfosResponse)(nil),                           // 17: librarian.sephirah.v1.SearchAppInfosResponse
	(*SearchNewAppInfosRequest)(nil),                         // 18: librarian.sephirah.v1.SearchNewAppInfosRequest
	(*SearchNewAppInfosResponse)(nil),                        // 19: librarian.sephirah.v1.SearchNewAppInfosResponse
	(*GetAppInfoRequest)(nil),                                // 20: librarian.sephirah.v1.GetAppInfoRequest
	(*GetAppInfoResponse)(nil),                               // 21: librarian.sephirah.v1.GetAppInfoResponse
	(*GetBoundAppInfosRequest)(nil),                          // 22: librarian.sephirah.v1.GetBoundAppInfosRequest
	(*GetBoundAppInfosResponse)(nil),                         // 23: librarian.sephirah.v1.GetBoundAppInfosResponse
	(*PurchaseAppInfoRequest)(nil),                           // 24: librarian.sephirah.v1.PurchaseAppInfoRequest
	(*PurchaseAppInfoResponse)(nil),                          // 25: librarian.sephirah.v1.PurchaseAppInfoResponse
	(*GetPurchasedAppInfosRequest)(nil),                      // 26: librarian.sephirah.v1.GetPurchasedAppInfosRequest
	(*GetPurchasedAppInfosResponse)(nil),                     // 27: librarian.sephirah.v1.GetPurchasedAppInfosResponse
	(*CreateAppRequest)(nil),                                 // 28: librarian.sephirah.v1.CreateAppRequest
	(*CreateAppResponse)(nil),                                // 29: librarian.sephirah.v1.CreateAppResponse
	(*UpdateAppRequest)(nil),                                 // 30: librarian.sephirah.v1.UpdateAppRequest
	(*UpdateAppResponse)(nil),                                // 31: librarian.sephirah.v1.UpdateAppResponse
	(*ListAppsRequest)(nil),                                  // 32: librarian.sephirah.v1.ListAppsRequest
	(*ListAppsResponse)(nil),                                 // 33: librarian.sephirah.v1.ListAppsResponse
	(*ReportSentinelInformationRequest)(nil),                 // 34: librarian.sephirah.v1.ReportSentinelInformationRequest
	(*ReportSentinelInformationResponse)(nil),                // 35: librarian.sephirah.v1.ReportSentinelInformationResponse
	(*ReportAppBinariesRequest)(nil),                         // 36: librarian.sephirah.v1.ReportAppBinariesRequest
	(*ReportAppBinariesResponse)(nil),                        // 37: librarian.sephirah.v1.ReportAppBinariesResponse
	(*AssignAppRequest)(nil),                                 // 38: librarian.sephirah.v1.AssignAppRequest
	(*AssignAppResponse)(nil),                                // 39: librarian.sephirah.v1.AssignAppResponse
	(*UnAssignAppRequest)(nil),                               // 40: librarian.sephirah.v1.UnAssignAppRequest
	(*UnAssignAppResponse)(nil),                              // 41: librarian.sephirah.v1.UnAssignAppResponse
	(*DownloadAppBinaryRequest)(nil),                         // 42: librarian.sephirah.v1.DownloadAppBinaryRequest
	(*DownloadAppBinaryResponse)(nil),                        // 43: librarian.sephirah.v1.DownloadAppBinaryResponse
	(*AddAppRunTimeRequest)(nil),                             // 44: librarian.sephirah.v1.AddAppRunTimeRequest
	(*AddAppRunTimeResponse)(nil),                            // 45: librarian.sephirah.v1.AddAppRunTimeResponse
	(*SumAppRunTimeRequest)(nil),                             // 46: librarian.sephirah.v1.SumAppRunTimeRequest
	(*SumAppRunTimeResponse)(nil),                            // 47: librarian.sephirah.v1.SumAppRunTimeResponse
	(*UploadAppSaveFileRequest)(nil),                         // 48: librarian.sephirah.v1.UploadAppSaveFileRequest
	(*UploadAppSaveFileResponse)(nil),                        // 49: librarian.sephirah.v1.UploadAppSaveFileResponse
	(*DownloadAppSaveFileRequest)(nil),                       // 50: librarian.sephirah.v1.DownloadAppSaveFileRequest
	(*DownloadAppSaveFileResponse)(nil),                      // 51: librarian.sephirah.v1.DownloadAppSaveFileResponse
	(*ListAppSaveFilesRequest)(nil),                          // 52: librarian.sephirah.v1.ListAppSaveFilesRequest
	(*ListAppSaveFilesResponse)(nil),                         // 53: librarian.sephirah.v1.ListAppSaveFilesResponse
	(*RemoveAppSaveFileRequest)(nil),                         // 54: librarian.sephirah.v1.RemoveAppSaveFileRequest
	(*RemoveAppSaveFileResponse)(nil),                        // 55: librarian.sephirah.v1.RemoveAppSaveFileResponse
	(*PinAppSaveFileRequest)(nil),                            // 56: librarian.sephirah.v1.PinAppSaveFileRequest
	(*PinAppSaveFileResponse)(nil),                           // 57: librarian.sephirah.v1.PinAppSaveFileResponse
	(*UnpinAppSaveFileRequest)(nil),                          // 58: librarian.sephirah.v1.UnpinAppSaveFileRequest
	(*UnpinAppSaveFileResponse)(nil),                         // 59: librarian.sephirah.v1.UnpinAppSaveFileResponse
	(*SetAppSaveFileCapacityRequest)(nil),                    // 60: librarian.sephirah.v1.SetAppSaveFileCapacityRequest
	(*SetAppSaveFileCapacityResponse)(nil),                   // 61: librarian.sephirah.v1.SetAppSaveFileCapacityResponse
	(*SetAppSaveFileCapacityDefaultRequest)(nil),             // 62: librarian.sephirah.v1.SetAppSaveFileCapacityDefaultRequest
	(*SetAppSaveFileCapacityDefaultResponse)(nil),            // 63: librarian.sephirah.v1.SetAppSaveFileCapacityDefaultResponse
	(*GetAppSaveFileCapacityRequest)(nil),                    // 64: librarian.sephirah.v1.GetAppSaveFileCapacityRequest
	(*GetAppSaveFileCapacityResponse)(nil),                   // 65: librarian.sephirah.v1.GetAppSaveFileCapacityResponse
	(*GetAppSaveFileCapacityDefaultRequest)(nil),             // 66: librarian.sephirah.v1.GetAppSaveFileCapacityDefaultRequest
	(*GetAppSaveFileCapacityDefaultResponse)(nil),            // 67: librarian.sephirah.v1.GetAppSaveFileCapacityDefaultResponse
	(*CreateSharedAppSaveRequest)(nil),                       // 68: librarian.sephirah.v1.CreateSharedAppSaveRequest
	(*CreateSharedAppSaveResponse)(nil),                      // 69: librarian.sephirah.v1.CreateSharedAppSaveResponse
	(*UpdateSharedAppSaveRequest)(nil),                       // 70: librarian.sephirah.v1.UpdateSharedAppSaveRequest
	(*UpdateSharedAppSaveResponse)(nil),                      // 71: librarian.sephirah.v1.UpdateSharedAppSaveResponse
	(*ListSharedAppSavesRequest)(nil),                        // 72: librarian.sephirah.v1.ListSharedAppSavesRequest
	(*ListSharedAppSavesResponse)(nil),                       // 73: librarian.sephirah.v1.ListSharedAppSavesResponse
	(*RemoveSharedAppSaveRequest)(nil),                       // 74: librarian.sephirah.v1.RemoveSharedAppSaveRequest
	(*RemoveSharedAppSaveResponse)(nil),                      // 75: librarian.sephirah.v1.RemoveSharedAppSaveResponse
	(*CreateSharedAppSaveFileRequest)(nil),                   // 76: librarian.sephirah.v1.CreateSharedAppSaveFileRequest
	(*CreateSharedAppSaveFileResponse)(nil),                  // 77: librarian.sephirah.v1.CreateSharedAppSaveFileResponse
	(*UpdateSharedAppSaveFileRequest)(nil),                   // 78: librarian.sephirah.v1.UpdateSharedAppSaveFileRequest
	(*UpdateSharedAppSaveFileResponse)(nil),                  // 79: librarian.sephirah.v1.UpdateSharedAppSaveFileResponse
	(*ListSharedAppSaveFilesRequest)(nil),                    // 80: librarian.sephirah.v1.ListSharedAppSaveFilesRequest
	(*ListSharedAppSaveFilesResponse)(nil),                   // 81: librarian.sephirah.v1.ListSharedAppSaveFilesResponse
	(*RemoveSharedAppSaveFileRequest)(nil),                   // 82: librarian.sephirah.v1.RemoveSharedAppSaveFileRequest
	(*RemoveSharedAppSaveFileResponse)(nil),                  // 83: librarian.sephirah.v1.RemoveSharedAppSaveFileResponse
	(*ListAppCategoriesRequest)(nil),                         // 84: librarian.sephirah.v1.ListAppCategoriesRequest
	(*ListAppCategoriesResponse)(nil),                        // 85: librarian.sephirah.v1.ListAppCategoriesResponse
	(*CreateAppCategoryRequest)(nil),                         // 86: librarian.sephirah.v1.CreateAppCategoryRequest
	(*CreateAppCategoryResponse)(nil),                        // 87: librarian.sephirah.v1.CreateAppCategoryResponse
	(*UpdateAppCategoryRequest)(nil),                         // 88: librarian.sephirah.v1.UpdateAppCategoryRequest
	(*UpdateAppCategoryResponse)(nil),                        // 89: librarian.sephirah.v1.UpdateAppCategoryResponse
	(*RemoveAppCategoryRequest)(nil),                         // 90: librarian.sephirah.v1.RemoveAppCategoryRequest
	(*RemoveAppCategoryResponse)(nil),                        // 91: librarian.sephirah.v1.RemoveAppCategoryResponse
	(*App)(nil),                                              // 92: librarian.sephirah.v1.App
	(*AppBinary)(nil),                                        // 93: librarian.sephirah.v1.AppBinary
	(*AppBinaryFile)(nil),                                    // 94: librarian.sephirah.v1.AppBinaryFile
	(*AppBinaryFileChunk)(nil),                               // 95: librarian.sephirah.v1.AppBinaryFileChunk
	(*AppCategory)(nil),                                      // 96: librarian.sephirah.v1.AppCategory
	(*SharedAppSave)(nil),                                    // 97: librarian.sephirah.v1.SharedAppSave
	(*SharedAppSaveFile)(nil),                                // 98: librarian.sephirah.v1.SharedAppSaveFile
	(*ReportSentinelInformationRequest_SentinelLibrary)(nil), // 99: librarian.sephirah.v1.ReportSentinelInformationRequest.SentinelLibrary
	(*ReportAppBinariesRequest_SentinelAppBinary)(nil),       // 100: librarian.sephirah.v1.ReportAppBinariesRequest.SentinelAppBinary
	(*SumAppRunTimeResponse_Group)(nil),                      // 101: librarian.sephirah.v1.SumAppRunTimeResponse.Group
	(*ListAppSaveFilesResponse_Result)(nil),                  // 102: librarian.sephirah.v1.ListAppSaveFilesResponse.Result
	(*v1.AppInfo)(nil),                                       // 103: librarian.v1.AppInfo
	(*v1.InternalID)(nil),                                    // 104: librarian.v1.InternalID
	(*v1.PagingRequest)(nil),                                 // 105: librarian.v1.PagingRequest
	(v1.AppType)(0),                                          // 106: librarian.v1.AppType
	(*v1.PagingResponse)(nil),                                // 107: librarian.v1.PagingResponse
	(*v1.AppInfoID)(nil),                                     // 108: librarian.v1.AppInfoID
	(*v1.AccountID)(nil),                                     // 109: librarian.v1.AccountID
	(*v1.AppInfoMixed)(nil),                                  // 110: librarian.v1.AppInfoMixed
	(*v1.TimeRange)(nil),                                     // 111: librarian.v1.TimeRange
	(*v1.TimeAggregation)(nil),                               // 112: librarian.v1.TimeAggregation
	(*FileMetadata)(nil),                                     // 113: librarian.sephirah.v1.FileMetadata
	(*durationpb.Duration)(nil),                              // 114: google.protobuf.Duration
}
var file_librarian_sephirah_v1_gebura_proto_depIdxs = []int32{
	103, // 0: librarian.sephirah.v1.CreateAppInfoRequest.app_info:type_name -> librarian.v1.AppInfo
	104, // 1: librarian.sephirah.v1.CreateAppInfoResponse.id:type_name -> librarian.v1.InternalID
	103, // 2: librarian.sephirah.v1.UpdateAppInfoRequest.app_info:type_name -> librarian.v1.AppInfo
	105, // 3: librarian.sephirah.v1.ListAppInfosRequest.paging:type_name -> librarian.v1.PagingRequest
	106, // 4: librarian.sephirah.v1.ListAppInfosRequest.type_filter:type_name -> librarian.v1.AppType
	104, // 5: librarian.sephirah.v1.ListAppInfosRequest.id_filter:type_name -> librarian.v1.InternalID
	107, // 6: librarian.sephirah.v1.ListAppInfosResponse.paging:type_name -> librarian.v1.PagingResponse
	103, // 7: librarian.sephirah.v1.ListAppInfosResponse.app_infos:type_name -> librarian.v1.AppInfo
	108, // 8: librarian.sephirah.v1.SyncAppInfosRequest.app_info_ids:type_name -> librarian.v1.AppInfoID
	103, // 9: librarian.sephirah.v1.SyncAppInfosResponse.app_infos:type_name -> librarian.v1.AppInfo
	103, // 10: librarian.sephirah.v1.MergeAppInfosRequest.base:type_name -> librarian.v1.AppInfo
	104, // 11: librarian.sephirah.v1.MergeAppInfosRequest.merged:type_name -> librarian.v1.InternalID
	104, // 12: librarian.sephirah.v1.PickAppInfoRequest.picked:type_name -> librarian.v1.InternalID
	109, // 13: librarian.sephirah.v1.SyncAccountAppInfosRequest.account_id:type_name -> librarian.v1.AccountID
	105, // 14: librarian.sephirah.v1.SearchAppInfosRequest.paging:type_name -> librarian.v1.PagingRequest
	107, // 15: librarian.sephirah.v1.SearchAppInfosResponse.paging:type_name -> librarian.v1.PagingResponse
	110, // 16: librarian.sephirah.v1.SearchAppInfosResponse.app_infos:type_name -> librarian.v1.AppInfoMixed
	105, // 17: librarian.sephirah.v1.SearchNewAppInfosRequest.paging:type_name -> librarian.v1.PagingRequest
	107, // 18: librarian.sephirah.v1.SearchNewAppInfosResponse.paging:type_name -> librarian.v1.PagingResponse
	103, // 19: librarian.sephirah.v1.SearchNewAppInfosResponse.app_infos:type_name -> librarian.v1.AppInfo
	104, // 20: librarian.sephirah.v1.GetAppInfoRequest.app_info_id:type_name -> librarian.v1.InternalID
	103, // 21: librarian.sephirah.v1.GetAppInfoResponse.app_info:type_name -> librarian.v1.AppInfo
	104, // 22: librarian.sephirah.v1.GetBoundAppInfosRequest.app_info_id:type_name -> librarian.v1.InternalID
	103, // 23: librarian.sephirah.v1.GetBoundAppInfosResponse.app_infos:type_name -> librarian.v1.AppInfo
	108, // 24: librarian.sephirah.v1.PurchaseAppInfoRequest.app_info_id:type_name -> librarian.v1.AppInfoID
	104, // 25: librarian.sephirah.v1.PurchaseAppInfoResponse.id:type_name -> librarian.v1.InternalID
	110, // 26: librarian.sephirah.v1.GetPurchasedAppInfosResponse.app_infos:type_name -> librarian.v1.AppInfoMixed
	92,  // 27: librarian.sephirah.v1.CreateAppRequest.app:type_name -> librarian.sephirah.v1.App
	104, // 28: librarian.sephirah.v1.CreateAppResponse.id:type_name -> librarian.v1.InternalID
	92,  // 29: librarian.sephirah.v1.UpdateAppRequest.app:type_name -> librarian.sephirah.v1.App
	105, // 30: librarian.sephirah.v1.ListAppsRequest.paging:type_name -> librarian.v1.PagingRequest
	104, // 31: librarian.sephirah.v1.ListAppsRequest.owner_id_filter:type_name -> librarian.v1.InternalID
	104, // 32: librarian.sephirah.v1.ListAppsRequest.id_filter:type_name -> librarian.v1.InternalID
	104, // 33: librarian.sephirah.v1.ListAppsRequest.assigned_app_info_id_filter:type_name -> librarian.v1.InternalID
	104, // 34: librarian.sephirah.v1.ListAppsRequest.device_id_filter:type_name -> librarian.v1.InternalID
	107, // 35: librarian.sephirah.v1.ListAppsResponse.paging:type_name -> librarian.v1.PagingResponse
	92,  // 36: librarian.sephirah.v1.ListAppsResponse.apps:type_name -> librarian.sephirah.v1.App
	1,   // 37: librarian.sephirah.v1.ReportSentinelInformationRequest.scheme:type_name -> librarian.sephirah.v1.ReportSentinelInformationRequest.ServerScheme
	99,  // 38: librarian.sephirah.v1.ReportSentinelInformationRequest.libraries:type_name -> librarian.sephirah.v1.ReportSentinelInformationRequest.SentinelLibrary
	100, // 39: librarian.sephirah.v1.ReportAppBinariesRequest.sentinel_app_binaries:type_name -> librarian.sephirah.v1.ReportAppBinariesRequest.SentinelAppBinary
	104, // 40: librarian.sephirah.v1.AssignAppRequest.app_info_id:type_name -> librarian.v1.InternalID
	104, // 41: librarian.sephirah.v1.AssignAppRequest.app_id:type_name -> librarian.v1.InternalID
	104, // 42: librarian.sephirah.v1.UnAssignAppRequest.app_id:type_name -> librarian.v1.InternalID
	104, // 43: librarian.sephirah.v1.DownloadAppBinaryRequest.id:type_name -> librarian.v1.InternalID
	93,  // 44: librarian.sephirah.v1.DownloadAppBinaryResponse.app_binary:type_name -> librarian.sephirah.v1.AppBinary
	104, // 45: librarian.sephirah.v1.AddAppRunTimeRequest.app_id:type_name -> librarian.v1.InternalID
	104, // 46: librarian.sephirah.v1.AddAppRunTimeRequest.device_id:type_name -> librarian.v1.InternalID
	111, // 47: librarian.sephirah.v1.AddAppRunTimeRequest.time_range:type_name -> librarian.v1.TimeRange
	104, // 48: librarian.sephirah.v1.SumAppRunTimeRequest.app_id_filter:type_name -> librarian.v1.InternalID
	104, // 49: librarian.sephirah.v1.SumAppRunTimeRequest.device_id_filter:type_name -> librarian.v1.InternalID
	112, // 50: librarian.sephirah.v1.SumAppRunTimeRequest.time_aggregation:type_name -> librarian.v1.TimeAggregation
	101, // 51: librarian.sephirah.v1.SumAppRunTimeResponse.run_time_groups:type_name -> librarian.sephirah.v1.SumAppRunTimeResponse.Group
	113, // 52: librarian.sephirah.v1.UploadAppSaveFileRequest.file_metadata:type_name -> librarian.sephirah.v1.FileMetadata
	104, // 53: librarian.sephirah.v1.UploadAppSaveFileRequest.app_id:type_name -> librarian.v1.InternalID
	104, // 54: librarian.sephirah.v1.DownloadAppSaveFileRequest.id:type_name -> librarian.v1.InternalID
	104, // 55: librarian.sephirah.v1.ListAppSaveFilesRequest.app_id:type_name -> librarian.v1.InternalID
	102, // 56: librarian.sephirah.v1.ListAppSaveFilesResponse.results:type_name -> librarian.sephirah.v1.ListAppSaveFilesResponse.Result
	104, // 57: librarian.sephirah.v1.RemoveAppSaveFileRequest.id:type_name -> librarian.v1.InternalID
	104, // 58: librarian.sephirah.v1.PinAppSaveFileRequest.id:type_name -> librarian.v1.InternalID
	104, // 59: librarian.sephirah.v1.UnpinAppSaveFileRequest.id:type_name -> librarian.v1.InternalID
	104, // 60: librarian.sephirah.v1.SetAppSaveFileCapacityRequest.app_id:type_name -> librarian.v1.InternalID
	0,   // 61: librarian.sephirah.v1.SetAppSaveFileCapacityRequest.strategy:type_name -> librarian.sephirah.v1.AppSaveFileCapacityStrategy
	0,   // 62: librarian.sephirah.v1.SetAppSaveFileCapacityDefaultRequest.strategy:type_name -> librarian.sephirah.v1.AppSaveFileCapacityStrategy
	104, // 63: librarian.sephirah.v1.GetAppSaveFileCapacityRequest.app_id:type_name -> librarian.v1.InternalID
	0,   // 64: librarian.sephirah.v1.GetAppSaveFileCapacityResponse.strategy:type_name -> librarian.sephirah.v1.AppSaveFileCapacityStrategy
	0,   // 65: librarian.sephirah.v1.GetAppSaveFileCapacityDefaultResponse.strategy:type_name -> librarian.sephirah.v1.AppSaveFileCapacityStrategy
	97,  // 66: librarian.sephirah.v1.CreateSharedAppSaveRequest.shared_app_save:type_name -> librarian.sephirah.v1.SharedAppSave
	104, // 67: librarian.sephirah.v1.CreateSharedAppSaveResponse.id:type_name -> librarian.v1.InternalID
	97,  // 68: librarian.sephirah.v1.UpdateSharedAppSaveRequest.shared_app_save:type_name -> librarian.sephirah.v1.SharedAppSave
	105, // 69: librarian.sephirah.v1.ListSharedAppSavesRequest.paging:type_name -> librarian.v1.PagingRequest
	104, // 70: librarian.sephirah.v1.ListSharedAppSavesRequest.id_filter:type_name -> librarian.v1.InternalID
	104, // 71: librarian.sephirah.v1.ListSharedAppSavesRequest.app_info_id_filter:type_name -> librarian.v1.InternalID
	107, // 72: librarian.sephirah.v1.ListSharedAppSavesResponse.paging:type_name -> librarian.v1.PagingResponse
	97,  // 73: librarian.sephirah.v1.ListSharedAppSavesResponse.shared_app_saves:type_name -> librarian.sephirah.v1.SharedAppSave
	104, // 74: librarian.sephirah.v1.RemoveSharedAppSaveRequest.id:type_name -> librarian.v1.InternalID
	98,  // 75: librarian.sephirah.v1.CreateSharedAppSaveFileRequest.shared_app_save_file:type_name -> librarian.sephirah.v1.SharedAppSaveFile
	104, // 76: librarian.sephirah.v1.CreateSharedAppSaveFileResponse.id:type_name -> librarian.v1.InternalID
	98,  // 77: librarian.sephirah.v1.UpdateSharedAppSaveFileRequest.shared_app_save_file:type_name -> librarian.sephirah.v1.SharedAppSaveFile
	105, // 78: librarian.sephirah.v1.ListSharedAppSaveFilesRequest.paging:type_name -> librarian.v1.PagingRequest
	104, // 79: librarian.sephirah.v1.ListSharedAppSaveFilesRequest.id_filter:type_name -> librarian.v1.InternalID
	104, // 80: librarian.sephirah.v1.ListSharedAppSaveFilesRequest.shared_app_save_id_filter:type_name -> librarian.v1.InternalID
	104, // 81: librarian.sephirah.v1.ListSharedAppSaveFilesRequest.user_id_filter:type_name -> librarian.v1.InternalID
	107, // 82: librarian.sephirah.v1.ListSharedAppSaveFilesResponse.paging:type_name -> librarian.v1.PagingResponse
	98,  // 83: librarian.sephirah.v1.ListSharedAppSaveFilesResponse.shared_app_save_files:type_name -> librarian.sephirah.v1.SharedAppSaveFile
	104, // 84: librarian.sephirah.v1.RemoveSharedAppSaveFileRequest.id:type_name -> librarian.v1.InternalID
	96,  // 85: librarian.sephirah.v1.ListAppCategoriesResponse.app_categories:type_name -> librarian.sephirah.v1.AppCategory
	96,  // 86: librarian.sephirah.v1.CreateAppCategoryRequest.app_category:type_name -> librarian.sephirah.v1.AppCategory
	104, // 87: librarian.sephirah.v1.CreateAppCategoryResponse.id:type_name -> librarian.v1.InternalID
	96,  // 88: librarian.sephirah.v1.UpdateAppCategoryRequest.app_category:type_name -> librarian.sephirah.v1.AppCategory
	104, // 89: librarian.sephirah.v1.RemoveAppCategoryRequest.id:type_name -> librarian.v1.InternalID
	104, // 90: librarian.sephirah.v1.App.id:type_name -> librarian.v1.InternalID
	104, // 91: librarian.sephirah.v1.App.assigned_app_info_id:type_name -> librarian.v1.InternalID
	104, // 92: librarian.sephirah.v1.App.device_id:type_name -> librarian.v1.InternalID
	104, // 93: librarian.sephirah.v1.AppBinary.id:type_name -> librarian.v1.InternalID
	94,  // 94: librarian.sephirah.v1.AppBinary.files:type_name -> librarian.sephirah.v1.AppBinaryFile
	104, // 95: librarian.sephirah.v1.AppCategory.id:type_name -> librarian.v1.InternalID
	104, // 96: librarian.sephirah.v1.AppCategory.app_ids:type_name -> librarian.v1.InternalID
	104, // 97: librarian.sephirah.v1.AppCategory.app_info_ids:type_name -> librarian.v1.InternalID
	104, // 98: librarian.sephirah.v1.SharedAppSave.id:type_name -> librarian.v1.InternalID
	104, // 99: librarian.sephirah.v1.SharedAppSave.app_info_id:type_name -> librarian.v1.InternalID
	104, // 100: librarian.sephirah.v1.SharedAppSaveFile.id:type_name -> librarian.v1.InternalID
	104, // 101: librarian.sephirah.v1.SharedAppSaveFile.shared_app_save_id:type_name -> librarian.v1.InternalID
	104, // 102: librarian.sephirah.v1.SharedAppSaveFile.file_metadata_id:type_name -> librarian.v1.InternalID
	104, // 103: librarian.sephirah.v1.SharedAppSaveFile.user_id:type_name -> librarian.v1.InternalID
	93,  // 104: librarian.sephirah.v1.ReportAppBinariesRequest.SentinelAppBinary.app_binary:type_name -> librarian.sephirah.v1.AppBinary
	104, // 105: librarian.sephirah.v1.ReportAppBinariesRequest.SentinelAppBinary.sentinel_id:type_name -> librarian.v1.InternalID
	111, // 106: librarian.sephirah.v1.SumAppRunTimeResponse.Group.time_range:type_name -> librarian.v1.TimeRange
	114, // 107: librarian.sephirah.v1.SumAppRunTimeResponse.Group.duration:type_name -> google.protobuf.Duration
	104, // 108: librarian.sephirah.v1.ListAppSaveFilesResponse.Result.id:type_name -> librarian.v1.InternalID
	113, // 109: librarian.sephirah.v1.ListAppSaveFilesResponse.Result.file:type_name -> librarian.sephirah.v1.FileMetadata
	110, // [110:110] is the sub-list for method output_type
	110, // [110:110] is the sub-list for method input_type
	110, // [110:110] is the sub-list for extension type_name
	110, // [110:110] is the sub-list for extension extendee
	0,   // [0:110] is the sub-list for field type_name
}

func init() { file_librarian_sephirah_v1_gebura_proto_init() }
func file_librarian_sephirah_v1_gebura_proto_init() {
	if File_librarian_sephirah_v1_gebura_proto != nil {
		return
	}
	file_librarian_sephirah_v1_base_proto_init()
	file_librarian_sephirah_v1_gebura_proto_msgTypes[6].OneofWrappers = []any{}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[24].OneofWrappers = []any{}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[41].OneofWrappers = []any{}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[58].OneofWrappers = []any{
		(*SetAppSaveFileCapacityRequest_User)(nil),
		(*SetAppSaveFileCapacityRequest_AppId)(nil),
	}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[60].OneofWrappers = []any{
		(*SetAppSaveFileCapacityDefaultRequest_App)(nil),
	}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[62].OneofWrappers = []any{
		(*GetAppSaveFileCapacityRequest_User)(nil),
		(*GetAppSaveFileCapacityRequest_AppId)(nil),
	}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[64].OneofWrappers = []any{
		(*GetAppSaveFileCapacityDefaultRequest_App)(nil),
	}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[90].OneofWrappers = []any{}
	file_librarian_sephirah_v1_gebura_proto_msgTypes[96].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_librarian_sephirah_v1_gebura_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   101,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_librarian_sephirah_v1_gebura_proto_goTypes,
		DependencyIndexes: file_librarian_sephirah_v1_gebura_proto_depIdxs,
		EnumInfos:         file_librarian_sephirah_v1_gebura_proto_enumTypes,
		MessageInfos:      file_librarian_sephirah_v1_gebura_proto_msgTypes,
	}.Build()
	File_librarian_sephirah_v1_gebura_proto = out.File
	file_librarian_sephirah_v1_gebura_proto_rawDesc = nil
	file_librarian_sephirah_v1_gebura_proto_goTypes = nil
	file_librarian_sephirah_v1_gebura_proto_depIdxs = nil
}
