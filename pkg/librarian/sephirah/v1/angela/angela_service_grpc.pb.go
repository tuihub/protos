// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: librarian/sephirah/v1/angela/angela_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	LibrarianAngelaService_GetServerInformation_FullMethodName      = "/librarian.sephirah.v1.angela.LibrarianAngelaService/GetServerInformation"
	LibrarianAngelaService_GetServerConfig_FullMethodName           = "/librarian.sephirah.v1.angela.LibrarianAngelaService/GetServerConfig"
	LibrarianAngelaService_UpdateServerConfig_FullMethodName        = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdateServerConfig"
	LibrarianAngelaService_GetToken_FullMethodName                  = "/librarian.sephirah.v1.angela.LibrarianAngelaService/GetToken"
	LibrarianAngelaService_RefreshToken_FullMethodName              = "/librarian.sephirah.v1.angela.LibrarianAngelaService/RefreshToken"
	LibrarianAngelaService_CreateUser_FullMethodName                = "/librarian.sephirah.v1.angela.LibrarianAngelaService/CreateUser"
	LibrarianAngelaService_UpdateUser_FullMethodName                = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdateUser"
	LibrarianAngelaService_ListUsers_FullMethodName                 = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListUsers"
	LibrarianAngelaService_ListPorters_FullMethodName               = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListPorters"
	LibrarianAngelaService_UpdatePorterStatus_FullMethodName        = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdatePorterStatus"
	LibrarianAngelaService_DeletePorter_FullMethodName              = "/librarian.sephirah.v1.angela.LibrarianAngelaService/DeletePorter"
	LibrarianAngelaService_CreateSentinel_FullMethodName            = "/librarian.sephirah.v1.angela.LibrarianAngelaService/CreateSentinel"
	LibrarianAngelaService_GetSentinelToken_FullMethodName          = "/librarian.sephirah.v1.angela.LibrarianAngelaService/GetSentinelToken"
	LibrarianAngelaService_UpdateSentinel_FullMethodName            = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdateSentinel"
	LibrarianAngelaService_ListSentinels_FullMethodName             = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListSentinels"
	LibrarianAngelaService_DeleteSentinel_FullMethodName            = "/librarian.sephirah.v1.angela.LibrarianAngelaService/DeleteSentinel"
	LibrarianAngelaService_ListStorageCapacityUsage_FullMethodName  = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListStorageCapacityUsage"
	LibrarianAngelaService_SimpleUploadFile_FullMethodName          = "/librarian.sephirah.v1.angela.LibrarianAngelaService/SimpleUploadFile"
	LibrarianAngelaService_SimpleDownloadFile_FullMethodName        = "/librarian.sephirah.v1.angela.LibrarianAngelaService/SimpleDownloadFile"
	LibrarianAngelaService_PresignedUploadFile_FullMethodName       = "/librarian.sephirah.v1.angela.LibrarianAngelaService/PresignedUploadFile"
	LibrarianAngelaService_PresignedUploadFileStatus_FullMethodName = "/librarian.sephirah.v1.angela.LibrarianAngelaService/PresignedUploadFileStatus"
	LibrarianAngelaService_PresignedDownloadFile_FullMethodName     = "/librarian.sephirah.v1.angela.LibrarianAngelaService/PresignedDownloadFile"
	LibrarianAngelaService_SearchAppInfos_FullMethodName            = "/librarian.sephirah.v1.angela.LibrarianAngelaService/SearchAppInfos"
	LibrarianAngelaService_CreateStoreApp_FullMethodName            = "/librarian.sephirah.v1.angela.LibrarianAngelaService/CreateStoreApp"
	LibrarianAngelaService_UpdateStoreApp_FullMethodName            = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdateStoreApp"
	LibrarianAngelaService_ListStoreApps_FullMethodName             = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListStoreApps"
	LibrarianAngelaService_ListStoreAppBinaries_FullMethodName      = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListStoreAppBinaries"
	LibrarianAngelaService_UpdateStoreAppBinary_FullMethodName      = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdateStoreAppBinary"
	LibrarianAngelaService_ListStoreAppBinaryFiles_FullMethodName   = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListStoreAppBinaryFiles"
	LibrarianAngelaService_CreateStoreAppSaveFile_FullMethodName    = "/librarian.sephirah.v1.angela.LibrarianAngelaService/CreateStoreAppSaveFile"
	LibrarianAngelaService_UpdateStoreAppSaveFile_FullMethodName    = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UpdateStoreAppSaveFile"
	LibrarianAngelaService_UploadStoreAppSaveFile_FullMethodName    = "/librarian.sephirah.v1.angela.LibrarianAngelaService/UploadStoreAppSaveFile"
	LibrarianAngelaService_ListStoreAppSaveFiles_FullMethodName     = "/librarian.sephirah.v1.angela.LibrarianAngelaService/ListStoreAppSaveFiles"
	LibrarianAngelaService_DeleteStoreAppSaveFile_FullMethodName    = "/librarian.sephirah.v1.angela.LibrarianAngelaService/DeleteStoreAppSaveFile"
)

// LibrarianAngelaServiceClient is the client API for LibrarianAngelaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Angela provides the admin control interface
type LibrarianAngelaServiceClient interface {
	// Allow anonymous call, use accessToken to get complete information
	GetServerInformation(ctx context.Context, in *GetServerInformationRequest, opts ...grpc.CallOption) (*GetServerInformationResponse, error)
	GetServerConfig(ctx context.Context, in *GetServerConfigRequest, opts ...grpc.CallOption) (*GetServerConfigResponse, error)
	UpdateServerConfig(ctx context.Context, in *UpdateServerConfigRequest, opts ...grpc.CallOption) (*UpdateServerConfigResponse, error)
	// `Tiphereth` Login via password and get two token
	GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenResponse, error)
	// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
	RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error)
	// `Tiphereth`
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	// `Tiphereth`
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	// `Tiphereth`
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	// `Tiphereth`
	ListPorters(ctx context.Context, in *ListPortersRequest, opts ...grpc.CallOption) (*ListPortersResponse, error)
	// `Tiphereth`
	UpdatePorterStatus(ctx context.Context, in *UpdatePorterStatusRequest, opts ...grpc.CallOption) (*UpdatePorterStatusResponse, error)
	// `Tiphereth` Delete porter, only when porter is disabled
	DeletePorter(ctx context.Context, in *DeletePorterRequest, opts ...grpc.CallOption) (*DeletePorterResponse, error)
	// `Tiphereth`
	CreateSentinel(ctx context.Context, in *CreateSentinelRequest, opts ...grpc.CallOption) (*CreateSentinelResponse, error)
	// `Tiphereth`
	GetSentinelToken(ctx context.Context, in *GetSentinelTokenRequest, opts ...grpc.CallOption) (*GetSentinelTokenResponse, error)
	// `Tiphereth`
	UpdateSentinel(ctx context.Context, in *UpdateSentinelRequest, opts ...grpc.CallOption) (*UpdateSentinelResponse, error)
	// `Tiphereth`
	ListSentinels(ctx context.Context, in *ListSentinelsRequest, opts ...grpc.CallOption) (*ListSentinelsResponse, error)
	// `Tiphereth`
	DeleteSentinel(ctx context.Context, in *DeleteSentinelRequest, opts ...grpc.CallOption) (*DeleteSentinelResponse, error)
	// `Binah`
	ListStorageCapacityUsage(ctx context.Context, in *ListStorageCapacityUsageRequest, opts ...grpc.CallOption) (*ListStorageCapacityUsageResponse, error)
	// `Binah` `upload_token`
	// Maximum 256M
	// Server must send response at least once a minute to keepalive.
	// Client should ignore in_process response and wait for success or error response.
	SimpleUploadFile(ctx context.Context, opts ...grpc.CallOption) (grpc.BidiStreamingClient[SimpleUploadFileRequest, SimpleUploadFileResponse], error)
	// `Binah` `download_token`
	// Server will not check the receiving state
	SimpleDownloadFile(ctx context.Context, in *SimpleDownloadFileRequest, opts ...grpc.CallOption) (grpc.ServerStreamingClient[SimpleDownloadFileResponse], error)
	// `Binah` `upload_token`
	// Upload file through http url
	PresignedUploadFile(ctx context.Context, in *PresignedUploadFileRequest, opts ...grpc.CallOption) (*PresignedUploadFileResponse, error)
	// `Binah` `upload_token`
	// Report file transfer status. Mainly used to trigger server post-process immediately
	PresignedUploadFileStatus(ctx context.Context, in *PresignedUploadFileStatusRequest, opts ...grpc.CallOption) (*PresignedUploadFileStatusResponse, error)
	// `Binah` `download_token`
	// Download file through http url
	PresignedDownloadFile(ctx context.Context, in *PresignedDownloadFileRequest, opts ...grpc.CallOption) (*PresignedDownloadFileResponse, error)
	// `Gebura`
	SearchAppInfos(ctx context.Context, in *SearchAppInfosRequest, opts ...grpc.CallOption) (*SearchAppInfosResponse, error)
	// `Gebura`
	CreateStoreApp(ctx context.Context, in *CreateStoreAppRequest, opts ...grpc.CallOption) (*CreateStoreAppResponse, error)
	// `Gebura`
	UpdateStoreApp(ctx context.Context, in *UpdateStoreAppRequest, opts ...grpc.CallOption) (*UpdateStoreAppResponse, error)
	// `Gebura`
	ListStoreApps(ctx context.Context, in *ListStoreAppsRequest, opts ...grpc.CallOption) (*ListStoreAppsResponse, error)
	// `Gebura`
	ListStoreAppBinaries(ctx context.Context, in *ListStoreAppBinariesRequest, opts ...grpc.CallOption) (*ListStoreAppBinariesResponse, error)
	// `Gebura`
	UpdateStoreAppBinary(ctx context.Context, in *UpdateStoreAppBinaryRequest, opts ...grpc.CallOption) (*UpdateStoreAppBinaryResponse, error)
	// `Gebura`
	ListStoreAppBinaryFiles(ctx context.Context, in *ListStoreAppBinaryFilesRequest, opts ...grpc.CallOption) (*ListStoreAppBinaryFilesResponse, error)
	// `Gebura`
	CreateStoreAppSaveFile(ctx context.Context, in *CreateStoreAppSaveFileRequest, opts ...grpc.CallOption) (*CreateStoreAppSaveFileResponse, error)
	// `Gebura`
	UpdateStoreAppSaveFile(ctx context.Context, in *UpdateStoreAppSaveFileRequest, opts ...grpc.CallOption) (*UpdateStoreAppSaveFileResponse, error)
	// `Gebura`
	UploadStoreAppSaveFile(ctx context.Context, in *UploadStoreAppSaveFileRequest, opts ...grpc.CallOption) (*UploadStoreAppSaveFileResponse, error)
	// `Gebura`
	ListStoreAppSaveFiles(ctx context.Context, in *ListStoreAppSaveFilesRequest, opts ...grpc.CallOption) (*ListStoreAppSaveFilesResponse, error)
	// `Gebura`
	DeleteStoreAppSaveFile(ctx context.Context, in *DeleteStoreAppSaveFileRequest, opts ...grpc.CallOption) (*DeleteStoreAppSaveFileResponse, error)
}

type librarianAngelaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLibrarianAngelaServiceClient(cc grpc.ClientConnInterface) LibrarianAngelaServiceClient {
	return &librarianAngelaServiceClient{cc}
}

func (c *librarianAngelaServiceClient) GetServerInformation(ctx context.Context, in *GetServerInformationRequest, opts ...grpc.CallOption) (*GetServerInformationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetServerInformationResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_GetServerInformation_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) GetServerConfig(ctx context.Context, in *GetServerConfigRequest, opts ...grpc.CallOption) (*GetServerConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetServerConfigResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_GetServerConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdateServerConfig(ctx context.Context, in *UpdateServerConfigRequest, opts ...grpc.CallOption) (*UpdateServerConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateServerConfigResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdateServerConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTokenResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_GetToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) RefreshToken(ctx context.Context, in *RefreshTokenRequest, opts ...grpc.CallOption) (*RefreshTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RefreshTokenResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_RefreshToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_CreateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListUsers_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListPorters(ctx context.Context, in *ListPortersRequest, opts ...grpc.CallOption) (*ListPortersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListPortersResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListPorters_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdatePorterStatus(ctx context.Context, in *UpdatePorterStatusRequest, opts ...grpc.CallOption) (*UpdatePorterStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdatePorterStatusResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdatePorterStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) DeletePorter(ctx context.Context, in *DeletePorterRequest, opts ...grpc.CallOption) (*DeletePorterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeletePorterResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_DeletePorter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) CreateSentinel(ctx context.Context, in *CreateSentinelRequest, opts ...grpc.CallOption) (*CreateSentinelResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSentinelResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_CreateSentinel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) GetSentinelToken(ctx context.Context, in *GetSentinelTokenRequest, opts ...grpc.CallOption) (*GetSentinelTokenResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSentinelTokenResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_GetSentinelToken_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdateSentinel(ctx context.Context, in *UpdateSentinelRequest, opts ...grpc.CallOption) (*UpdateSentinelResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSentinelResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdateSentinel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListSentinels(ctx context.Context, in *ListSentinelsRequest, opts ...grpc.CallOption) (*ListSentinelsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListSentinelsResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListSentinels_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) DeleteSentinel(ctx context.Context, in *DeleteSentinelRequest, opts ...grpc.CallOption) (*DeleteSentinelResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteSentinelResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_DeleteSentinel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListStorageCapacityUsage(ctx context.Context, in *ListStorageCapacityUsageRequest, opts ...grpc.CallOption) (*ListStorageCapacityUsageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStorageCapacityUsageResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListStorageCapacityUsage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) SimpleUploadFile(ctx context.Context, opts ...grpc.CallOption) (grpc.BidiStreamingClient[SimpleUploadFileRequest, SimpleUploadFileResponse], error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &LibrarianAngelaService_ServiceDesc.Streams[0], LibrarianAngelaService_SimpleUploadFile_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &grpc.GenericClientStream[SimpleUploadFileRequest, SimpleUploadFileResponse]{ClientStream: stream}
	return x, nil
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type LibrarianAngelaService_SimpleUploadFileClient = grpc.BidiStreamingClient[SimpleUploadFileRequest, SimpleUploadFileResponse]

func (c *librarianAngelaServiceClient) SimpleDownloadFile(ctx context.Context, in *SimpleDownloadFileRequest, opts ...grpc.CallOption) (grpc.ServerStreamingClient[SimpleDownloadFileResponse], error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	stream, err := c.cc.NewStream(ctx, &LibrarianAngelaService_ServiceDesc.Streams[1], LibrarianAngelaService_SimpleDownloadFile_FullMethodName, cOpts...)
	if err != nil {
		return nil, err
	}
	x := &grpc.GenericClientStream[SimpleDownloadFileRequest, SimpleDownloadFileResponse]{ClientStream: stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type LibrarianAngelaService_SimpleDownloadFileClient = grpc.ServerStreamingClient[SimpleDownloadFileResponse]

func (c *librarianAngelaServiceClient) PresignedUploadFile(ctx context.Context, in *PresignedUploadFileRequest, opts ...grpc.CallOption) (*PresignedUploadFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PresignedUploadFileResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_PresignedUploadFile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) PresignedUploadFileStatus(ctx context.Context, in *PresignedUploadFileStatusRequest, opts ...grpc.CallOption) (*PresignedUploadFileStatusResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PresignedUploadFileStatusResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_PresignedUploadFileStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) PresignedDownloadFile(ctx context.Context, in *PresignedDownloadFileRequest, opts ...grpc.CallOption) (*PresignedDownloadFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PresignedDownloadFileResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_PresignedDownloadFile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) SearchAppInfos(ctx context.Context, in *SearchAppInfosRequest, opts ...grpc.CallOption) (*SearchAppInfosResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchAppInfosResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_SearchAppInfos_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) CreateStoreApp(ctx context.Context, in *CreateStoreAppRequest, opts ...grpc.CallOption) (*CreateStoreAppResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateStoreAppResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_CreateStoreApp_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdateStoreApp(ctx context.Context, in *UpdateStoreAppRequest, opts ...grpc.CallOption) (*UpdateStoreAppResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateStoreAppResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdateStoreApp_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListStoreApps(ctx context.Context, in *ListStoreAppsRequest, opts ...grpc.CallOption) (*ListStoreAppsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStoreAppsResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListStoreApps_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListStoreAppBinaries(ctx context.Context, in *ListStoreAppBinariesRequest, opts ...grpc.CallOption) (*ListStoreAppBinariesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStoreAppBinariesResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListStoreAppBinaries_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdateStoreAppBinary(ctx context.Context, in *UpdateStoreAppBinaryRequest, opts ...grpc.CallOption) (*UpdateStoreAppBinaryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateStoreAppBinaryResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdateStoreAppBinary_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListStoreAppBinaryFiles(ctx context.Context, in *ListStoreAppBinaryFilesRequest, opts ...grpc.CallOption) (*ListStoreAppBinaryFilesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStoreAppBinaryFilesResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListStoreAppBinaryFiles_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) CreateStoreAppSaveFile(ctx context.Context, in *CreateStoreAppSaveFileRequest, opts ...grpc.CallOption) (*CreateStoreAppSaveFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateStoreAppSaveFileResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_CreateStoreAppSaveFile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UpdateStoreAppSaveFile(ctx context.Context, in *UpdateStoreAppSaveFileRequest, opts ...grpc.CallOption) (*UpdateStoreAppSaveFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateStoreAppSaveFileResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UpdateStoreAppSaveFile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) UploadStoreAppSaveFile(ctx context.Context, in *UploadStoreAppSaveFileRequest, opts ...grpc.CallOption) (*UploadStoreAppSaveFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UploadStoreAppSaveFileResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_UploadStoreAppSaveFile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) ListStoreAppSaveFiles(ctx context.Context, in *ListStoreAppSaveFilesRequest, opts ...grpc.CallOption) (*ListStoreAppSaveFilesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStoreAppSaveFilesResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_ListStoreAppSaveFiles_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *librarianAngelaServiceClient) DeleteStoreAppSaveFile(ctx context.Context, in *DeleteStoreAppSaveFileRequest, opts ...grpc.CallOption) (*DeleteStoreAppSaveFileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteStoreAppSaveFileResponse)
	err := c.cc.Invoke(ctx, LibrarianAngelaService_DeleteStoreAppSaveFile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LibrarianAngelaServiceServer is the server API for LibrarianAngelaService service.
// All implementations must embed UnimplementedLibrarianAngelaServiceServer
// for forward compatibility.
//
// Angela provides the admin control interface
type LibrarianAngelaServiceServer interface {
	// Allow anonymous call, use accessToken to get complete information
	GetServerInformation(context.Context, *GetServerInformationRequest) (*GetServerInformationResponse, error)
	GetServerConfig(context.Context, *GetServerConfigRequest) (*GetServerConfigResponse, error)
	UpdateServerConfig(context.Context, *UpdateServerConfigRequest) (*UpdateServerConfigResponse, error)
	// `Tiphereth` Login via password and get two token
	GetToken(context.Context, *GetTokenRequest) (*GetTokenResponse, error)
	// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
	RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error)
	// `Tiphereth`
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	// `Tiphereth`
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	// `Tiphereth`
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	// `Tiphereth`
	ListPorters(context.Context, *ListPortersRequest) (*ListPortersResponse, error)
	// `Tiphereth`
	UpdatePorterStatus(context.Context, *UpdatePorterStatusRequest) (*UpdatePorterStatusResponse, error)
	// `Tiphereth` Delete porter, only when porter is disabled
	DeletePorter(context.Context, *DeletePorterRequest) (*DeletePorterResponse, error)
	// `Tiphereth`
	CreateSentinel(context.Context, *CreateSentinelRequest) (*CreateSentinelResponse, error)
	// `Tiphereth`
	GetSentinelToken(context.Context, *GetSentinelTokenRequest) (*GetSentinelTokenResponse, error)
	// `Tiphereth`
	UpdateSentinel(context.Context, *UpdateSentinelRequest) (*UpdateSentinelResponse, error)
	// `Tiphereth`
	ListSentinels(context.Context, *ListSentinelsRequest) (*ListSentinelsResponse, error)
	// `Tiphereth`
	DeleteSentinel(context.Context, *DeleteSentinelRequest) (*DeleteSentinelResponse, error)
	// `Binah`
	ListStorageCapacityUsage(context.Context, *ListStorageCapacityUsageRequest) (*ListStorageCapacityUsageResponse, error)
	// `Binah` `upload_token`
	// Maximum 256M
	// Server must send response at least once a minute to keepalive.
	// Client should ignore in_process response and wait for success or error response.
	SimpleUploadFile(grpc.BidiStreamingServer[SimpleUploadFileRequest, SimpleUploadFileResponse]) error
	// `Binah` `download_token`
	// Server will not check the receiving state
	SimpleDownloadFile(*SimpleDownloadFileRequest, grpc.ServerStreamingServer[SimpleDownloadFileResponse]) error
	// `Binah` `upload_token`
	// Upload file through http url
	PresignedUploadFile(context.Context, *PresignedUploadFileRequest) (*PresignedUploadFileResponse, error)
	// `Binah` `upload_token`
	// Report file transfer status. Mainly used to trigger server post-process immediately
	PresignedUploadFileStatus(context.Context, *PresignedUploadFileStatusRequest) (*PresignedUploadFileStatusResponse, error)
	// `Binah` `download_token`
	// Download file through http url
	PresignedDownloadFile(context.Context, *PresignedDownloadFileRequest) (*PresignedDownloadFileResponse, error)
	// `Gebura`
	SearchAppInfos(context.Context, *SearchAppInfosRequest) (*SearchAppInfosResponse, error)
	// `Gebura`
	CreateStoreApp(context.Context, *CreateStoreAppRequest) (*CreateStoreAppResponse, error)
	// `Gebura`
	UpdateStoreApp(context.Context, *UpdateStoreAppRequest) (*UpdateStoreAppResponse, error)
	// `Gebura`
	ListStoreApps(context.Context, *ListStoreAppsRequest) (*ListStoreAppsResponse, error)
	// `Gebura`
	ListStoreAppBinaries(context.Context, *ListStoreAppBinariesRequest) (*ListStoreAppBinariesResponse, error)
	// `Gebura`
	UpdateStoreAppBinary(context.Context, *UpdateStoreAppBinaryRequest) (*UpdateStoreAppBinaryResponse, error)
	// `Gebura`
	ListStoreAppBinaryFiles(context.Context, *ListStoreAppBinaryFilesRequest) (*ListStoreAppBinaryFilesResponse, error)
	// `Gebura`
	CreateStoreAppSaveFile(context.Context, *CreateStoreAppSaveFileRequest) (*CreateStoreAppSaveFileResponse, error)
	// `Gebura`
	UpdateStoreAppSaveFile(context.Context, *UpdateStoreAppSaveFileRequest) (*UpdateStoreAppSaveFileResponse, error)
	// `Gebura`
	UploadStoreAppSaveFile(context.Context, *UploadStoreAppSaveFileRequest) (*UploadStoreAppSaveFileResponse, error)
	// `Gebura`
	ListStoreAppSaveFiles(context.Context, *ListStoreAppSaveFilesRequest) (*ListStoreAppSaveFilesResponse, error)
	// `Gebura`
	DeleteStoreAppSaveFile(context.Context, *DeleteStoreAppSaveFileRequest) (*DeleteStoreAppSaveFileResponse, error)
	mustEmbedUnimplementedLibrarianAngelaServiceServer()
}

// UnimplementedLibrarianAngelaServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedLibrarianAngelaServiceServer struct{}

func (UnimplementedLibrarianAngelaServiceServer) GetServerInformation(context.Context, *GetServerInformationRequest) (*GetServerInformationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerInformation not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) GetServerConfig(context.Context, *GetServerConfigRequest) (*GetServerConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerConfig not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdateServerConfig(context.Context, *UpdateServerConfigRequest) (*UpdateServerConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServerConfig not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) GetToken(context.Context, *GetTokenRequest) (*GetTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) RefreshToken(context.Context, *RefreshTokenRequest) (*RefreshTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefreshToken not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListPorters(context.Context, *ListPortersRequest) (*ListPortersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPorters not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdatePorterStatus(context.Context, *UpdatePorterStatusRequest) (*UpdatePorterStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePorterStatus not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) DeletePorter(context.Context, *DeletePorterRequest) (*DeletePorterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePorter not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) CreateSentinel(context.Context, *CreateSentinelRequest) (*CreateSentinelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSentinel not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) GetSentinelToken(context.Context, *GetSentinelTokenRequest) (*GetSentinelTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSentinelToken not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdateSentinel(context.Context, *UpdateSentinelRequest) (*UpdateSentinelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSentinel not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListSentinels(context.Context, *ListSentinelsRequest) (*ListSentinelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSentinels not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) DeleteSentinel(context.Context, *DeleteSentinelRequest) (*DeleteSentinelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSentinel not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListStorageCapacityUsage(context.Context, *ListStorageCapacityUsageRequest) (*ListStorageCapacityUsageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStorageCapacityUsage not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) SimpleUploadFile(grpc.BidiStreamingServer[SimpleUploadFileRequest, SimpleUploadFileResponse]) error {
	return status.Errorf(codes.Unimplemented, "method SimpleUploadFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) SimpleDownloadFile(*SimpleDownloadFileRequest, grpc.ServerStreamingServer[SimpleDownloadFileResponse]) error {
	return status.Errorf(codes.Unimplemented, "method SimpleDownloadFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) PresignedUploadFile(context.Context, *PresignedUploadFileRequest) (*PresignedUploadFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PresignedUploadFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) PresignedUploadFileStatus(context.Context, *PresignedUploadFileStatusRequest) (*PresignedUploadFileStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PresignedUploadFileStatus not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) PresignedDownloadFile(context.Context, *PresignedDownloadFileRequest) (*PresignedDownloadFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PresignedDownloadFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) SearchAppInfos(context.Context, *SearchAppInfosRequest) (*SearchAppInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAppInfos not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) CreateStoreApp(context.Context, *CreateStoreAppRequest) (*CreateStoreAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStoreApp not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdateStoreApp(context.Context, *UpdateStoreAppRequest) (*UpdateStoreAppResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStoreApp not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListStoreApps(context.Context, *ListStoreAppsRequest) (*ListStoreAppsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStoreApps not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListStoreAppBinaries(context.Context, *ListStoreAppBinariesRequest) (*ListStoreAppBinariesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStoreAppBinaries not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdateStoreAppBinary(context.Context, *UpdateStoreAppBinaryRequest) (*UpdateStoreAppBinaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStoreAppBinary not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListStoreAppBinaryFiles(context.Context, *ListStoreAppBinaryFilesRequest) (*ListStoreAppBinaryFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStoreAppBinaryFiles not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) CreateStoreAppSaveFile(context.Context, *CreateStoreAppSaveFileRequest) (*CreateStoreAppSaveFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStoreAppSaveFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UpdateStoreAppSaveFile(context.Context, *UpdateStoreAppSaveFileRequest) (*UpdateStoreAppSaveFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStoreAppSaveFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) UploadStoreAppSaveFile(context.Context, *UploadStoreAppSaveFileRequest) (*UploadStoreAppSaveFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadStoreAppSaveFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) ListStoreAppSaveFiles(context.Context, *ListStoreAppSaveFilesRequest) (*ListStoreAppSaveFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStoreAppSaveFiles not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) DeleteStoreAppSaveFile(context.Context, *DeleteStoreAppSaveFileRequest) (*DeleteStoreAppSaveFileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStoreAppSaveFile not implemented")
}
func (UnimplementedLibrarianAngelaServiceServer) mustEmbedUnimplementedLibrarianAngelaServiceServer() {
}
func (UnimplementedLibrarianAngelaServiceServer) testEmbeddedByValue() {}

// UnsafeLibrarianAngelaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LibrarianAngelaServiceServer will
// result in compilation errors.
type UnsafeLibrarianAngelaServiceServer interface {
	mustEmbedUnimplementedLibrarianAngelaServiceServer()
}

func RegisterLibrarianAngelaServiceServer(s grpc.ServiceRegistrar, srv LibrarianAngelaServiceServer) {
	// If the following call pancis, it indicates UnimplementedLibrarianAngelaServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&LibrarianAngelaService_ServiceDesc, srv)
}

func _LibrarianAngelaService_GetServerInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).GetServerInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_GetServerInformation_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).GetServerInformation(ctx, req.(*GetServerInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_GetServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).GetServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_GetServerConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).GetServerConfig(ctx, req.(*GetServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdateServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServerConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdateServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdateServerConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdateServerConfig(ctx, req.(*UpdateServerConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_GetToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).GetToken(ctx, req.(*GetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_RefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).RefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_RefreshToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).RefreshToken(ctx, req.(*RefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListUsers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListPorters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPortersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListPorters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListPorters_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListPorters(ctx, req.(*ListPortersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdatePorterStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePorterStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdatePorterStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdatePorterStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdatePorterStatus(ctx, req.(*UpdatePorterStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_DeletePorter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePorterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).DeletePorter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_DeletePorter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).DeletePorter(ctx, req.(*DeletePorterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_CreateSentinel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSentinelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).CreateSentinel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_CreateSentinel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).CreateSentinel(ctx, req.(*CreateSentinelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_GetSentinelToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSentinelTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).GetSentinelToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_GetSentinelToken_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).GetSentinelToken(ctx, req.(*GetSentinelTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdateSentinel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSentinelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdateSentinel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdateSentinel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdateSentinel(ctx, req.(*UpdateSentinelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListSentinels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSentinelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListSentinels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListSentinels_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListSentinels(ctx, req.(*ListSentinelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_DeleteSentinel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSentinelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).DeleteSentinel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_DeleteSentinel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).DeleteSentinel(ctx, req.(*DeleteSentinelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListStorageCapacityUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStorageCapacityUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListStorageCapacityUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListStorageCapacityUsage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListStorageCapacityUsage(ctx, req.(*ListStorageCapacityUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_SimpleUploadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LibrarianAngelaServiceServer).SimpleUploadFile(&grpc.GenericServerStream[SimpleUploadFileRequest, SimpleUploadFileResponse]{ServerStream: stream})
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type LibrarianAngelaService_SimpleUploadFileServer = grpc.BidiStreamingServer[SimpleUploadFileRequest, SimpleUploadFileResponse]

func _LibrarianAngelaService_SimpleDownloadFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SimpleDownloadFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LibrarianAngelaServiceServer).SimpleDownloadFile(m, &grpc.GenericServerStream[SimpleDownloadFileRequest, SimpleDownloadFileResponse]{ServerStream: stream})
}

// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.
type LibrarianAngelaService_SimpleDownloadFileServer = grpc.ServerStreamingServer[SimpleDownloadFileResponse]

func _LibrarianAngelaService_PresignedUploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresignedUploadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).PresignedUploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_PresignedUploadFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).PresignedUploadFile(ctx, req.(*PresignedUploadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_PresignedUploadFileStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresignedUploadFileStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).PresignedUploadFileStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_PresignedUploadFileStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).PresignedUploadFileStatus(ctx, req.(*PresignedUploadFileStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_PresignedDownloadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresignedDownloadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).PresignedDownloadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_PresignedDownloadFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).PresignedDownloadFile(ctx, req.(*PresignedDownloadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_SearchAppInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAppInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).SearchAppInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_SearchAppInfos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).SearchAppInfos(ctx, req.(*SearchAppInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_CreateStoreApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStoreAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).CreateStoreApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_CreateStoreApp_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).CreateStoreApp(ctx, req.(*CreateStoreAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdateStoreApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStoreAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdateStoreApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdateStoreApp_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdateStoreApp(ctx, req.(*UpdateStoreAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListStoreApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStoreAppsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListStoreApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListStoreApps_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListStoreApps(ctx, req.(*ListStoreAppsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListStoreAppBinaries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStoreAppBinariesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListStoreAppBinaries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListStoreAppBinaries_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListStoreAppBinaries(ctx, req.(*ListStoreAppBinariesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdateStoreAppBinary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStoreAppBinaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdateStoreAppBinary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdateStoreAppBinary_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdateStoreAppBinary(ctx, req.(*UpdateStoreAppBinaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListStoreAppBinaryFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStoreAppBinaryFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListStoreAppBinaryFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListStoreAppBinaryFiles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListStoreAppBinaryFiles(ctx, req.(*ListStoreAppBinaryFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_CreateStoreAppSaveFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStoreAppSaveFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).CreateStoreAppSaveFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_CreateStoreAppSaveFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).CreateStoreAppSaveFile(ctx, req.(*CreateStoreAppSaveFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UpdateStoreAppSaveFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStoreAppSaveFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UpdateStoreAppSaveFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UpdateStoreAppSaveFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UpdateStoreAppSaveFile(ctx, req.(*UpdateStoreAppSaveFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_UploadStoreAppSaveFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadStoreAppSaveFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).UploadStoreAppSaveFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_UploadStoreAppSaveFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).UploadStoreAppSaveFile(ctx, req.(*UploadStoreAppSaveFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_ListStoreAppSaveFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStoreAppSaveFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).ListStoreAppSaveFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_ListStoreAppSaveFiles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).ListStoreAppSaveFiles(ctx, req.(*ListStoreAppSaveFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibrarianAngelaService_DeleteStoreAppSaveFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStoreAppSaveFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibrarianAngelaServiceServer).DeleteStoreAppSaveFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LibrarianAngelaService_DeleteStoreAppSaveFile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibrarianAngelaServiceServer).DeleteStoreAppSaveFile(ctx, req.(*DeleteStoreAppSaveFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LibrarianAngelaService_ServiceDesc is the grpc.ServiceDesc for LibrarianAngelaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LibrarianAngelaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "librarian.sephirah.v1.angela.LibrarianAngelaService",
	HandlerType: (*LibrarianAngelaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServerInformation",
			Handler:    _LibrarianAngelaService_GetServerInformation_Handler,
		},
		{
			MethodName: "GetServerConfig",
			Handler:    _LibrarianAngelaService_GetServerConfig_Handler,
		},
		{
			MethodName: "UpdateServerConfig",
			Handler:    _LibrarianAngelaService_UpdateServerConfig_Handler,
		},
		{
			MethodName: "GetToken",
			Handler:    _LibrarianAngelaService_GetToken_Handler,
		},
		{
			MethodName: "RefreshToken",
			Handler:    _LibrarianAngelaService_RefreshToken_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _LibrarianAngelaService_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _LibrarianAngelaService_UpdateUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _LibrarianAngelaService_ListUsers_Handler,
		},
		{
			MethodName: "ListPorters",
			Handler:    _LibrarianAngelaService_ListPorters_Handler,
		},
		{
			MethodName: "UpdatePorterStatus",
			Handler:    _LibrarianAngelaService_UpdatePorterStatus_Handler,
		},
		{
			MethodName: "DeletePorter",
			Handler:    _LibrarianAngelaService_DeletePorter_Handler,
		},
		{
			MethodName: "CreateSentinel",
			Handler:    _LibrarianAngelaService_CreateSentinel_Handler,
		},
		{
			MethodName: "GetSentinelToken",
			Handler:    _LibrarianAngelaService_GetSentinelToken_Handler,
		},
		{
			MethodName: "UpdateSentinel",
			Handler:    _LibrarianAngelaService_UpdateSentinel_Handler,
		},
		{
			MethodName: "ListSentinels",
			Handler:    _LibrarianAngelaService_ListSentinels_Handler,
		},
		{
			MethodName: "DeleteSentinel",
			Handler:    _LibrarianAngelaService_DeleteSentinel_Handler,
		},
		{
			MethodName: "ListStorageCapacityUsage",
			Handler:    _LibrarianAngelaService_ListStorageCapacityUsage_Handler,
		},
		{
			MethodName: "PresignedUploadFile",
			Handler:    _LibrarianAngelaService_PresignedUploadFile_Handler,
		},
		{
			MethodName: "PresignedUploadFileStatus",
			Handler:    _LibrarianAngelaService_PresignedUploadFileStatus_Handler,
		},
		{
			MethodName: "PresignedDownloadFile",
			Handler:    _LibrarianAngelaService_PresignedDownloadFile_Handler,
		},
		{
			MethodName: "SearchAppInfos",
			Handler:    _LibrarianAngelaService_SearchAppInfos_Handler,
		},
		{
			MethodName: "CreateStoreApp",
			Handler:    _LibrarianAngelaService_CreateStoreApp_Handler,
		},
		{
			MethodName: "UpdateStoreApp",
			Handler:    _LibrarianAngelaService_UpdateStoreApp_Handler,
		},
		{
			MethodName: "ListStoreApps",
			Handler:    _LibrarianAngelaService_ListStoreApps_Handler,
		},
		{
			MethodName: "ListStoreAppBinaries",
			Handler:    _LibrarianAngelaService_ListStoreAppBinaries_Handler,
		},
		{
			MethodName: "UpdateStoreAppBinary",
			Handler:    _LibrarianAngelaService_UpdateStoreAppBinary_Handler,
		},
		{
			MethodName: "ListStoreAppBinaryFiles",
			Handler:    _LibrarianAngelaService_ListStoreAppBinaryFiles_Handler,
		},
		{
			MethodName: "CreateStoreAppSaveFile",
			Handler:    _LibrarianAngelaService_CreateStoreAppSaveFile_Handler,
		},
		{
			MethodName: "UpdateStoreAppSaveFile",
			Handler:    _LibrarianAngelaService_UpdateStoreAppSaveFile_Handler,
		},
		{
			MethodName: "UploadStoreAppSaveFile",
			Handler:    _LibrarianAngelaService_UploadStoreAppSaveFile_Handler,
		},
		{
			MethodName: "ListStoreAppSaveFiles",
			Handler:    _LibrarianAngelaService_ListStoreAppSaveFiles_Handler,
		},
		{
			MethodName: "DeleteStoreAppSaveFile",
			Handler:    _LibrarianAngelaService_DeleteStoreAppSaveFile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SimpleUploadFile",
			Handler:       _LibrarianAngelaService_SimpleUploadFile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SimpleDownloadFile",
			Handler:       _LibrarianAngelaService_SimpleDownloadFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "librarian/sephirah/v1/angela/angela_service.proto",
}
