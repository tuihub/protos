// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: librarian/sephirah/v1/sentinel/sentinel_service.proto

package v1

import (
	v1 "github.com/tuihub/protos/pkg/librarian/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{0}
}

type RefreshTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{1}
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ReportSentinelInformationRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Hostname             string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	HostnameAlternatives []string               `protobuf:"bytes,2,rep,name=hostname_alternatives,json=hostnameAlternatives,proto3" json:"hostname_alternatives,omitempty"`
	// valid when need_token is true
	GetTokenUrlPath      string             `protobuf:"bytes,3,opt,name=get_token_url_path,json=getTokenUrlPath,proto3" json:"get_token_url_path,omitempty"`
	DownloadFileBasePath string             `protobuf:"bytes,4,opt,name=download_file_base_path,json=downloadFileBasePath,proto3" json:"download_file_base_path,omitempty"`
	Libraries            []*SentinelLibrary `protobuf:"bytes,5,rep,name=libraries,proto3" json:"libraries,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReportSentinelInformationRequest) Reset() {
	*x = ReportSentinelInformationRequest{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSentinelInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSentinelInformationRequest) ProtoMessage() {}

func (x *ReportSentinelInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSentinelInformationRequest.ProtoReflect.Descriptor instead.
func (*ReportSentinelInformationRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReportSentinelInformationRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ReportSentinelInformationRequest) GetHostnameAlternatives() []string {
	if x != nil {
		return x.HostnameAlternatives
	}
	return nil
}

func (x *ReportSentinelInformationRequest) GetGetTokenUrlPath() string {
	if x != nil {
		return x.GetTokenUrlPath
	}
	return ""
}

func (x *ReportSentinelInformationRequest) GetDownloadFileBasePath() string {
	if x != nil {
		return x.DownloadFileBasePath
	}
	return ""
}

func (x *ReportSentinelInformationRequest) GetLibraries() []*SentinelLibrary {
	if x != nil {
		return x.Libraries
	}
	return nil
}

type ReportSentinelInformationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportSentinelInformationResponse) Reset() {
	*x = ReportSentinelInformationResponse{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSentinelInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSentinelInformationResponse) ProtoMessage() {}

func (x *ReportSentinelInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSentinelInformationResponse.ProtoReflect.Descriptor instead.
func (*ReportSentinelInformationResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{3}
}

type ReportAppBinariesRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	AppBinaries   []*SentinelLibraryAppBinary `protobuf:"bytes,1,rep,name=app_binaries,json=appBinaries,proto3" json:"app_binaries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAppBinariesRequest) Reset() {
	*x = ReportAppBinariesRequest{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppBinariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppBinariesRequest) ProtoMessage() {}

func (x *ReportAppBinariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppBinariesRequest.ProtoReflect.Descriptor instead.
func (*ReportAppBinariesRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{4}
}

func (x *ReportAppBinariesRequest) GetAppBinaries() []*SentinelLibraryAppBinary {
	if x != nil {
		return x.AppBinaries
	}
	return nil
}

type ReportAppBinariesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAppBinariesResponse) Reset() {
	*x = ReportAppBinariesResponse{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAppBinariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAppBinariesResponse) ProtoMessage() {}

func (x *ReportAppBinariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAppBinariesResponse.ProtoReflect.Descriptor instead.
func (*ReportAppBinariesResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{5}
}

type SentinelLibrary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DownloadBasePath string                 `protobuf:"bytes,2,opt,name=download_base_path,json=downloadBasePath,proto3" json:"download_base_path,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SentinelLibrary) Reset() {
	*x = SentinelLibrary{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentinelLibrary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentinelLibrary) ProtoMessage() {}

func (x *SentinelLibrary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentinelLibrary.ProtoReflect.Descriptor instead.
func (*SentinelLibrary) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{6}
}

func (x *SentinelLibrary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SentinelLibrary) GetDownloadBasePath() string {
	if x != nil {
		return x.DownloadBasePath
	}
	return ""
}

type SentinelLibraryAppBinary struct {
	state               protoimpl.MessageState          `protogen:"open.v1"`
	SentinelLibraryId   int64                           `protobuf:"varint,1,opt,name=sentinel_library_id,json=sentinelLibraryId,proto3" json:"sentinel_library_id,omitempty"`
	SentinelGeneratedId string                          `protobuf:"bytes,2,opt,name=sentinel_generated_id,json=sentinelGeneratedId,proto3" json:"sentinel_generated_id,omitempty"`
	SizeBytes           int64                           `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	NeedToken           bool                            `protobuf:"varint,4,opt,name=need_token,json=needToken,proto3" json:"need_token,omitempty"`
	Files               []*SentinelLibraryAppBinaryFile `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	Name                string                          `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Version             string                          `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	Developer           string                          `protobuf:"bytes,12,opt,name=developer,proto3" json:"developer,omitempty"`
	Publisher           string                          `protobuf:"bytes,13,opt,name=publisher,proto3" json:"publisher,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SentinelLibraryAppBinary) Reset() {
	*x = SentinelLibraryAppBinary{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentinelLibraryAppBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentinelLibraryAppBinary) ProtoMessage() {}

func (x *SentinelLibraryAppBinary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentinelLibraryAppBinary.ProtoReflect.Descriptor instead.
func (*SentinelLibraryAppBinary) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{7}
}

func (x *SentinelLibraryAppBinary) GetSentinelLibraryId() int64 {
	if x != nil {
		return x.SentinelLibraryId
	}
	return 0
}

func (x *SentinelLibraryAppBinary) GetSentinelGeneratedId() string {
	if x != nil {
		return x.SentinelGeneratedId
	}
	return ""
}

func (x *SentinelLibraryAppBinary) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *SentinelLibraryAppBinary) GetNeedToken() bool {
	if x != nil {
		return x.NeedToken
	}
	return false
}

func (x *SentinelLibraryAppBinary) GetFiles() []*SentinelLibraryAppBinaryFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *SentinelLibraryAppBinary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SentinelLibraryAppBinary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SentinelLibraryAppBinary) GetDeveloper() string {
	if x != nil {
		return x.Developer
	}
	return ""
}

func (x *SentinelLibraryAppBinary) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

type SentinelLibraryAppBinaryFile struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	FileMetadata *v1.FileMetadata       `protobuf:"bytes,1,opt,name=file_metadata,json=fileMetadata,proto3" json:"file_metadata,omitempty"`
	// should be path-joined to download_url when need_token is false
	ServerFilePath string `protobuf:"bytes,4,opt,name=server_file_path,json=serverFilePath,proto3" json:"server_file_path,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SentinelLibraryAppBinaryFile) Reset() {
	*x = SentinelLibraryAppBinaryFile{}
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentinelLibraryAppBinaryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentinelLibraryAppBinaryFile) ProtoMessage() {}

func (x *SentinelLibraryAppBinaryFile) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentinelLibraryAppBinaryFile.ProtoReflect.Descriptor instead.
func (*SentinelLibraryAppBinaryFile) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP(), []int{8}
}

func (x *SentinelLibraryAppBinaryFile) GetFileMetadata() *v1.FileMetadata {
	if x != nil {
		return x.FileMetadata
	}
	return nil
}

func (x *SentinelLibraryAppBinaryFile) GetServerFilePath() string {
	if x != nil {
		return x.ServerFilePath
	}
	return ""
}

var File_librarian_sephirah_v1_sentinel_sentinel_service_proto protoreflect.FileDescriptor

var file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDesc = string([]byte{
	0x0a, 0x35, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x2f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x1a, 0x1c, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x14,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa6, 0x02, 0x0a,
	0x20, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a,
	0x15, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x35, 0x0a, 0x17, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x4d, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x18, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x41, 0x70, 0x70,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4f, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0xfa, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x2e,
	0x0a, 0x13, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x15, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73,
	0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x52, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x2e, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x22, 0x89,
	0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x3f, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x32, 0xc3, 0x03, 0x0a, 0x18, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x40, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70,
	0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73,
	0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x6f, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x75, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68, 0x69,
	0x72, 0x61, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x3b,
	0x76, 0x31, 0xaa, 0x02, 0x2c, 0x54, 0x75, 0x69, 0x48, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x53, 0x65, 0x70,
	0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescOnce sync.Once
	file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescData []byte
)

func file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescGZIP() []byte {
	file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescOnce.Do(func() {
		file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDesc), len(file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDesc)))
	})
	return file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDescData
}

var file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_librarian_sephirah_v1_sentinel_sentinel_service_proto_goTypes = []any{
	(*RefreshTokenRequest)(nil),               // 0: librarian.sephirah.v1.sentinel.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),              // 1: librarian.sephirah.v1.sentinel.RefreshTokenResponse
	(*ReportSentinelInformationRequest)(nil),  // 2: librarian.sephirah.v1.sentinel.ReportSentinelInformationRequest
	(*ReportSentinelInformationResponse)(nil), // 3: librarian.sephirah.v1.sentinel.ReportSentinelInformationResponse
	(*ReportAppBinariesRequest)(nil),          // 4: librarian.sephirah.v1.sentinel.ReportAppBinariesRequest
	(*ReportAppBinariesResponse)(nil),         // 5: librarian.sephirah.v1.sentinel.ReportAppBinariesResponse
	(*SentinelLibrary)(nil),                   // 6: librarian.sephirah.v1.sentinel.SentinelLibrary
	(*SentinelLibraryAppBinary)(nil),          // 7: librarian.sephirah.v1.sentinel.SentinelLibraryAppBinary
	(*SentinelLibraryAppBinaryFile)(nil),      // 8: librarian.sephirah.v1.sentinel.SentinelLibraryAppBinaryFile
	(*v1.FileMetadata)(nil),                   // 9: librarian.v1.FileMetadata
}
var file_librarian_sephirah_v1_sentinel_sentinel_service_proto_depIdxs = []int32{
	6, // 0: librarian.sephirah.v1.sentinel.ReportSentinelInformationRequest.libraries:type_name -> librarian.sephirah.v1.sentinel.SentinelLibrary
	7, // 1: librarian.sephirah.v1.sentinel.ReportAppBinariesRequest.app_binaries:type_name -> librarian.sephirah.v1.sentinel.SentinelLibraryAppBinary
	8, // 2: librarian.sephirah.v1.sentinel.SentinelLibraryAppBinary.files:type_name -> librarian.sephirah.v1.sentinel.SentinelLibraryAppBinaryFile
	9, // 3: librarian.sephirah.v1.sentinel.SentinelLibraryAppBinaryFile.file_metadata:type_name -> librarian.v1.FileMetadata
	0, // 4: librarian.sephirah.v1.sentinel.LibrarianSentinelService.RefreshToken:input_type -> librarian.sephirah.v1.sentinel.RefreshTokenRequest
	2, // 5: librarian.sephirah.v1.sentinel.LibrarianSentinelService.ReportSentinelInformation:input_type -> librarian.sephirah.v1.sentinel.ReportSentinelInformationRequest
	4, // 6: librarian.sephirah.v1.sentinel.LibrarianSentinelService.ReportAppBinaries:input_type -> librarian.sephirah.v1.sentinel.ReportAppBinariesRequest
	1, // 7: librarian.sephirah.v1.sentinel.LibrarianSentinelService.RefreshToken:output_type -> librarian.sephirah.v1.sentinel.RefreshTokenResponse
	3, // 8: librarian.sephirah.v1.sentinel.LibrarianSentinelService.ReportSentinelInformation:output_type -> librarian.sephirah.v1.sentinel.ReportSentinelInformationResponse
	5, // 9: librarian.sephirah.v1.sentinel.LibrarianSentinelService.ReportAppBinaries:output_type -> librarian.sephirah.v1.sentinel.ReportAppBinariesResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_librarian_sephirah_v1_sentinel_sentinel_service_proto_init() }
func file_librarian_sephirah_v1_sentinel_sentinel_service_proto_init() {
	if File_librarian_sephirah_v1_sentinel_sentinel_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDesc), len(file_librarian_sephirah_v1_sentinel_sentinel_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_librarian_sephirah_v1_sentinel_sentinel_service_proto_goTypes,
		DependencyIndexes: file_librarian_sephirah_v1_sentinel_sentinel_service_proto_depIdxs,
		MessageInfos:      file_librarian_sephirah_v1_sentinel_sentinel_service_proto_msgTypes,
	}.Build()
	File_librarian_sephirah_v1_sentinel_sentinel_service_proto = out.File
	file_librarian_sephirah_v1_sentinel_sentinel_service_proto_goTypes = nil
	file_librarian_sephirah_v1_sentinel_sentinel_service_proto_depIdxs = nil
}
