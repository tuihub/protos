// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: librarian/sephirah/v1/sephirah/netzach.proto

package v1

import (
	v1 "github.com/tuihub/protos/pkg/librarian/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotifyTargetStatus int32

const (
	NotifyTargetStatus_NOTIFY_TARGET_STATUS_UNSPECIFIED NotifyTargetStatus = 0
	NotifyTargetStatus_NOTIFY_TARGET_STATUS_ACTIVE      NotifyTargetStatus = 1
	NotifyTargetStatus_NOTIFY_TARGET_STATUS_SUSPEND     NotifyTargetStatus = 2
)

// Enum value maps for NotifyTargetStatus.
var (
	NotifyTargetStatus_name = map[int32]string{
		0: "NOTIFY_TARGET_STATUS_UNSPECIFIED",
		1: "NOTIFY_TARGET_STATUS_ACTIVE",
		2: "NOTIFY_TARGET_STATUS_SUSPEND",
	}
	NotifyTargetStatus_value = map[string]int32{
		"NOTIFY_TARGET_STATUS_UNSPECIFIED": 0,
		"NOTIFY_TARGET_STATUS_ACTIVE":      1,
		"NOTIFY_TARGET_STATUS_SUSPEND":     2,
	}
)

func (x NotifyTargetStatus) Enum() *NotifyTargetStatus {
	p := new(NotifyTargetStatus)
	*p = x
	return p
}

func (x NotifyTargetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyTargetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[0].Descriptor()
}

func (NotifyTargetStatus) Type() protoreflect.EnumType {
	return &file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[0]
}

func (x NotifyTargetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyTargetStatus.Descriptor instead.
func (NotifyTargetStatus) EnumDescriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{0}
}

type NotifyFlowStatus int32

const (
	NotifyFlowStatus_NOTIFY_FLOW_STATUS_UNSPECIFIED NotifyFlowStatus = 0
	NotifyFlowStatus_NOTIFY_FLOW_STATUS_ACTIVE      NotifyFlowStatus = 1
	NotifyFlowStatus_NOTIFY_FLOW_STATUS_SUSPEND     NotifyFlowStatus = 2
)

// Enum value maps for NotifyFlowStatus.
var (
	NotifyFlowStatus_name = map[int32]string{
		0: "NOTIFY_FLOW_STATUS_UNSPECIFIED",
		1: "NOTIFY_FLOW_STATUS_ACTIVE",
		2: "NOTIFY_FLOW_STATUS_SUSPEND",
	}
	NotifyFlowStatus_value = map[string]int32{
		"NOTIFY_FLOW_STATUS_UNSPECIFIED": 0,
		"NOTIFY_FLOW_STATUS_ACTIVE":      1,
		"NOTIFY_FLOW_STATUS_SUSPEND":     2,
	}
)

func (x NotifyFlowStatus) Enum() *NotifyFlowStatus {
	p := new(NotifyFlowStatus)
	*p = x
	return p
}

func (x NotifyFlowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotifyFlowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[1].Descriptor()
}

func (NotifyFlowStatus) Type() protoreflect.EnumType {
	return &file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[1]
}

func (x NotifyFlowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotifyFlowStatus.Descriptor instead.
func (NotifyFlowStatus) EnumDescriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{1}
}

type SystemNotificationLevel int32

const (
	SystemNotificationLevel_SYSTEM_NOTIFICATION_LEVEL_UNSPECIFIED SystemNotificationLevel = 0
	SystemNotificationLevel_SYSTEM_NOTIFICATION_LEVEL_ONGOING     SystemNotificationLevel = 1
	SystemNotificationLevel_SYSTEM_NOTIFICATION_LEVEL_ERROR       SystemNotificationLevel = 2
	SystemNotificationLevel_SYSTEM_NOTIFICATION_LEVEL_WARNING     SystemNotificationLevel = 3
	SystemNotificationLevel_SYSTEM_NOTIFICATION_LEVEL_INFO        SystemNotificationLevel = 4
)

// Enum value maps for SystemNotificationLevel.
var (
	SystemNotificationLevel_name = map[int32]string{
		0: "SYSTEM_NOTIFICATION_LEVEL_UNSPECIFIED",
		1: "SYSTEM_NOTIFICATION_LEVEL_ONGOING",
		2: "SYSTEM_NOTIFICATION_LEVEL_ERROR",
		3: "SYSTEM_NOTIFICATION_LEVEL_WARNING",
		4: "SYSTEM_NOTIFICATION_LEVEL_INFO",
	}
	SystemNotificationLevel_value = map[string]int32{
		"SYSTEM_NOTIFICATION_LEVEL_UNSPECIFIED": 0,
		"SYSTEM_NOTIFICATION_LEVEL_ONGOING":     1,
		"SYSTEM_NOTIFICATION_LEVEL_ERROR":       2,
		"SYSTEM_NOTIFICATION_LEVEL_WARNING":     3,
		"SYSTEM_NOTIFICATION_LEVEL_INFO":        4,
	}
)

func (x SystemNotificationLevel) Enum() *SystemNotificationLevel {
	p := new(SystemNotificationLevel)
	*p = x
	return p
}

func (x SystemNotificationLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemNotificationLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[2].Descriptor()
}

func (SystemNotificationLevel) Type() protoreflect.EnumType {
	return &file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[2]
}

func (x SystemNotificationLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemNotificationLevel.Descriptor instead.
func (SystemNotificationLevel) EnumDescriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{2}
}

type SystemNotificationStatus int32

const (
	SystemNotificationStatus_SYSTEM_NOTIFICATION_STATUS_UNSPECIFIED SystemNotificationStatus = 0
	SystemNotificationStatus_SYSTEM_NOTIFICATION_STATUS_UNREAD      SystemNotificationStatus = 1
	SystemNotificationStatus_SYSTEM_NOTIFICATION_STATUS_READ        SystemNotificationStatus = 2
	SystemNotificationStatus_SYSTEM_NOTIFICATION_STATUS_DISMISSED   SystemNotificationStatus = 3
)

// Enum value maps for SystemNotificationStatus.
var (
	SystemNotificationStatus_name = map[int32]string{
		0: "SYSTEM_NOTIFICATION_STATUS_UNSPECIFIED",
		1: "SYSTEM_NOTIFICATION_STATUS_UNREAD",
		2: "SYSTEM_NOTIFICATION_STATUS_READ",
		3: "SYSTEM_NOTIFICATION_STATUS_DISMISSED",
	}
	SystemNotificationStatus_value = map[string]int32{
		"SYSTEM_NOTIFICATION_STATUS_UNSPECIFIED": 0,
		"SYSTEM_NOTIFICATION_STATUS_UNREAD":      1,
		"SYSTEM_NOTIFICATION_STATUS_READ":        2,
		"SYSTEM_NOTIFICATION_STATUS_DISMISSED":   3,
	}
)

func (x SystemNotificationStatus) Enum() *SystemNotificationStatus {
	p := new(SystemNotificationStatus)
	*p = x
	return p
}

func (x SystemNotificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemNotificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[3].Descriptor()
}

func (SystemNotificationStatus) Type() protoreflect.EnumType {
	return &file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes[3]
}

func (x SystemNotificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemNotificationStatus.Descriptor instead.
func (SystemNotificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{3}
}

type CreateNotifyTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *NotifyTarget          `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotifyTargetRequest) Reset() {
	*x = CreateNotifyTargetRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotifyTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyTargetRequest) ProtoMessage() {}

func (x *CreateNotifyTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyTargetRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifyTargetRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNotifyTargetRequest) GetTarget() *NotifyTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type CreateNotifyTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotifyTargetResponse) Reset() {
	*x = CreateNotifyTargetResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotifyTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyTargetResponse) ProtoMessage() {}

func (x *CreateNotifyTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyTargetResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifyTargetResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNotifyTargetResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateNotifyTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *NotifyTarget          `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotifyTargetRequest) Reset() {
	*x = UpdateNotifyTargetRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotifyTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifyTargetRequest) ProtoMessage() {}

func (x *UpdateNotifyTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifyTargetRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifyTargetRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateNotifyTargetRequest) GetTarget() *NotifyTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type UpdateNotifyTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotifyTargetResponse) Reset() {
	*x = UpdateNotifyTargetResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotifyTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifyTargetResponse) ProtoMessage() {}

func (x *UpdateNotifyTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifyTargetResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifyTargetResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{3}
}

type ListNotifyTargetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	IdFilter      []*v1.InternalID       `protobuf:"bytes,2,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	StatusFilter  []NotifyTargetStatus   `protobuf:"varint,4,rep,packed,name=status_filter,json=statusFilter,proto3,enum=librarian.sephirah.v1.sephirah.NotifyTargetStatus" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotifyTargetsRequest) Reset() {
	*x = ListNotifyTargetsRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotifyTargetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotifyTargetsRequest) ProtoMessage() {}

func (x *ListNotifyTargetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotifyTargetsRequest.ProtoReflect.Descriptor instead.
func (*ListNotifyTargetsRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{4}
}

func (x *ListNotifyTargetsRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListNotifyTargetsRequest) GetIdFilter() []*v1.InternalID {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

func (x *ListNotifyTargetsRequest) GetStatusFilter() []NotifyTargetStatus {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

type ListNotifyTargetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Targets       []*NotifyTarget        `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotifyTargetsResponse) Reset() {
	*x = ListNotifyTargetsResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotifyTargetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotifyTargetsResponse) ProtoMessage() {}

func (x *ListNotifyTargetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotifyTargetsResponse.ProtoReflect.Descriptor instead.
func (*ListNotifyTargetsResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{5}
}

func (x *ListNotifyTargetsResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListNotifyTargetsResponse) GetTargets() []*NotifyTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

type CreateNotifyFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flow          *NotifyFlow            `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotifyFlowRequest) Reset() {
	*x = CreateNotifyFlowRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotifyFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyFlowRequest) ProtoMessage() {}

func (x *CreateNotifyFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyFlowRequest.ProtoReflect.Descriptor instead.
func (*CreateNotifyFlowRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNotifyFlowRequest) GetFlow() *NotifyFlow {
	if x != nil {
		return x.Flow
	}
	return nil
}

type CreateNotifyFlowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotifyFlowResponse) Reset() {
	*x = CreateNotifyFlowResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotifyFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotifyFlowResponse) ProtoMessage() {}

func (x *CreateNotifyFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotifyFlowResponse.ProtoReflect.Descriptor instead.
func (*CreateNotifyFlowResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{7}
}

func (x *CreateNotifyFlowResponse) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateNotifyFlowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flow          *NotifyFlow            `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotifyFlowRequest) Reset() {
	*x = UpdateNotifyFlowRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotifyFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifyFlowRequest) ProtoMessage() {}

func (x *UpdateNotifyFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifyFlowRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotifyFlowRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNotifyFlowRequest) GetFlow() *NotifyFlow {
	if x != nil {
		return x.Flow
	}
	return nil
}

type UpdateNotifyFlowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotifyFlowResponse) Reset() {
	*x = UpdateNotifyFlowResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotifyFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotifyFlowResponse) ProtoMessage() {}

func (x *UpdateNotifyFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotifyFlowResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotifyFlowResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{9}
}

type ListNotifyFlowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingRequest      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	IdFilter      []*v1.InternalID       `protobuf:"bytes,2,rep,name=id_filter,json=idFilter,proto3" json:"id_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotifyFlowsRequest) Reset() {
	*x = ListNotifyFlowsRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotifyFlowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotifyFlowsRequest) ProtoMessage() {}

func (x *ListNotifyFlowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotifyFlowsRequest.ProtoReflect.Descriptor instead.
func (*ListNotifyFlowsRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{10}
}

func (x *ListNotifyFlowsRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListNotifyFlowsRequest) GetIdFilter() []*v1.InternalID {
	if x != nil {
		return x.IdFilter
	}
	return nil
}

type ListNotifyFlowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Flows         []*NotifyFlow          `protobuf:"bytes,2,rep,name=flows,proto3" json:"flows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotifyFlowsResponse) Reset() {
	*x = ListNotifyFlowsResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotifyFlowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotifyFlowsResponse) ProtoMessage() {}

func (x *ListNotifyFlowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotifyFlowsResponse.ProtoReflect.Descriptor instead.
func (*ListNotifyFlowsResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{11}
}

func (x *ListNotifyFlowsResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListNotifyFlowsResponse) GetFlows() []*NotifyFlow {
	if x != nil {
		return x.Flows
	}
	return nil
}

type NotifyTarget struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// WellKnownNotifyDestination
	Destination   *v1.FeatureRequest `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	Status        NotifyTargetStatus `protobuf:"varint,5,opt,name=status,proto3,enum=librarian.sephirah.v1.sephirah.NotifyTargetStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyTarget) Reset() {
	*x = NotifyTarget{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTarget) ProtoMessage() {}

func (x *NotifyTarget) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTarget.ProtoReflect.Descriptor instead.
func (*NotifyTarget) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{12}
}

func (x *NotifyTarget) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NotifyTarget) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyTarget) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NotifyTarget) GetDestination() *v1.FeatureRequest {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *NotifyTarget) GetStatus() NotifyTargetStatus {
	if x != nil {
		return x.Status
	}
	return NotifyTargetStatus_NOTIFY_TARGET_STATUS_UNSPECIFIED
}

type NotifyFlow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v1.InternalID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Sources       []*NotifyFlowSource    `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty"`
	Targets       []*NotifyFlowTarget    `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	Status        NotifyFlowStatus       `protobuf:"varint,6,opt,name=status,proto3,enum=librarian.sephirah.v1.sephirah.NotifyFlowStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyFlow) Reset() {
	*x = NotifyFlow{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFlow) ProtoMessage() {}

func (x *NotifyFlow) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFlow.ProtoReflect.Descriptor instead.
func (*NotifyFlow) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyFlow) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NotifyFlow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyFlow) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NotifyFlow) GetSources() []*NotifyFlowSource {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *NotifyFlow) GetTargets() []*NotifyFlowTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *NotifyFlow) GetStatus() NotifyFlowStatus {
	if x != nil {
		return x.Status
	}
	return NotifyFlowStatus_NOTIFY_FLOW_STATUS_UNSPECIFIED
}

type NotifyFlowSource struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Filter *NotifyFilter          `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// must be `FeedConfig.id` or `FeedItemCollection.id`
	SourceId      *v1.InternalID `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyFlowSource) Reset() {
	*x = NotifyFlowSource{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyFlowSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFlowSource) ProtoMessage() {}

func (x *NotifyFlowSource) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFlowSource.ProtoReflect.Descriptor instead.
func (*NotifyFlowSource) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyFlowSource) GetFilter() *NotifyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *NotifyFlowSource) GetSourceId() *v1.InternalID {
	if x != nil {
		return x.SourceId
	}
	return nil
}

type NotifyFlowTarget struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Filter *NotifyFilter          `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// must be NotifyTargetID
	TargetId      *v1.InternalID `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyFlowTarget) Reset() {
	*x = NotifyFlowTarget{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyFlowTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFlowTarget) ProtoMessage() {}

func (x *NotifyFlowTarget) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFlowTarget.ProtoReflect.Descriptor instead.
func (*NotifyFlowTarget) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyFlowTarget) GetFilter() *NotifyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *NotifyFlowTarget) GetTargetId() *v1.InternalID {
	if x != nil {
		return x.TargetId
	}
	return nil
}

type NotifyFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ExcludeKeywords []string               `protobuf:"bytes,1,rep,name=exclude_keywords,json=excludeKeywords,proto3" json:"exclude_keywords,omitempty"`
	IncludeKeywords []string               `protobuf:"bytes,2,rep,name=include_keywords,json=includeKeywords,proto3" json:"include_keywords,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NotifyFilter) Reset() {
	*x = NotifyFilter{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyFilter) ProtoMessage() {}

func (x *NotifyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyFilter.ProtoReflect.Descriptor instead.
func (*NotifyFilter) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyFilter) GetExcludeKeywords() []string {
	if x != nil {
		return x.ExcludeKeywords
	}
	return nil
}

func (x *NotifyFilter) GetIncludeKeywords() []string {
	if x != nil {
		return x.IncludeKeywords
	}
	return nil
}

type ListSystemNotificationsRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Paging        *v1.PagingRequest          `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	LevelFilter   []SystemNotificationLevel  `protobuf:"varint,3,rep,packed,name=level_filter,json=levelFilter,proto3,enum=librarian.sephirah.v1.sephirah.SystemNotificationLevel" json:"level_filter,omitempty"`
	StatusFilter  []SystemNotificationStatus `protobuf:"varint,4,rep,packed,name=status_filter,json=statusFilter,proto3,enum=librarian.sephirah.v1.sephirah.SystemNotificationStatus" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemNotificationsRequest) Reset() {
	*x = ListSystemNotificationsRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemNotificationsRequest) ProtoMessage() {}

func (x *ListSystemNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{17}
}

func (x *ListSystemNotificationsRequest) GetPaging() *v1.PagingRequest {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSystemNotificationsRequest) GetLevelFilter() []SystemNotificationLevel {
	if x != nil {
		return x.LevelFilter
	}
	return nil
}

func (x *ListSystemNotificationsRequest) GetStatusFilter() []SystemNotificationStatus {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

type ListSystemNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Notifications []*SystemNotification  `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemNotificationsResponse) Reset() {
	*x = ListSystemNotificationsResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemNotificationsResponse) ProtoMessage() {}

func (x *ListSystemNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListSystemNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{18}
}

func (x *ListSystemNotificationsResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListSystemNotificationsResponse) GetNotifications() []*SystemNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type UpdateSystemNotificationRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            *v1.InternalID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        SystemNotificationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=librarian.sephirah.v1.sephirah.SystemNotificationStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSystemNotificationRequest) Reset() {
	*x = UpdateSystemNotificationRequest{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSystemNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemNotificationRequest) ProtoMessage() {}

func (x *UpdateSystemNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemNotificationRequest.ProtoReflect.Descriptor instead.
func (*UpdateSystemNotificationRequest) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateSystemNotificationRequest) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateSystemNotificationRequest) GetStatus() SystemNotificationStatus {
	if x != nil {
		return x.Status
	}
	return SystemNotificationStatus_SYSTEM_NOTIFICATION_STATUS_UNSPECIFIED
}

type UpdateSystemNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSystemNotificationResponse) Reset() {
	*x = UpdateSystemNotificationResponse{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSystemNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemNotificationResponse) ProtoMessage() {}

func (x *UpdateSystemNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemNotificationResponse.ProtoReflect.Descriptor instead.
func (*UpdateSystemNotificationResponse) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{20}
}

type SystemNotification struct {
	state  protoimpl.MessageState   `protogen:"open.v1"`
	Id     *v1.InternalID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Level  SystemNotificationLevel  `protobuf:"varint,3,opt,name=level,proto3,enum=librarian.sephirah.v1.sephirah.SystemNotificationLevel" json:"level,omitempty"`
	Status SystemNotificationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=librarian.sephirah.v1.sephirah.SystemNotificationStatus" json:"status,omitempty"`
	Title  string                   `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// plain text
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemNotification) Reset() {
	*x = SystemNotification{}
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNotification) ProtoMessage() {}

func (x *SystemNotification) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNotification.ProtoReflect.Descriptor instead.
func (*SystemNotification) Descriptor() ([]byte, []int) {
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP(), []int{21}
}

func (x *SystemNotification) GetId() *v1.InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SystemNotification) GetLevel() SystemNotificationLevel {
	if x != nil {
		return x.Level
	}
	return SystemNotificationLevel_SYSTEM_NOTIFICATION_LEVEL_UNSPECIFIED
}

func (x *SystemNotification) GetStatus() SystemNotificationStatus {
	if x != nil {
		return x.Status
	}
	return SystemNotificationStatus_SYSTEM_NOTIFICATION_STATUS_UNSPECIFIED
}

func (x *SystemNotification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SystemNotification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SystemNotification) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SystemNotification) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

var File_librarian_sephirah_v1_sephirah_netzach_proto protoreflect.FileDescriptor

var file_librarian_sephirah_v1_sephirah_netzach_proto_rawDesc = string([]byte{
	0x0a, 0x2c, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68,
	0x2f, 0x6e, 0x65, 0x74, 0x7a, 0x61, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x22, 0x46, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65,
	0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x69,
	0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x69, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x57, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x99, 0x01, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x46, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70,
	0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x59, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70,
	0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66, 0x6c,
	0x6f, 0x77, 0x22, 0x44, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65,
	0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66,
	0x6c, 0x6f, 0x77, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x84, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c,
	0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x35, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x69, 0x64,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x0c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46,
	0x6c, 0x6f, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x4a, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x48,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69,
	0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x44, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68,
	0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x44, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x5a, 0x0a, 0x0c, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x37, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70,
	0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61,
	0x68, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x58, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x1f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x03,
	0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4d,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x50, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72,
	0x61, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x7d, 0x0a, 0x12, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x20, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x2a, 0x75, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x2a,
	0xdb, 0x01, 0x0a, 0x17, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x25, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x23, 0x0a,
	0x1f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x04, 0x2a, 0xbc, 0x01,
	0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x23, 0x0a,
	0x1f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x49, 0x53, 0x4d, 0x49, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x42, 0x5d, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x69, 0x68, 0x75,
	0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0xaa, 0x02, 0x23, 0x54, 0x75, 0x69, 0x48, 0x75, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x53, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescOnce sync.Once
	file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescData []byte
)

func file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescGZIP() []byte {
	file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescOnce.Do(func() {
		file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_librarian_sephirah_v1_sephirah_netzach_proto_rawDesc), len(file_librarian_sephirah_v1_sephirah_netzach_proto_rawDesc)))
	})
	return file_librarian_sephirah_v1_sephirah_netzach_proto_rawDescData
}

var file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_librarian_sephirah_v1_sephirah_netzach_proto_goTypes = []any{
	(NotifyTargetStatus)(0),                  // 0: librarian.sephirah.v1.sephirah.NotifyTargetStatus
	(NotifyFlowStatus)(0),                    // 1: librarian.sephirah.v1.sephirah.NotifyFlowStatus
	(SystemNotificationLevel)(0),             // 2: librarian.sephirah.v1.sephirah.SystemNotificationLevel
	(SystemNotificationStatus)(0),            // 3: librarian.sephirah.v1.sephirah.SystemNotificationStatus
	(*CreateNotifyTargetRequest)(nil),        // 4: librarian.sephirah.v1.sephirah.CreateNotifyTargetRequest
	(*CreateNotifyTargetResponse)(nil),       // 5: librarian.sephirah.v1.sephirah.CreateNotifyTargetResponse
	(*UpdateNotifyTargetRequest)(nil),        // 6: librarian.sephirah.v1.sephirah.UpdateNotifyTargetRequest
	(*UpdateNotifyTargetResponse)(nil),       // 7: librarian.sephirah.v1.sephirah.UpdateNotifyTargetResponse
	(*ListNotifyTargetsRequest)(nil),         // 8: librarian.sephirah.v1.sephirah.ListNotifyTargetsRequest
	(*ListNotifyTargetsResponse)(nil),        // 9: librarian.sephirah.v1.sephirah.ListNotifyTargetsResponse
	(*CreateNotifyFlowRequest)(nil),          // 10: librarian.sephirah.v1.sephirah.CreateNotifyFlowRequest
	(*CreateNotifyFlowResponse)(nil),         // 11: librarian.sephirah.v1.sephirah.CreateNotifyFlowResponse
	(*UpdateNotifyFlowRequest)(nil),          // 12: librarian.sephirah.v1.sephirah.UpdateNotifyFlowRequest
	(*UpdateNotifyFlowResponse)(nil),         // 13: librarian.sephirah.v1.sephirah.UpdateNotifyFlowResponse
	(*ListNotifyFlowsRequest)(nil),           // 14: librarian.sephirah.v1.sephirah.ListNotifyFlowsRequest
	(*ListNotifyFlowsResponse)(nil),          // 15: librarian.sephirah.v1.sephirah.ListNotifyFlowsResponse
	(*NotifyTarget)(nil),                     // 16: librarian.sephirah.v1.sephirah.NotifyTarget
	(*NotifyFlow)(nil),                       // 17: librarian.sephirah.v1.sephirah.NotifyFlow
	(*NotifyFlowSource)(nil),                 // 18: librarian.sephirah.v1.sephirah.NotifyFlowSource
	(*NotifyFlowTarget)(nil),                 // 19: librarian.sephirah.v1.sephirah.NotifyFlowTarget
	(*NotifyFilter)(nil),                     // 20: librarian.sephirah.v1.sephirah.NotifyFilter
	(*ListSystemNotificationsRequest)(nil),   // 21: librarian.sephirah.v1.sephirah.ListSystemNotificationsRequest
	(*ListSystemNotificationsResponse)(nil),  // 22: librarian.sephirah.v1.sephirah.ListSystemNotificationsResponse
	(*UpdateSystemNotificationRequest)(nil),  // 23: librarian.sephirah.v1.sephirah.UpdateSystemNotificationRequest
	(*UpdateSystemNotificationResponse)(nil), // 24: librarian.sephirah.v1.sephirah.UpdateSystemNotificationResponse
	(*SystemNotification)(nil),               // 25: librarian.sephirah.v1.sephirah.SystemNotification
	(*v1.InternalID)(nil),                    // 26: librarian.v1.InternalID
	(*v1.PagingRequest)(nil),                 // 27: librarian.v1.PagingRequest
	(*v1.PagingResponse)(nil),                // 28: librarian.v1.PagingResponse
	(*v1.FeatureRequest)(nil),                // 29: librarian.v1.FeatureRequest
	(*timestamppb.Timestamp)(nil),            // 30: google.protobuf.Timestamp
}
var file_librarian_sephirah_v1_sephirah_netzach_proto_depIdxs = []int32{
	16, // 0: librarian.sephirah.v1.sephirah.CreateNotifyTargetRequest.target:type_name -> librarian.sephirah.v1.sephirah.NotifyTarget
	26, // 1: librarian.sephirah.v1.sephirah.CreateNotifyTargetResponse.id:type_name -> librarian.v1.InternalID
	16, // 2: librarian.sephirah.v1.sephirah.UpdateNotifyTargetRequest.target:type_name -> librarian.sephirah.v1.sephirah.NotifyTarget
	27, // 3: librarian.sephirah.v1.sephirah.ListNotifyTargetsRequest.paging:type_name -> librarian.v1.PagingRequest
	26, // 4: librarian.sephirah.v1.sephirah.ListNotifyTargetsRequest.id_filter:type_name -> librarian.v1.InternalID
	0,  // 5: librarian.sephirah.v1.sephirah.ListNotifyTargetsRequest.status_filter:type_name -> librarian.sephirah.v1.sephirah.NotifyTargetStatus
	28, // 6: librarian.sephirah.v1.sephirah.ListNotifyTargetsResponse.paging:type_name -> librarian.v1.PagingResponse
	16, // 7: librarian.sephirah.v1.sephirah.ListNotifyTargetsResponse.targets:type_name -> librarian.sephirah.v1.sephirah.NotifyTarget
	17, // 8: librarian.sephirah.v1.sephirah.CreateNotifyFlowRequest.flow:type_name -> librarian.sephirah.v1.sephirah.NotifyFlow
	26, // 9: librarian.sephirah.v1.sephirah.CreateNotifyFlowResponse.id:type_name -> librarian.v1.InternalID
	17, // 10: librarian.sephirah.v1.sephirah.UpdateNotifyFlowRequest.flow:type_name -> librarian.sephirah.v1.sephirah.NotifyFlow
	27, // 11: librarian.sephirah.v1.sephirah.ListNotifyFlowsRequest.paging:type_name -> librarian.v1.PagingRequest
	26, // 12: librarian.sephirah.v1.sephirah.ListNotifyFlowsRequest.id_filter:type_name -> librarian.v1.InternalID
	28, // 13: librarian.sephirah.v1.sephirah.ListNotifyFlowsResponse.paging:type_name -> librarian.v1.PagingResponse
	17, // 14: librarian.sephirah.v1.sephirah.ListNotifyFlowsResponse.flows:type_name -> librarian.sephirah.v1.sephirah.NotifyFlow
	26, // 15: librarian.sephirah.v1.sephirah.NotifyTarget.id:type_name -> librarian.v1.InternalID
	29, // 16: librarian.sephirah.v1.sephirah.NotifyTarget.destination:type_name -> librarian.v1.FeatureRequest
	0,  // 17: librarian.sephirah.v1.sephirah.NotifyTarget.status:type_name -> librarian.sephirah.v1.sephirah.NotifyTargetStatus
	26, // 18: librarian.sephirah.v1.sephirah.NotifyFlow.id:type_name -> librarian.v1.InternalID
	18, // 19: librarian.sephirah.v1.sephirah.NotifyFlow.sources:type_name -> librarian.sephirah.v1.sephirah.NotifyFlowSource
	19, // 20: librarian.sephirah.v1.sephirah.NotifyFlow.targets:type_name -> librarian.sephirah.v1.sephirah.NotifyFlowTarget
	1,  // 21: librarian.sephirah.v1.sephirah.NotifyFlow.status:type_name -> librarian.sephirah.v1.sephirah.NotifyFlowStatus
	20, // 22: librarian.sephirah.v1.sephirah.NotifyFlowSource.filter:type_name -> librarian.sephirah.v1.sephirah.NotifyFilter
	26, // 23: librarian.sephirah.v1.sephirah.NotifyFlowSource.source_id:type_name -> librarian.v1.InternalID
	20, // 24: librarian.sephirah.v1.sephirah.NotifyFlowTarget.filter:type_name -> librarian.sephirah.v1.sephirah.NotifyFilter
	26, // 25: librarian.sephirah.v1.sephirah.NotifyFlowTarget.target_id:type_name -> librarian.v1.InternalID
	27, // 26: librarian.sephirah.v1.sephirah.ListSystemNotificationsRequest.paging:type_name -> librarian.v1.PagingRequest
	2,  // 27: librarian.sephirah.v1.sephirah.ListSystemNotificationsRequest.level_filter:type_name -> librarian.sephirah.v1.sephirah.SystemNotificationLevel
	3,  // 28: librarian.sephirah.v1.sephirah.ListSystemNotificationsRequest.status_filter:type_name -> librarian.sephirah.v1.sephirah.SystemNotificationStatus
	28, // 29: librarian.sephirah.v1.sephirah.ListSystemNotificationsResponse.paging:type_name -> librarian.v1.PagingResponse
	25, // 30: librarian.sephirah.v1.sephirah.ListSystemNotificationsResponse.notifications:type_name -> librarian.sephirah.v1.sephirah.SystemNotification
	26, // 31: librarian.sephirah.v1.sephirah.UpdateSystemNotificationRequest.id:type_name -> librarian.v1.InternalID
	3,  // 32: librarian.sephirah.v1.sephirah.UpdateSystemNotificationRequest.status:type_name -> librarian.sephirah.v1.sephirah.SystemNotificationStatus
	26, // 33: librarian.sephirah.v1.sephirah.SystemNotification.id:type_name -> librarian.v1.InternalID
	2,  // 34: librarian.sephirah.v1.sephirah.SystemNotification.level:type_name -> librarian.sephirah.v1.sephirah.SystemNotificationLevel
	3,  // 35: librarian.sephirah.v1.sephirah.SystemNotification.status:type_name -> librarian.sephirah.v1.sephirah.SystemNotificationStatus
	30, // 36: librarian.sephirah.v1.sephirah.SystemNotification.create_time:type_name -> google.protobuf.Timestamp
	30, // 37: librarian.sephirah.v1.sephirah.SystemNotification.update_time:type_name -> google.protobuf.Timestamp
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_librarian_sephirah_v1_sephirah_netzach_proto_init() }
func file_librarian_sephirah_v1_sephirah_netzach_proto_init() {
	if File_librarian_sephirah_v1_sephirah_netzach_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_librarian_sephirah_v1_sephirah_netzach_proto_rawDesc), len(file_librarian_sephirah_v1_sephirah_netzach_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_librarian_sephirah_v1_sephirah_netzach_proto_goTypes,
		DependencyIndexes: file_librarian_sephirah_v1_sephirah_netzach_proto_depIdxs,
		EnumInfos:         file_librarian_sephirah_v1_sephirah_netzach_proto_enumTypes,
		MessageInfos:      file_librarian_sephirah_v1_sephirah_netzach_proto_msgTypes,
	}.Build()
	File_librarian_sephirah_v1_sephirah_netzach_proto = out.File
	file_librarian_sephirah_v1_sephirah_netzach_proto_goTypes = nil
	file_librarian_sephirah_v1_sephirah_netzach_proto_depIdxs = nil
}
