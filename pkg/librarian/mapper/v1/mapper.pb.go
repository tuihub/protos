// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        (unknown)
// source: librarian/mapper/v1/mapper.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VertexType int32

const (
	VertexType_VERTEX_TYPE_UNSPECIFIED VertexType = 0
	VertexType_VERTEX_TYPE_ABSTRACT    VertexType = 1
	VertexType_VERTEX_TYPE_ENTITY      VertexType = 2
	VertexType_VERTEX_TYPE_MESSAGE     VertexType = 3
	VertexType_VERTEX_TYPE_OBJECT      VertexType = 4
	VertexType_VERTEX_TYPE_METADATA    VertexType = 5
)

// Enum value maps for VertexType.
var (
	VertexType_name = map[int32]string{
		0: "VERTEX_TYPE_UNSPECIFIED",
		1: "VERTEX_TYPE_ABSTRACT",
		2: "VERTEX_TYPE_ENTITY",
		3: "VERTEX_TYPE_MESSAGE",
		4: "VERTEX_TYPE_OBJECT",
		5: "VERTEX_TYPE_METADATA",
	}
	VertexType_value = map[string]int32{
		"VERTEX_TYPE_UNSPECIFIED": 0,
		"VERTEX_TYPE_ABSTRACT":    1,
		"VERTEX_TYPE_ENTITY":      2,
		"VERTEX_TYPE_MESSAGE":     3,
		"VERTEX_TYPE_OBJECT":      4,
		"VERTEX_TYPE_METADATA":    5,
	}
)

func (x VertexType) Enum() *VertexType {
	p := new(VertexType)
	*p = x
	return p
}

func (x VertexType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VertexType) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_mapper_v1_mapper_proto_enumTypes[0].Descriptor()
}

func (VertexType) Type() protoreflect.EnumType {
	return &file_librarian_mapper_v1_mapper_proto_enumTypes[0]
}

func (x VertexType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VertexType.Descriptor instead.
func (VertexType) EnumDescriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{0}
}

type EdgeType int32

const (
	EdgeType_EDGE_TYPE_UNSPECIFIED EdgeType = 0
	EdgeType_EDGE_TYPE_GENERAL     EdgeType = 1
	EdgeType_EDGE_TYPE_EQUAL       EdgeType = 2
	EdgeType_EDGE_TYPE_CREATE      EdgeType = 3
	EdgeType_EDGE_TYPE_ENJOY       EdgeType = 4
	EdgeType_EDGE_TYPE_MENTION     EdgeType = 5
	EdgeType_EDGE_TYPE_DERIVE      EdgeType = 6
	EdgeType_EDGE_TYPE_CONTROL     EdgeType = 7
	EdgeType_EDGE_TYPE_FOLLOW      EdgeType = 8
	EdgeType_EDGE_TYPE_DESCRIBE    EdgeType = 9
)

// Enum value maps for EdgeType.
var (
	EdgeType_name = map[int32]string{
		0: "EDGE_TYPE_UNSPECIFIED",
		1: "EDGE_TYPE_GENERAL",
		2: "EDGE_TYPE_EQUAL",
		3: "EDGE_TYPE_CREATE",
		4: "EDGE_TYPE_ENJOY",
		5: "EDGE_TYPE_MENTION",
		6: "EDGE_TYPE_DERIVE",
		7: "EDGE_TYPE_CONTROL",
		8: "EDGE_TYPE_FOLLOW",
		9: "EDGE_TYPE_DESCRIBE",
	}
	EdgeType_value = map[string]int32{
		"EDGE_TYPE_UNSPECIFIED": 0,
		"EDGE_TYPE_GENERAL":     1,
		"EDGE_TYPE_EQUAL":       2,
		"EDGE_TYPE_CREATE":      3,
		"EDGE_TYPE_ENJOY":       4,
		"EDGE_TYPE_MENTION":     5,
		"EDGE_TYPE_DERIVE":      6,
		"EDGE_TYPE_CONTROL":     7,
		"EDGE_TYPE_FOLLOW":      8,
		"EDGE_TYPE_DESCRIBE":    9,
	}
)

func (x EdgeType) Enum() *EdgeType {
	p := new(EdgeType)
	*p = x
	return p
}

func (x EdgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EdgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_mapper_v1_mapper_proto_enumTypes[1].Descriptor()
}

func (EdgeType) Type() protoreflect.EnumType {
	return &file_librarian_mapper_v1_mapper_proto_enumTypes[1]
}

func (x EdgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EdgeType.Descriptor instead.
func (EdgeType) EnumDescriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{1}
}

type EdgeDirection int32

const (
	EdgeDirection_EDGE_DIRECTION_UNSPECIFIED EdgeDirection = 0
	EdgeDirection_EDGE_DIRECTION_OUT         EdgeDirection = 1
	EdgeDirection_EDGE_DIRECTION_IN          EdgeDirection = 2
	EdgeDirection_EDGE_DIRECTION_BOTH        EdgeDirection = 3
)

// Enum value maps for EdgeDirection.
var (
	EdgeDirection_name = map[int32]string{
		0: "EDGE_DIRECTION_UNSPECIFIED",
		1: "EDGE_DIRECTION_OUT",
		2: "EDGE_DIRECTION_IN",
		3: "EDGE_DIRECTION_BOTH",
	}
	EdgeDirection_value = map[string]int32{
		"EDGE_DIRECTION_UNSPECIFIED": 0,
		"EDGE_DIRECTION_OUT":         1,
		"EDGE_DIRECTION_IN":          2,
		"EDGE_DIRECTION_BOTH":        3,
	}
)

func (x EdgeDirection) Enum() *EdgeDirection {
	p := new(EdgeDirection)
	*p = x
	return p
}

func (x EdgeDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EdgeDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_mapper_v1_mapper_proto_enumTypes[2].Descriptor()
}

func (EdgeDirection) Type() protoreflect.EnumType {
	return &file_librarian_mapper_v1_mapper_proto_enumTypes[2]
}

func (x EdgeDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EdgeDirection.Descriptor instead.
func (EdgeDirection) EnumDescriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{2}
}

type InsertVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VertexList []*Vertex `protobuf:"bytes,1,rep,name=vertex_list,json=vertexList,proto3" json:"vertex_list,omitempty"`
}

func (x *InsertVertexRequest) Reset() {
	*x = InsertVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVertexRequest) ProtoMessage() {}

func (x *InsertVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVertexRequest.ProtoReflect.Descriptor instead.
func (*InsertVertexRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{0}
}

func (x *InsertVertexRequest) GetVertexList() []*Vertex {
	if x != nil {
		return x.VertexList
	}
	return nil
}

type InsertVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InsertVertexResponse) Reset() {
	*x = InsertVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVertexResponse) ProtoMessage() {}

func (x *InsertVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVertexResponse.ProtoReflect.Descriptor instead.
func (*InsertVertexResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{1}
}

type DeleteVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VidList []int64 `protobuf:"varint,1,rep,packed,name=vid_list,json=vidList,proto3" json:"vid_list,omitempty"`
}

func (x *DeleteVertexRequest) Reset() {
	*x = DeleteVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVertexRequest) ProtoMessage() {}

func (x *DeleteVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVertexRequest.ProtoReflect.Descriptor instead.
func (*DeleteVertexRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVertexRequest) GetVidList() []int64 {
	if x != nil {
		return x.VidList
	}
	return nil
}

type DeleteVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteVertexResponse) Reset() {
	*x = DeleteVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVertexResponse) ProtoMessage() {}

func (x *DeleteVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVertexResponse.ProtoReflect.Descriptor instead.
func (*DeleteVertexResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{3}
}

type UpdateVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VertexList []*Vertex `protobuf:"bytes,1,rep,name=vertex_list,json=vertexList,proto3" json:"vertex_list,omitempty"`
}

func (x *UpdateVertexRequest) Reset() {
	*x = UpdateVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVertexRequest) ProtoMessage() {}

func (x *UpdateVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVertexRequest.ProtoReflect.Descriptor instead.
func (*UpdateVertexRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateVertexRequest) GetVertexList() []*Vertex {
	if x != nil {
		return x.VertexList
	}
	return nil
}

type UpdateVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateVertexResponse) Reset() {
	*x = UpdateVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVertexResponse) ProtoMessage() {}

func (x *UpdateVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVertexResponse.ProtoReflect.Descriptor instead.
func (*UpdateVertexResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{5}
}

type InsertEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeList []*Edge `protobuf:"bytes,1,rep,name=edge_list,json=edgeList,proto3" json:"edge_list,omitempty"`
}

func (x *InsertEdgeRequest) Reset() {
	*x = InsertEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertEdgeRequest) ProtoMessage() {}

func (x *InsertEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertEdgeRequest.ProtoReflect.Descriptor instead.
func (*InsertEdgeRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{6}
}

func (x *InsertEdgeRequest) GetEdgeList() []*Edge {
	if x != nil {
		return x.EdgeList
	}
	return nil
}

type InsertEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InsertEdgeResponse) Reset() {
	*x = InsertEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertEdgeResponse) ProtoMessage() {}

func (x *InsertEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertEdgeResponse.ProtoReflect.Descriptor instead.
func (*InsertEdgeResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{7}
}

type DeleteEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeList []*Edge `protobuf:"bytes,2,rep,name=edge_list,json=edgeList,proto3" json:"edge_list,omitempty"`
}

func (x *DeleteEdgeRequest) Reset() {
	*x = DeleteEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEdgeRequest) ProtoMessage() {}

func (x *DeleteEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEdgeRequest.ProtoReflect.Descriptor instead.
func (*DeleteEdgeRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteEdgeRequest) GetEdgeList() []*Edge {
	if x != nil {
		return x.EdgeList
	}
	return nil
}

type DeleteEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEdgeResponse) Reset() {
	*x = DeleteEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEdgeResponse) ProtoMessage() {}

func (x *DeleteEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEdgeResponse.ProtoReflect.Descriptor instead.
func (*DeleteEdgeResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{9}
}

type UpdateEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeList []*Edge `protobuf:"bytes,3,rep,name=edge_list,json=edgeList,proto3" json:"edge_list,omitempty"`
}

func (x *UpdateEdgeRequest) Reset() {
	*x = UpdateEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEdgeRequest) ProtoMessage() {}

func (x *UpdateEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEdgeRequest.ProtoReflect.Descriptor instead.
func (*UpdateEdgeRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateEdgeRequest) GetEdgeList() []*Edge {
	if x != nil {
		return x.EdgeList
	}
	return nil
}

type UpdateEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEdgeResponse) Reset() {
	*x = UpdateEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEdgeResponse) ProtoMessage() {}

func (x *UpdateEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEdgeResponse.ProtoReflect.Descriptor instead.
func (*UpdateEdgeResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{11}
}

type GoFromVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcVid         int64         `protobuf:"varint,1,opt,name=src_vid,json=srcVid,proto3" json:"src_vid,omitempty"`
	EdgeTypeFilter []EdgeType    `protobuf:"varint,2,rep,packed,name=edge_type_filter,json=edgeTypeFilter,proto3,enum=librarian.mapper.v1.EdgeType" json:"edge_type_filter,omitempty"`
	EdgeDirection  EdgeDirection `protobuf:"varint,3,opt,name=edge_direction,json=edgeDirection,proto3,enum=librarian.mapper.v1.EdgeDirection" json:"edge_direction,omitempty"`
	MinStep        int64         `protobuf:"varint,4,opt,name=min_step,json=minStep,proto3" json:"min_step,omitempty"`
	MaxStep        int64         `protobuf:"varint,5,opt,name=max_step,json=maxStep,proto3" json:"max_step,omitempty"`
	Limit          int64         `protobuf:"varint,14,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int64         `protobuf:"varint,15,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GoFromVertexRequest) Reset() {
	*x = GoFromVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoFromVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoFromVertexRequest) ProtoMessage() {}

func (x *GoFromVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoFromVertexRequest.ProtoReflect.Descriptor instead.
func (*GoFromVertexRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{12}
}

func (x *GoFromVertexRequest) GetSrcVid() int64 {
	if x != nil {
		return x.SrcVid
	}
	return 0
}

func (x *GoFromVertexRequest) GetEdgeTypeFilter() []EdgeType {
	if x != nil {
		return x.EdgeTypeFilter
	}
	return nil
}

func (x *GoFromVertexRequest) GetEdgeDirection() EdgeDirection {
	if x != nil {
		return x.EdgeDirection
	}
	return EdgeDirection_EDGE_DIRECTION_UNSPECIFIED
}

func (x *GoFromVertexRequest) GetMinStep() int64 {
	if x != nil {
		return x.MinStep
	}
	return 0
}

func (x *GoFromVertexRequest) GetMaxStep() int64 {
	if x != nil {
		return x.MaxStep
	}
	return 0
}

func (x *GoFromVertexRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GoFromVertexRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GoFromVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VertexList []*Vertex `protobuf:"bytes,1,rep,name=vertex_list,json=vertexList,proto3" json:"vertex_list,omitempty"`
}

func (x *GoFromVertexResponse) Reset() {
	*x = GoFromVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoFromVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoFromVertexResponse) ProtoMessage() {}

func (x *GoFromVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoFromVertexResponse.ProtoReflect.Descriptor instead.
func (*GoFromVertexResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{13}
}

func (x *GoFromVertexResponse) GetVertexList() []*Vertex {
	if x != nil {
		return x.VertexList
	}
	return nil
}

type FetchEqualVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcVid int64 `protobuf:"varint,1,opt,name=src_vid,json=srcVid,proto3" json:"src_vid,omitempty"`
}

func (x *FetchEqualVertexRequest) Reset() {
	*x = FetchEqualVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchEqualVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchEqualVertexRequest) ProtoMessage() {}

func (x *FetchEqualVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchEqualVertexRequest.ProtoReflect.Descriptor instead.
func (*FetchEqualVertexRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{14}
}

func (x *FetchEqualVertexRequest) GetSrcVid() int64 {
	if x != nil {
		return x.SrcVid
	}
	return 0
}

type FetchEqualVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VertexList []*Vertex `protobuf:"bytes,1,rep,name=vertex_list,json=vertexList,proto3" json:"vertex_list,omitempty"`
}

func (x *FetchEqualVertexResponse) Reset() {
	*x = FetchEqualVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchEqualVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchEqualVertexResponse) ProtoMessage() {}

func (x *FetchEqualVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchEqualVertexResponse.ProtoReflect.Descriptor instead.
func (*FetchEqualVertexResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{15}
}

func (x *FetchEqualVertexResponse) GetVertexList() []*Vertex {
	if x != nil {
		return x.VertexList
	}
	return nil
}

type FetchEqualVertexNeighborRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcVid         int64         `protobuf:"varint,1,opt,name=src_vid,json=srcVid,proto3" json:"src_vid,omitempty"`
	EdgeTypeFilter []EdgeType    `protobuf:"varint,2,rep,packed,name=edge_type_filter,json=edgeTypeFilter,proto3,enum=librarian.mapper.v1.EdgeType" json:"edge_type_filter,omitempty"`
	EdgeDirection  EdgeDirection `protobuf:"varint,3,opt,name=edge_direction,json=edgeDirection,proto3,enum=librarian.mapper.v1.EdgeDirection" json:"edge_direction,omitempty"`
}

func (x *FetchEqualVertexNeighborRequest) Reset() {
	*x = FetchEqualVertexNeighborRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchEqualVertexNeighborRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchEqualVertexNeighborRequest) ProtoMessage() {}

func (x *FetchEqualVertexNeighborRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchEqualVertexNeighborRequest.ProtoReflect.Descriptor instead.
func (*FetchEqualVertexNeighborRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{16}
}

func (x *FetchEqualVertexNeighborRequest) GetSrcVid() int64 {
	if x != nil {
		return x.SrcVid
	}
	return 0
}

func (x *FetchEqualVertexNeighborRequest) GetEdgeTypeFilter() []EdgeType {
	if x != nil {
		return x.EdgeTypeFilter
	}
	return nil
}

func (x *FetchEqualVertexNeighborRequest) GetEdgeDirection() EdgeDirection {
	if x != nil {
		return x.EdgeDirection
	}
	return EdgeDirection_EDGE_DIRECTION_UNSPECIFIED
}

type FetchEqualVertexNeighborResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeList []*Edge `protobuf:"bytes,1,rep,name=edge_list,json=edgeList,proto3" json:"edge_list,omitempty"`
}

func (x *FetchEqualVertexNeighborResponse) Reset() {
	*x = FetchEqualVertexNeighborResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchEqualVertexNeighborResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchEqualVertexNeighborResponse) ProtoMessage() {}

func (x *FetchEqualVertexNeighborResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchEqualVertexNeighborResponse.ProtoReflect.Descriptor instead.
func (*FetchEqualVertexNeighborResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{17}
}

func (x *FetchEqualVertexNeighborResponse) GetEdgeList() []*Edge {
	if x != nil {
		return x.EdgeList
	}
	return nil
}

type FindPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcVid         []int64       `protobuf:"varint,1,rep,packed,name=src_vid,json=srcVid,proto3" json:"src_vid,omitempty"`
	DstVid         []int64       `protobuf:"varint,2,rep,packed,name=dst_vid,json=dstVid,proto3" json:"dst_vid,omitempty"`
	EdgeTypeFilter []EdgeType    `protobuf:"varint,3,rep,packed,name=edge_type_filter,json=edgeTypeFilter,proto3,enum=librarian.mapper.v1.EdgeType" json:"edge_type_filter,omitempty"`
	EdgeDirection  EdgeDirection `protobuf:"varint,4,opt,name=edge_direction,json=edgeDirection,proto3,enum=librarian.mapper.v1.EdgeDirection" json:"edge_direction,omitempty"`
	MaxStep        int64         `protobuf:"varint,5,opt,name=max_step,json=maxStep,proto3" json:"max_step,omitempty"`
}

func (x *FindPathRequest) Reset() {
	*x = FindPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathRequest) ProtoMessage() {}

func (x *FindPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathRequest.ProtoReflect.Descriptor instead.
func (*FindPathRequest) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{18}
}

func (x *FindPathRequest) GetSrcVid() []int64 {
	if x != nil {
		return x.SrcVid
	}
	return nil
}

func (x *FindPathRequest) GetDstVid() []int64 {
	if x != nil {
		return x.DstVid
	}
	return nil
}

func (x *FindPathRequest) GetEdgeTypeFilter() []EdgeType {
	if x != nil {
		return x.EdgeTypeFilter
	}
	return nil
}

func (x *FindPathRequest) GetEdgeDirection() EdgeDirection {
	if x != nil {
		return x.EdgeDirection
	}
	return EdgeDirection_EDGE_DIRECTION_UNSPECIFIED
}

func (x *FindPathRequest) GetMaxStep() int64 {
	if x != nil {
		return x.MaxStep
	}
	return 0
}

type FindPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathList []*FindPathResponse_SinglePath `protobuf:"bytes,1,rep,name=path_list,json=pathList,proto3" json:"path_list,omitempty"`
}

func (x *FindPathResponse) Reset() {
	*x = FindPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathResponse) ProtoMessage() {}

func (x *FindPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathResponse.ProtoReflect.Descriptor instead.
func (*FindPathResponse) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{19}
}

func (x *FindPathResponse) GetPathList() []*FindPathResponse_SinglePath {
	if x != nil {
		return x.PathList
	}
	return nil
}

type Vertex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid  int64       `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Type VertexType  `protobuf:"varint,2,opt,name=type,proto3,enum=librarian.mapper.v1.VertexType" json:"type,omitempty"`
	Prop *VertexProp `protobuf:"bytes,3,opt,name=prop,proto3,oneof" json:"prop,omitempty"`
}

func (x *Vertex) Reset() {
	*x = Vertex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vertex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vertex) ProtoMessage() {}

func (x *Vertex) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vertex.ProtoReflect.Descriptor instead.
func (*Vertex) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{20}
}

func (x *Vertex) GetVid() int64 {
	if x != nil {
		return x.Vid
	}
	return 0
}

func (x *Vertex) GetType() VertexType {
	if x != nil {
		return x.Type
	}
	return VertexType_VERTEX_TYPE_UNSPECIFIED
}

func (x *Vertex) GetProp() *VertexProp {
	if x != nil {
		return x.Prop
	}
	return nil
}

type VertexProp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *VertexCommonProp `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Additional map[string]int64  `protobuf:"bytes,2,rep,name=additional,proto3" json:"additional,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *VertexProp) Reset() {
	*x = VertexProp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VertexProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VertexProp) ProtoMessage() {}

func (x *VertexProp) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VertexProp.ProtoReflect.Descriptor instead.
func (*VertexProp) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{21}
}

func (x *VertexProp) GetCommon() *VertexCommonProp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *VertexProp) GetAdditional() map[string]int64 {
	if x != nil {
		return x.Additional
	}
	return nil
}

type VertexCommonProp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OccurTime  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=occur_time,json=occurTime,proto3,oneof" json:"occur_time,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`
}

func (x *VertexCommonProp) Reset() {
	*x = VertexCommonProp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VertexCommonProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VertexCommonProp) ProtoMessage() {}

func (x *VertexCommonProp) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VertexCommonProp.ProtoReflect.Descriptor instead.
func (*VertexCommonProp) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{22}
}

func (x *VertexCommonProp) GetOccurTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurTime
	}
	return nil
}

func (x *VertexCommonProp) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *VertexCommonProp) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcVid int64     `protobuf:"varint,1,opt,name=src_vid,json=srcVid,proto3" json:"src_vid,omitempty"`
	DstVid int64     `protobuf:"varint,2,opt,name=dst_vid,json=dstVid,proto3" json:"dst_vid,omitempty"`
	Type   EdgeType  `protobuf:"varint,3,opt,name=type,proto3,enum=librarian.mapper.v1.EdgeType" json:"type,omitempty"`
	Prop   *EdgeProp `protobuf:"bytes,4,opt,name=prop,proto3,oneof" json:"prop,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{23}
}

func (x *Edge) GetSrcVid() int64 {
	if x != nil {
		return x.SrcVid
	}
	return 0
}

func (x *Edge) GetDstVid() int64 {
	if x != nil {
		return x.DstVid
	}
	return 0
}

func (x *Edge) GetType() EdgeType {
	if x != nil {
		return x.Type
	}
	return EdgeType_EDGE_TYPE_UNSPECIFIED
}

func (x *Edge) GetProp() *EdgeProp {
	if x != nil {
		return x.Prop
	}
	return nil
}

type EdgeProp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *EdgeCommonProp  `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Additional map[string]int64 `protobuf:"bytes,2,rep,name=additional,proto3" json:"additional,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *EdgeProp) Reset() {
	*x = EdgeProp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeProp) ProtoMessage() {}

func (x *EdgeProp) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeProp.ProtoReflect.Descriptor instead.
func (*EdgeProp) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{24}
}

func (x *EdgeProp) GetCommon() *EdgeCommonProp {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *EdgeProp) GetAdditional() map[string]int64 {
	if x != nil {
		return x.Additional
	}
	return nil
}

type EdgeCommonProp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OccurTime  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=occur_time,json=occurTime,proto3,oneof" json:"occur_time,omitempty"`
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"`
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time,omitempty"`
	Rank       *int64                 `protobuf:"varint,4,opt,name=rank,proto3,oneof" json:"rank,omitempty"`
}

func (x *EdgeCommonProp) Reset() {
	*x = EdgeCommonProp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeCommonProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeCommonProp) ProtoMessage() {}

func (x *EdgeCommonProp) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeCommonProp.ProtoReflect.Descriptor instead.
func (*EdgeCommonProp) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{25}
}

func (x *EdgeCommonProp) GetOccurTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurTime
	}
	return nil
}

func (x *EdgeCommonProp) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *EdgeCommonProp) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *EdgeCommonProp) GetRank() int64 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type FindPathResponse_SinglePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path from edge_list[0].src_vid to edge_list[-1].dst_vid
	// If reverse edge is allowed, begin vid may not be src_vid but dst_vid, the end vid is the same
	EdgeList []*Edge `protobuf:"bytes,3,rep,name=edge_list,json=edgeList,proto3" json:"edge_list,omitempty"`
}

func (x *FindPathResponse_SinglePath) Reset() {
	*x = FindPathResponse_SinglePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPathResponse_SinglePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPathResponse_SinglePath) ProtoMessage() {}

func (x *FindPathResponse_SinglePath) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_mapper_v1_mapper_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPathResponse_SinglePath.ProtoReflect.Descriptor instead.
func (*FindPathResponse_SinglePath) Descriptor() ([]byte, []int) {
	return file_librarian_mapper_v1_mapper_proto_rawDescGZIP(), []int{19, 0}
}

func (x *FindPathResponse_SinglePath) GetEdgeList() []*Edge {
	if x != nil {
		return x.EdgeList
	}
	return nil
}

var File_librarian_mapper_v1_mapper_proto protoreflect.FileDescriptor

var file_librarian_mapper_v1_mapper_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3c, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a,
	0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x53, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x11,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x08, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64,
	0x67, 0x65, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x13, 0x47, 0x6f, 0x46, 0x72, 0x6f, 0x6d,
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x72, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x72, 0x63, 0x56, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0e, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x49, 0x0a, 0x0e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64,
	0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x64, 0x67,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69,
	0x6e, 0x53, 0x74, 0x65, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x54,
	0x0a, 0x14, 0x47, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x17, 0x46, 0x65, 0x74, 0x63, 0x68, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x72, 0x63, 0x56, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x1f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x76, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x72, 0x63, 0x56, 0x69, 0x64, 0x12,
	0x47, 0x0a, 0x10, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0e, 0x65, 0x64, 0x67, 0x65,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x20, 0x46, 0x65, 0x74, 0x63, 0x68, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xf2, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x72, 0x63, 0x56, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x73, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x73, 0x74, 0x56, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x49,
	0x0a, 0x0e, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x65, 0x64, 0x67, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x53, 0x74, 0x65, 0x70, 0x22, 0xa7, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x09, 0x70, 0x61, 0x74,
	0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x08,
	0x70, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x44, 0x0a, 0x0a, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x64, 0x67, 0x65, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x92,
	0x01, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x48,
	0x00, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x50, 0x72,
	0x6f, 0x70, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x4f, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x85, 0x02, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x3e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x04, 0x45, 0x64,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x72, 0x63, 0x56, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x73, 0x74, 0x5f, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x73,
	0x74, 0x56, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x22, 0xd5, 0x01, 0x0a, 0x08, 0x45, 0x64, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa5, 0x02, 0x0a, 0x0e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x70, 0x12, 0x3e, 0x0a, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x2a, 0xa6, 0x01, 0x0a, 0x0a, 0x56, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x45, 0x52, 0x54, 0x45,
	0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x45, 0x52, 0x54, 0x45, 0x58, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x42, 0x53, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x56, 0x45, 0x52, 0x54, 0x45, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x45, 0x52, 0x54, 0x45, 0x58,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x56, 0x45, 0x52, 0x54, 0x45, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x45, 0x52, 0x54, 0x45,
	0x58, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10,
	0x05, 0x2a, 0xee, 0x01, 0x0a, 0x08, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x44, 0x47,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x51,
	0x55, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x45,
	0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x4a, 0x4f, 0x59, 0x10, 0x04,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45,
	0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x44, 0x47, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x52, 0x49, 0x56, 0x45, 0x10, 0x06, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x4f, 0x4c, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x44,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45,
	0x10, 0x09, 0x2a, 0x77, 0x0a, 0x0d, 0x45, 0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45,
	0x44, 0x47, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x44, 0x47, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x03, 0x32, 0x9d, 0x08, 0x0a, 0x16,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x28, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x28, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x12, 0x28, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x45,
	0x64, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x12, 0x26, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x47, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x12, 0x28, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x56,
	0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x2c, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x18, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4e, 0x65, 0x69,
	0x67, 0x68, 0x62, 0x6f, 0x72, 0x12, 0x34, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x59, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x69, 0x68, 0x75, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0xaa, 0x02, 0x21, 0x54, 0x75, 0x69, 0x48, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x4d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_librarian_mapper_v1_mapper_proto_rawDescOnce sync.Once
	file_librarian_mapper_v1_mapper_proto_rawDescData = file_librarian_mapper_v1_mapper_proto_rawDesc
)

func file_librarian_mapper_v1_mapper_proto_rawDescGZIP() []byte {
	file_librarian_mapper_v1_mapper_proto_rawDescOnce.Do(func() {
		file_librarian_mapper_v1_mapper_proto_rawDescData = protoimpl.X.CompressGZIP(file_librarian_mapper_v1_mapper_proto_rawDescData)
	})
	return file_librarian_mapper_v1_mapper_proto_rawDescData
}

var file_librarian_mapper_v1_mapper_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_librarian_mapper_v1_mapper_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_librarian_mapper_v1_mapper_proto_goTypes = []interface{}{
	(VertexType)(0),                          // 0: librarian.mapper.v1.VertexType
	(EdgeType)(0),                            // 1: librarian.mapper.v1.EdgeType
	(EdgeDirection)(0),                       // 2: librarian.mapper.v1.EdgeDirection
	(*InsertVertexRequest)(nil),              // 3: librarian.mapper.v1.InsertVertexRequest
	(*InsertVertexResponse)(nil),             // 4: librarian.mapper.v1.InsertVertexResponse
	(*DeleteVertexRequest)(nil),              // 5: librarian.mapper.v1.DeleteVertexRequest
	(*DeleteVertexResponse)(nil),             // 6: librarian.mapper.v1.DeleteVertexResponse
	(*UpdateVertexRequest)(nil),              // 7: librarian.mapper.v1.UpdateVertexRequest
	(*UpdateVertexResponse)(nil),             // 8: librarian.mapper.v1.UpdateVertexResponse
	(*InsertEdgeRequest)(nil),                // 9: librarian.mapper.v1.InsertEdgeRequest
	(*InsertEdgeResponse)(nil),               // 10: librarian.mapper.v1.InsertEdgeResponse
	(*DeleteEdgeRequest)(nil),                // 11: librarian.mapper.v1.DeleteEdgeRequest
	(*DeleteEdgeResponse)(nil),               // 12: librarian.mapper.v1.DeleteEdgeResponse
	(*UpdateEdgeRequest)(nil),                // 13: librarian.mapper.v1.UpdateEdgeRequest
	(*UpdateEdgeResponse)(nil),               // 14: librarian.mapper.v1.UpdateEdgeResponse
	(*GoFromVertexRequest)(nil),              // 15: librarian.mapper.v1.GoFromVertexRequest
	(*GoFromVertexResponse)(nil),             // 16: librarian.mapper.v1.GoFromVertexResponse
	(*FetchEqualVertexRequest)(nil),          // 17: librarian.mapper.v1.FetchEqualVertexRequest
	(*FetchEqualVertexResponse)(nil),         // 18: librarian.mapper.v1.FetchEqualVertexResponse
	(*FetchEqualVertexNeighborRequest)(nil),  // 19: librarian.mapper.v1.FetchEqualVertexNeighborRequest
	(*FetchEqualVertexNeighborResponse)(nil), // 20: librarian.mapper.v1.FetchEqualVertexNeighborResponse
	(*FindPathRequest)(nil),                  // 21: librarian.mapper.v1.FindPathRequest
	(*FindPathResponse)(nil),                 // 22: librarian.mapper.v1.FindPathResponse
	(*Vertex)(nil),                           // 23: librarian.mapper.v1.Vertex
	(*VertexProp)(nil),                       // 24: librarian.mapper.v1.VertexProp
	(*VertexCommonProp)(nil),                 // 25: librarian.mapper.v1.VertexCommonProp
	(*Edge)(nil),                             // 26: librarian.mapper.v1.Edge
	(*EdgeProp)(nil),                         // 27: librarian.mapper.v1.EdgeProp
	(*EdgeCommonProp)(nil),                   // 28: librarian.mapper.v1.EdgeCommonProp
	(*FindPathResponse_SinglePath)(nil),      // 29: librarian.mapper.v1.FindPathResponse.SinglePath
	nil,                                      // 30: librarian.mapper.v1.VertexProp.AdditionalEntry
	nil,                                      // 31: librarian.mapper.v1.EdgeProp.AdditionalEntry
	(*timestamppb.Timestamp)(nil),            // 32: google.protobuf.Timestamp
}
var file_librarian_mapper_v1_mapper_proto_depIdxs = []int32{
	23, // 0: librarian.mapper.v1.InsertVertexRequest.vertex_list:type_name -> librarian.mapper.v1.Vertex
	23, // 1: librarian.mapper.v1.UpdateVertexRequest.vertex_list:type_name -> librarian.mapper.v1.Vertex
	26, // 2: librarian.mapper.v1.InsertEdgeRequest.edge_list:type_name -> librarian.mapper.v1.Edge
	26, // 3: librarian.mapper.v1.DeleteEdgeRequest.edge_list:type_name -> librarian.mapper.v1.Edge
	26, // 4: librarian.mapper.v1.UpdateEdgeRequest.edge_list:type_name -> librarian.mapper.v1.Edge
	1,  // 5: librarian.mapper.v1.GoFromVertexRequest.edge_type_filter:type_name -> librarian.mapper.v1.EdgeType
	2,  // 6: librarian.mapper.v1.GoFromVertexRequest.edge_direction:type_name -> librarian.mapper.v1.EdgeDirection
	23, // 7: librarian.mapper.v1.GoFromVertexResponse.vertex_list:type_name -> librarian.mapper.v1.Vertex
	23, // 8: librarian.mapper.v1.FetchEqualVertexResponse.vertex_list:type_name -> librarian.mapper.v1.Vertex
	1,  // 9: librarian.mapper.v1.FetchEqualVertexNeighborRequest.edge_type_filter:type_name -> librarian.mapper.v1.EdgeType
	2,  // 10: librarian.mapper.v1.FetchEqualVertexNeighborRequest.edge_direction:type_name -> librarian.mapper.v1.EdgeDirection
	26, // 11: librarian.mapper.v1.FetchEqualVertexNeighborResponse.edge_list:type_name -> librarian.mapper.v1.Edge
	1,  // 12: librarian.mapper.v1.FindPathRequest.edge_type_filter:type_name -> librarian.mapper.v1.EdgeType
	2,  // 13: librarian.mapper.v1.FindPathRequest.edge_direction:type_name -> librarian.mapper.v1.EdgeDirection
	29, // 14: librarian.mapper.v1.FindPathResponse.path_list:type_name -> librarian.mapper.v1.FindPathResponse.SinglePath
	0,  // 15: librarian.mapper.v1.Vertex.type:type_name -> librarian.mapper.v1.VertexType
	24, // 16: librarian.mapper.v1.Vertex.prop:type_name -> librarian.mapper.v1.VertexProp
	25, // 17: librarian.mapper.v1.VertexProp.common:type_name -> librarian.mapper.v1.VertexCommonProp
	30, // 18: librarian.mapper.v1.VertexProp.additional:type_name -> librarian.mapper.v1.VertexProp.AdditionalEntry
	32, // 19: librarian.mapper.v1.VertexCommonProp.occur_time:type_name -> google.protobuf.Timestamp
	32, // 20: librarian.mapper.v1.VertexCommonProp.create_time:type_name -> google.protobuf.Timestamp
	32, // 21: librarian.mapper.v1.VertexCommonProp.update_time:type_name -> google.protobuf.Timestamp
	1,  // 22: librarian.mapper.v1.Edge.type:type_name -> librarian.mapper.v1.EdgeType
	27, // 23: librarian.mapper.v1.Edge.prop:type_name -> librarian.mapper.v1.EdgeProp
	28, // 24: librarian.mapper.v1.EdgeProp.common:type_name -> librarian.mapper.v1.EdgeCommonProp
	31, // 25: librarian.mapper.v1.EdgeProp.additional:type_name -> librarian.mapper.v1.EdgeProp.AdditionalEntry
	32, // 26: librarian.mapper.v1.EdgeCommonProp.occur_time:type_name -> google.protobuf.Timestamp
	32, // 27: librarian.mapper.v1.EdgeCommonProp.create_time:type_name -> google.protobuf.Timestamp
	32, // 28: librarian.mapper.v1.EdgeCommonProp.update_time:type_name -> google.protobuf.Timestamp
	26, // 29: librarian.mapper.v1.FindPathResponse.SinglePath.edge_list:type_name -> librarian.mapper.v1.Edge
	3,  // 30: librarian.mapper.v1.LibrarianMapperService.InsertVertex:input_type -> librarian.mapper.v1.InsertVertexRequest
	5,  // 31: librarian.mapper.v1.LibrarianMapperService.DeleteVertex:input_type -> librarian.mapper.v1.DeleteVertexRequest
	7,  // 32: librarian.mapper.v1.LibrarianMapperService.UpdateVertex:input_type -> librarian.mapper.v1.UpdateVertexRequest
	9,  // 33: librarian.mapper.v1.LibrarianMapperService.InsertEdge:input_type -> librarian.mapper.v1.InsertEdgeRequest
	11, // 34: librarian.mapper.v1.LibrarianMapperService.DeleteEdge:input_type -> librarian.mapper.v1.DeleteEdgeRequest
	13, // 35: librarian.mapper.v1.LibrarianMapperService.UpdateEdge:input_type -> librarian.mapper.v1.UpdateEdgeRequest
	15, // 36: librarian.mapper.v1.LibrarianMapperService.GoFromVertex:input_type -> librarian.mapper.v1.GoFromVertexRequest
	17, // 37: librarian.mapper.v1.LibrarianMapperService.FetchEqualVertex:input_type -> librarian.mapper.v1.FetchEqualVertexRequest
	19, // 38: librarian.mapper.v1.LibrarianMapperService.FetchEqualVertexNeighbor:input_type -> librarian.mapper.v1.FetchEqualVertexNeighborRequest
	21, // 39: librarian.mapper.v1.LibrarianMapperService.FindPath:input_type -> librarian.mapper.v1.FindPathRequest
	4,  // 40: librarian.mapper.v1.LibrarianMapperService.InsertVertex:output_type -> librarian.mapper.v1.InsertVertexResponse
	6,  // 41: librarian.mapper.v1.LibrarianMapperService.DeleteVertex:output_type -> librarian.mapper.v1.DeleteVertexResponse
	8,  // 42: librarian.mapper.v1.LibrarianMapperService.UpdateVertex:output_type -> librarian.mapper.v1.UpdateVertexResponse
	10, // 43: librarian.mapper.v1.LibrarianMapperService.InsertEdge:output_type -> librarian.mapper.v1.InsertEdgeResponse
	12, // 44: librarian.mapper.v1.LibrarianMapperService.DeleteEdge:output_type -> librarian.mapper.v1.DeleteEdgeResponse
	14, // 45: librarian.mapper.v1.LibrarianMapperService.UpdateEdge:output_type -> librarian.mapper.v1.UpdateEdgeResponse
	16, // 46: librarian.mapper.v1.LibrarianMapperService.GoFromVertex:output_type -> librarian.mapper.v1.GoFromVertexResponse
	18, // 47: librarian.mapper.v1.LibrarianMapperService.FetchEqualVertex:output_type -> librarian.mapper.v1.FetchEqualVertexResponse
	20, // 48: librarian.mapper.v1.LibrarianMapperService.FetchEqualVertexNeighbor:output_type -> librarian.mapper.v1.FetchEqualVertexNeighborResponse
	22, // 49: librarian.mapper.v1.LibrarianMapperService.FindPath:output_type -> librarian.mapper.v1.FindPathResponse
	40, // [40:50] is the sub-list for method output_type
	30, // [30:40] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_librarian_mapper_v1_mapper_proto_init() }
func file_librarian_mapper_v1_mapper_proto_init() {
	if File_librarian_mapper_v1_mapper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_librarian_mapper_v1_mapper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoFromVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoFromVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchEqualVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchEqualVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchEqualVertexNeighborRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchEqualVertexNeighborResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vertex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VertexProp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VertexCommonProp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeProp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeCommonProp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_librarian_mapper_v1_mapper_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPathResponse_SinglePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_librarian_mapper_v1_mapper_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_librarian_mapper_v1_mapper_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_librarian_mapper_v1_mapper_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_librarian_mapper_v1_mapper_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_librarian_mapper_v1_mapper_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_librarian_mapper_v1_mapper_proto_goTypes,
		DependencyIndexes: file_librarian_mapper_v1_mapper_proto_depIdxs,
		EnumInfos:         file_librarian_mapper_v1_mapper_proto_enumTypes,
		MessageInfos:      file_librarian_mapper_v1_mapper_proto_msgTypes,
	}.Build()
	File_librarian_mapper_v1_mapper_proto = out.File
	file_librarian_mapper_v1_mapper_proto_rawDesc = nil
	file_librarian_mapper_v1_mapper_proto_goTypes = nil
	file_librarian_mapper_v1_mapper_proto_depIdxs = nil
}
