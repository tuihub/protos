// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: librarian/v1/common.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountAppRelationType int32

const (
	AccountAppRelationType_ACCOUNT_APP_RELATION_TYPE_UNSPECIFIED AccountAppRelationType = 0
	AccountAppRelationType_ACCOUNT_APP_RELATION_TYPE_OWN         AccountAppRelationType = 1
)

// Enum value maps for AccountAppRelationType.
var (
	AccountAppRelationType_name = map[int32]string{
		0: "ACCOUNT_APP_RELATION_TYPE_UNSPECIFIED",
		1: "ACCOUNT_APP_RELATION_TYPE_OWN",
	}
	AccountAppRelationType_value = map[string]int32{
		"ACCOUNT_APP_RELATION_TYPE_UNSPECIFIED": 0,
		"ACCOUNT_APP_RELATION_TYPE_OWN":         1,
	}
)

func (x AccountAppRelationType) Enum() *AccountAppRelationType {
	p := new(AccountAppRelationType)
	*p = x
	return p
}

func (x AccountAppRelationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountAppRelationType) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_v1_common_proto_enumTypes[0].Descriptor()
}

func (AccountAppRelationType) Type() protoreflect.EnumType {
	return &file_librarian_v1_common_proto_enumTypes[0]
}

func (x AccountAppRelationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountAppRelationType.Descriptor instead.
func (AccountAppRelationType) EnumDescriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{0}
}

type AppType int32

const (
	AppType_APP_TYPE_UNSPECIFIED AppType = 0
	AppType_APP_TYPE_GAME        AppType = 1
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "APP_TYPE_UNSPECIFIED",
		1: "APP_TYPE_GAME",
	}
	AppType_value = map[string]int32{
		"APP_TYPE_UNSPECIFIED": 0,
		"APP_TYPE_GAME":        1,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_v1_common_proto_enumTypes[1].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_librarian_v1_common_proto_enumTypes[1]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{1}
}

type TimeAggregation_AggregationType int32

const (
	TimeAggregation_AGGREGATION_TYPE_UNSPECIFIED TimeAggregation_AggregationType = 0
	TimeAggregation_AGGREGATION_TYPE_OVERALL     TimeAggregation_AggregationType = 1
	TimeAggregation_AGGREGATION_TYPE_YEAR        TimeAggregation_AggregationType = 2
	TimeAggregation_AGGREGATION_TYPE_MONTH       TimeAggregation_AggregationType = 3
	TimeAggregation_AGGREGATION_TYPE_DAY         TimeAggregation_AggregationType = 4
)

// Enum value maps for TimeAggregation_AggregationType.
var (
	TimeAggregation_AggregationType_name = map[int32]string{
		0: "AGGREGATION_TYPE_UNSPECIFIED",
		1: "AGGREGATION_TYPE_OVERALL",
		2: "AGGREGATION_TYPE_YEAR",
		3: "AGGREGATION_TYPE_MONTH",
		4: "AGGREGATION_TYPE_DAY",
	}
	TimeAggregation_AggregationType_value = map[string]int32{
		"AGGREGATION_TYPE_UNSPECIFIED": 0,
		"AGGREGATION_TYPE_OVERALL":     1,
		"AGGREGATION_TYPE_YEAR":        2,
		"AGGREGATION_TYPE_MONTH":       3,
		"AGGREGATION_TYPE_DAY":         4,
	}
)

func (x TimeAggregation_AggregationType) Enum() *TimeAggregation_AggregationType {
	p := new(TimeAggregation_AggregationType)
	*p = x
	return p
}

func (x TimeAggregation_AggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeAggregation_AggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_v1_common_proto_enumTypes[2].Descriptor()
}

func (TimeAggregation_AggregationType) Type() protoreflect.EnumType {
	return &file_librarian_v1_common_proto_enumTypes[2]
}

func (x TimeAggregation_AggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeAggregation_AggregationType.Descriptor instead.
func (TimeAggregation_AggregationType) EnumDescriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{3, 0}
}

type PagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start from 1, not 0
	PageNum  int64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PagingRequest) Reset() {
	*x = PagingRequest{}
	mi := &file_librarian_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRequest) ProtoMessage() {}

func (x *PagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRequest.ProtoReflect.Descriptor instead.
func (*PagingRequest) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *PagingRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PagingRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSize int64 `protobuf:"varint,1,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *PagingResponse) Reset() {
	*x = PagingResponse{}
	mi := &file_librarian_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingResponse) ProtoMessage() {}

func (x *PagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingResponse.ProtoReflect.Descriptor instead.
func (*PagingResponse) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *PagingResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// half-open e.g.
//
//	{
//	  start_time: "2023.01.01 00:00",
//	  duration: "1d"
//	}
//
// means the whole day of 2023.1.1;
// or [2023.01.01 00:00 , 2023.01.02 00:00)
type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration  *durationpb.Duration   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_librarian_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *TimeRange) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimeRange) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

// Should be used in request messages
type TimeAggregation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregationType TimeAggregation_AggregationType `protobuf:"varint,1,opt,name=aggregation_type,json=aggregationType,proto3,enum=librarian.v1.TimeAggregation_AggregationType" json:"aggregation_type,omitempty"`
	// The `TimeRange` should be adjusted on the server side to align with the nearest boundary when aggregating.
	// e.g. the request TimeRange is 2023.2.13 9:26 ~ 2023.3.14 17:21.
	// For aggregating by year, rounded to 2023.1.1 00:00 ~ 2024.1.1 00:00.
	// For aggregating by month, rounded to 2023.2.1 00:00 ~ 2023.4.1 00:00.
	// For aggregating by day, rounded to 2023.2.13 00:00 ~ 2023.3.15 00:00.
	TimeRange *TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
}

func (x *TimeAggregation) Reset() {
	*x = TimeAggregation{}
	mi := &file_librarian_v1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeAggregation) ProtoMessage() {}

func (x *TimeAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeAggregation.ProtoReflect.Descriptor instead.
func (*TimeAggregation) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *TimeAggregation) GetAggregationType() TimeAggregation_AggregationType {
	if x != nil {
		return x.AggregationType
	}
	return TimeAggregation_AGGREGATION_TYPE_UNSPECIFIED
}

func (x *TimeAggregation) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

// A globally unique identifier generated by `Searcher`
type InternalID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *InternalID) Reset() {
	*x = InternalID{}
	mi := &file_librarian_v1_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalID) ProtoMessage() {}

func (x *InternalID) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalID.ProtoReflect.Descriptor instead.
func (*InternalID) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *InternalID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *InternalID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// WellKnownPlatform
	Platform          string                 `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformAccountId string                 `protobuf:"bytes,3,opt,name=platform_account_id,json=platformAccountId,proto3" json:"platform_account_id,omitempty"`
	Name              string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ProfileUrl        string                 `protobuf:"bytes,5,opt,name=profile_url,json=profileUrl,proto3" json:"profile_url,omitempty"`
	AvatarUrl         string                 `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	LatestUpdateTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=latest_update_time,json=latestUpdateTime,proto3" json:"latest_update_time,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_librarian_v1_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *Account) GetId() *InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Account) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Account) GetPlatformAccountId() string {
	if x != nil {
		return x.PlatformAccountId
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetProfileUrl() string {
	if x != nil {
		return x.ProfileUrl
	}
	return ""
}

func (x *Account) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Account) GetLatestUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestUpdateTime
	}
	return nil
}

type AccountID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// WellKnownAccountPlatform
	Platform          string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformAccountId string `protobuf:"bytes,2,opt,name=platform_account_id,json=platformAccountId,proto3" json:"platform_account_id,omitempty"`
}

func (x *AccountID) Reset() {
	*x = AccountID{}
	mi := &file_librarian_v1_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountID) ProtoMessage() {}

func (x *AccountID) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountID.ProtoReflect.Descriptor instead.
func (*AccountID) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *AccountID) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *AccountID) GetPlatformAccountId() string {
	if x != nil {
		return x.PlatformAccountId
	}
	return ""
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *InternalID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ignore `source` and `source_app_id` when `internal` is true
	Internal bool `protobuf:"varint,2,opt,name=internal,proto3" json:"internal,omitempty"`
	// WellKnownAppInfoSource
	Source           string          `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	SourceAppId      string          `protobuf:"bytes,4,opt,name=source_app_id,json=sourceAppId,proto3" json:"source_app_id,omitempty"`
	SourceUrl        *string         `protobuf:"bytes,5,opt,name=source_url,json=sourceUrl,proto3,oneof" json:"source_url,omitempty"`
	Details          *AppInfoDetails `protobuf:"bytes,6,opt,name=details,proto3,oneof" json:"details,omitempty"`
	Name             string          `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Type             AppType         `protobuf:"varint,8,opt,name=type,proto3,enum=librarian.v1.AppType" json:"type,omitempty"`
	ShortDescription string          `protobuf:"bytes,9,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	IconImageUrl     string          `protobuf:"bytes,10,opt,name=icon_image_url,json=iconImageUrl,proto3" json:"icon_image_url,omitempty"`
	// must be horizontal, usually 16:9
	BackgroundImageUrl string `protobuf:"bytes,11,opt,name=background_image_url,json=backgroundImageUrl,proto3" json:"background_image_url,omitempty"`
	// must be vertical, usually 3:4
	CoverImageUrl string   `protobuf:"bytes,12,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	Tags          []string `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	AltNames      []string `protobuf:"bytes,14,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	mi := &file_librarian_v1_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *AppInfo) GetId() *InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AppInfo) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *AppInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AppInfo) GetSourceAppId() string {
	if x != nil {
		return x.SourceAppId
	}
	return ""
}

func (x *AppInfo) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *AppInfo) GetDetails() *AppInfoDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_APP_TYPE_UNSPECIFIED
}

func (x *AppInfo) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *AppInfo) GetIconImageUrl() string {
	if x != nil {
		return x.IconImageUrl
	}
	return ""
}

func (x *AppInfo) GetBackgroundImageUrl() string {
	if x != nil {
		return x.BackgroundImageUrl
	}
	return ""
}

func (x *AppInfo) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *AppInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AppInfo) GetAltNames() []string {
	if x != nil {
		return x.AltNames
	}
	return nil
}

// Mixed info of bound apps
type AppInfoMixed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// internal app id
	Id               *InternalID     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Details          *AppInfoDetails `protobuf:"bytes,6,opt,name=details,proto3,oneof" json:"details,omitempty"`
	Name             string          `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Type             AppType         `protobuf:"varint,8,opt,name=type,proto3,enum=librarian.v1.AppType" json:"type,omitempty"`
	ShortDescription string          `protobuf:"bytes,9,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	IconImageUrl     string          `protobuf:"bytes,10,opt,name=icon_image_url,json=iconImageUrl,proto3" json:"icon_image_url,omitempty"`
	// must be horizontal, usually 16:9
	BackgroundImageUrl string `protobuf:"bytes,11,opt,name=background_image_url,json=backgroundImageUrl,proto3" json:"background_image_url,omitempty"`
	// must be vertical, usually 3:4
	CoverImageUrl string   `protobuf:"bytes,12,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	Tags          []string `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	AltNames      []string `protobuf:"bytes,14,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
}

func (x *AppInfoMixed) Reset() {
	*x = AppInfoMixed{}
	mi := &file_librarian_v1_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfoMixed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoMixed) ProtoMessage() {}

func (x *AppInfoMixed) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoMixed.ProtoReflect.Descriptor instead.
func (*AppInfoMixed) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{8}
}

func (x *AppInfoMixed) GetId() *InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AppInfoMixed) GetDetails() *AppInfoDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AppInfoMixed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfoMixed) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_APP_TYPE_UNSPECIFIED
}

func (x *AppInfoMixed) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *AppInfoMixed) GetIconImageUrl() string {
	if x != nil {
		return x.IconImageUrl
	}
	return ""
}

func (x *AppInfoMixed) GetBackgroundImageUrl() string {
	if x != nil {
		return x.BackgroundImageUrl
	}
	return ""
}

func (x *AppInfoMixed) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *AppInfoMixed) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AppInfoMixed) GetAltNames() []string {
	if x != nil {
		return x.AltNames
	}
	return nil
}

type AppInfoID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Internal bool `protobuf:"varint,1,opt,name=internal,proto3" json:"internal,omitempty"`
	// WellKnownAppInfoSource
	Source      string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	SourceAppId string `protobuf:"bytes,3,opt,name=source_app_id,json=sourceAppId,proto3" json:"source_app_id,omitempty"`
}

func (x *AppInfoID) Reset() {
	*x = AppInfoID{}
	mi := &file_librarian_v1_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfoID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoID) ProtoMessage() {}

func (x *AppInfoID) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoID.ProtoReflect.Descriptor instead.
func (*AppInfoID) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{9}
}

func (x *AppInfoID) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *AppInfoID) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AppInfoID) GetSourceAppId() string {
	if x != nil {
		return x.SourceAppId
	}
	return ""
}

type AppInfoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ReleaseDate string   `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Developer   string   `protobuf:"bytes,3,opt,name=developer,proto3" json:"developer,omitempty"`
	Publisher   string   `protobuf:"bytes,4,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Version     string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	ImageUrls   []string `protobuf:"bytes,6,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
}

func (x *AppInfoDetails) Reset() {
	*x = AppInfoDetails{}
	mi := &file_librarian_v1_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoDetails) ProtoMessage() {}

func (x *AppInfoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoDetails.ProtoReflect.Descriptor instead.
func (*AppInfoDetails) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{10}
}

func (x *AppInfoDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppInfoDetails) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *AppInfoDetails) GetDeveloper() string {
	if x != nil {
		return x.Developer
	}
	return ""
}

func (x *AppInfoDetails) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *AppInfoDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppInfoDetails) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *InternalID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// `standard field`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// `standard field`
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	// `standard field`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// `standard field`
	Items []*FeedItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	// `standard field`
	Language string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// `standard field`
	Image *FeedImage `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	// `standard field`
	Authors []*FeedPerson `protobuf:"bytes,8,rep,name=authors,proto3" json:"authors,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	mi := &file_librarian_v1_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{11}
}

func (x *Feed) GetId() *InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Feed) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Feed) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Feed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Feed) GetItems() []*FeedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Feed) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Feed) GetImage() *FeedImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Feed) GetAuthors() []*FeedPerson {
	if x != nil {
		return x.Authors
	}
	return nil
}

type FeedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *InternalID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// `standard field`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// `standard field`
	Authors []*FeedPerson `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	// `standard field`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// `standard field`
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// `standard field`
	Guid string `protobuf:"bytes,6,opt,name=guid,proto3" json:"guid,omitempty"`
	// `standard field`. e.g. https://github.com/TuiHub/Librarian/releases.atom
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	// `standard field`
	Image *FeedImage `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`
	// `standard field`
	Published string `protobuf:"bytes,9,opt,name=published,proto3" json:"published,omitempty"`
	// must valid when send to client.
	// if server failed to generate, fallback to server time.
	PublishedParsed *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=published_parsed,json=publishedParsed,proto3,oneof" json:"published_parsed,omitempty"`
	// `standard field`
	Updated       string                 `protobuf:"bytes,11,opt,name=updated,proto3" json:"updated,omitempty"`
	UpdatedParsed *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_parsed,json=updatedParsed,proto3,oneof" json:"updated_parsed,omitempty"`
	// `standard field`
	Enclosures []*FeedEnclosure `protobuf:"bytes,13,rep,name=enclosures,proto3" json:"enclosures,omitempty"`
	// hostname of `link`. e.g. github.com
	PublishPlatform string `protobuf:"bytes,14,opt,name=publish_platform,json=publishPlatform,proto3" json:"publish_platform,omitempty"`
	// recorded read times
	ReadCount int64 `protobuf:"varint,15,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`
}

func (x *FeedItem) Reset() {
	*x = FeedItem{}
	mi := &file_librarian_v1_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedItem) ProtoMessage() {}

func (x *FeedItem) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedItem.ProtoReflect.Descriptor instead.
func (*FeedItem) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{12}
}

func (x *FeedItem) GetId() *InternalID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FeedItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FeedItem) GetAuthors() []*FeedPerson {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *FeedItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeedItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FeedItem) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *FeedItem) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *FeedItem) GetImage() *FeedImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *FeedItem) GetPublished() string {
	if x != nil {
		return x.Published
	}
	return ""
}

func (x *FeedItem) GetPublishedParsed() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedParsed
	}
	return nil
}

func (x *FeedItem) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *FeedItem) GetUpdatedParsed() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedParsed
	}
	return nil
}

func (x *FeedItem) GetEnclosures() []*FeedEnclosure {
	if x != nil {
		return x.Enclosures
	}
	return nil
}

func (x *FeedItem) GetPublishPlatform() string {
	if x != nil {
		return x.PublishPlatform
	}
	return ""
}

func (x *FeedItem) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

// Person is an individual specified in a feed
// (e.g. an author)
type FeedPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `standard field`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// `standard field`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *FeedPerson) Reset() {
	*x = FeedPerson{}
	mi := &file_librarian_v1_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedPerson) ProtoMessage() {}

func (x *FeedPerson) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedPerson.ProtoReflect.Descriptor instead.
func (*FeedPerson) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{13}
}

func (x *FeedPerson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeedPerson) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Image is an image that is the artwork for a given
// feed or item.
type FeedImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `standard field`
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// `standard field`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *FeedImage) Reset() {
	*x = FeedImage{}
	mi := &file_librarian_v1_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedImage) ProtoMessage() {}

func (x *FeedImage) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedImage.ProtoReflect.Descriptor instead.
func (*FeedImage) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{14}
}

func (x *FeedImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FeedImage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// Enclosure is a file associated with a given Item.
type FeedEnclosure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `standard field`
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// `standard field`
	Length string `protobuf:"bytes,2,opt,name=length,proto3" json:"length,omitempty"`
	// `standard field`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FeedEnclosure) Reset() {
	*x = FeedEnclosure{}
	mi := &file_librarian_v1_common_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedEnclosure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedEnclosure) ProtoMessage() {}

func (x *FeedEnclosure) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedEnclosure.ProtoReflect.Descriptor instead.
func (*FeedEnclosure) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{15}
}

func (x *FeedEnclosure) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FeedEnclosure) GetLength() string {
	if x != nil {
		return x.Length
	}
	return ""
}

func (x *FeedEnclosure) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PorterBinarySummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server source code address.
	// *Should* be a valid http address.
	SourceCodeAddress string `protobuf:"bytes,1,opt,name=source_code_address,json=sourceCodeAddress,proto3" json:"source_code_address,omitempty"`
	// Binary build version.
	// The content *should* be a semantic version string similar to the one generated by `git describe`,
	// but rely on the actual implementation.
	BuildVersion string `protobuf:"bytes,2,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	// Binary build date.
	// The content *should* be a date format that is human-readable.
	BuildDate string `protobuf:"bytes,3,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	// Human-readable name. plain text.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable version. plain text.
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Human-readable description. plain text or markdown.
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *PorterBinarySummary) Reset() {
	*x = PorterBinarySummary{}
	mi := &file_librarian_v1_common_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PorterBinarySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PorterBinarySummary) ProtoMessage() {}

func (x *PorterBinarySummary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_v1_common_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PorterBinarySummary.ProtoReflect.Descriptor instead.
func (*PorterBinarySummary) Descriptor() ([]byte, []int) {
	return file_librarian_v1_common_proto_rawDescGZIP(), []int{16}
}

func (x *PorterBinarySummary) GetSourceCodeAddress() string {
	if x != nil {
		return x.SourceCodeAddress
	}
	return ""
}

func (x *PorterBinarySummary) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *PorterBinarySummary) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *PorterBinarySummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PorterBinarySummary) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PorterBinarySummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_librarian_v1_common_proto protoreflect.FileDescriptor

var file_librarian_v1_common_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x39, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04,
	0x22, 0x02, 0x28, 0x00, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0xfa, 0xf7, 0x18, 0x05, 0xaa, 0x01, 0x02, 0x32, 0x00,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x54,
	0x69, 0x6d, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58,
	0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x41,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x41,
	0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x41, 0x59, 0x10, 0x04, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x9d, 0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x48, 0x0a, 0x12, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa4, 0x04, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3b,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x01, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a,
	0x14, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x9e, 0x03, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x69, 0x78, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a,
	0x14, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x63, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x73, 0x22, 0x8c, 0x05, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x32, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01,
	0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x63, 0x6c, 0x6f, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x64, 0x22, 0x36, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x33, 0x0a, 0x09, 0x46, 0x65, 0x65,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x4d,
	0x0a, 0x0d, 0x46, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd9, 0x01,
	0x0a, 0x13, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x66, 0x0a, 0x16, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41,
	0x50, 0x50, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21,
	0x0a, 0x1d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x5f, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x57, 0x4e, 0x10,
	0x01, 0x2a, 0x36, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x41, 0x50, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x42, 0x4b, 0x5a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xaa, 0x02, 0x1a, 0x54, 0x75, 0x69, 0x48,
	0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_librarian_v1_common_proto_rawDescOnce sync.Once
	file_librarian_v1_common_proto_rawDescData = file_librarian_v1_common_proto_rawDesc
)

func file_librarian_v1_common_proto_rawDescGZIP() []byte {
	file_librarian_v1_common_proto_rawDescOnce.Do(func() {
		file_librarian_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_librarian_v1_common_proto_rawDescData)
	})
	return file_librarian_v1_common_proto_rawDescData
}

var file_librarian_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_librarian_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_librarian_v1_common_proto_goTypes = []any{
	(AccountAppRelationType)(0),          // 0: librarian.v1.AccountAppRelationType
	(AppType)(0),                         // 1: librarian.v1.AppType
	(TimeAggregation_AggregationType)(0), // 2: librarian.v1.TimeAggregation.AggregationType
	(*PagingRequest)(nil),                // 3: librarian.v1.PagingRequest
	(*PagingResponse)(nil),               // 4: librarian.v1.PagingResponse
	(*TimeRange)(nil),                    // 5: librarian.v1.TimeRange
	(*TimeAggregation)(nil),              // 6: librarian.v1.TimeAggregation
	(*InternalID)(nil),                   // 7: librarian.v1.InternalID
	(*Account)(nil),                      // 8: librarian.v1.Account
	(*AccountID)(nil),                    // 9: librarian.v1.AccountID
	(*AppInfo)(nil),                      // 10: librarian.v1.AppInfo
	(*AppInfoMixed)(nil),                 // 11: librarian.v1.AppInfoMixed
	(*AppInfoID)(nil),                    // 12: librarian.v1.AppInfoID
	(*AppInfoDetails)(nil),               // 13: librarian.v1.AppInfoDetails
	(*Feed)(nil),                         // 14: librarian.v1.Feed
	(*FeedItem)(nil),                     // 15: librarian.v1.FeedItem
	(*FeedPerson)(nil),                   // 16: librarian.v1.FeedPerson
	(*FeedImage)(nil),                    // 17: librarian.v1.FeedImage
	(*FeedEnclosure)(nil),                // 18: librarian.v1.FeedEnclosure
	(*PorterBinarySummary)(nil),          // 19: librarian.v1.PorterBinarySummary
	(*timestamppb.Timestamp)(nil),        // 20: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),          // 21: google.protobuf.Duration
}
var file_librarian_v1_common_proto_depIdxs = []int32{
	20, // 0: librarian.v1.TimeRange.start_time:type_name -> google.protobuf.Timestamp
	21, // 1: librarian.v1.TimeRange.duration:type_name -> google.protobuf.Duration
	2,  // 2: librarian.v1.TimeAggregation.aggregation_type:type_name -> librarian.v1.TimeAggregation.AggregationType
	5,  // 3: librarian.v1.TimeAggregation.time_range:type_name -> librarian.v1.TimeRange
	7,  // 4: librarian.v1.Account.id:type_name -> librarian.v1.InternalID
	20, // 5: librarian.v1.Account.latest_update_time:type_name -> google.protobuf.Timestamp
	7,  // 6: librarian.v1.AppInfo.id:type_name -> librarian.v1.InternalID
	13, // 7: librarian.v1.AppInfo.details:type_name -> librarian.v1.AppInfoDetails
	1,  // 8: librarian.v1.AppInfo.type:type_name -> librarian.v1.AppType
	7,  // 9: librarian.v1.AppInfoMixed.id:type_name -> librarian.v1.InternalID
	13, // 10: librarian.v1.AppInfoMixed.details:type_name -> librarian.v1.AppInfoDetails
	1,  // 11: librarian.v1.AppInfoMixed.type:type_name -> librarian.v1.AppType
	7,  // 12: librarian.v1.Feed.id:type_name -> librarian.v1.InternalID
	15, // 13: librarian.v1.Feed.items:type_name -> librarian.v1.FeedItem
	17, // 14: librarian.v1.Feed.image:type_name -> librarian.v1.FeedImage
	16, // 15: librarian.v1.Feed.authors:type_name -> librarian.v1.FeedPerson
	7,  // 16: librarian.v1.FeedItem.id:type_name -> librarian.v1.InternalID
	16, // 17: librarian.v1.FeedItem.authors:type_name -> librarian.v1.FeedPerson
	17, // 18: librarian.v1.FeedItem.image:type_name -> librarian.v1.FeedImage
	20, // 19: librarian.v1.FeedItem.published_parsed:type_name -> google.protobuf.Timestamp
	20, // 20: librarian.v1.FeedItem.updated_parsed:type_name -> google.protobuf.Timestamp
	18, // 21: librarian.v1.FeedItem.enclosures:type_name -> librarian.v1.FeedEnclosure
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_librarian_v1_common_proto_init() }
func file_librarian_v1_common_proto_init() {
	if File_librarian_v1_common_proto != nil {
		return
	}
	file_librarian_v1_common_proto_msgTypes[7].OneofWrappers = []any{}
	file_librarian_v1_common_proto_msgTypes[8].OneofWrappers = []any{}
	file_librarian_v1_common_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_librarian_v1_common_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_librarian_v1_common_proto_goTypes,
		DependencyIndexes: file_librarian_v1_common_proto_depIdxs,
		EnumInfos:         file_librarian_v1_common_proto_enumTypes,
		MessageInfos:      file_librarian_v1_common_proto_msgTypes,
	}.Build()
	File_librarian_v1_common_proto = out.File
	file_librarian_v1_common_proto_rawDesc = nil
	file_librarian_v1_common_proto_goTypes = nil
	file_librarian_v1_common_proto_depIdxs = nil
}
