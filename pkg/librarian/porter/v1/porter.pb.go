// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: librarian/porter/v1/porter.proto

package v1

import (
	v1 "github.com/tuihub/protos/pkg/librarian/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPorterInformationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPorterInformationRequest) Reset() {
	*x = GetPorterInformationRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPorterInformationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPorterInformationRequest) ProtoMessage() {}

func (x *GetPorterInformationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPorterInformationRequest.ProtoReflect.Descriptor instead.
func (*GetPorterInformationRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{0}
}

type GetPorterInformationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BinarySummary *v1.PorterBinarySummary `protobuf:"bytes,1,opt,name=binary_summary,json=binarySummary,proto3" json:"binary_summary,omitempty"`
	// Global identifier. Same global name means same project. no format limit.
	// e.g. use project url "github.com/tuihub/porter-steam".
	GlobalName string `protobuf:"bytes,2,opt,name=global_name,json=globalName,proto3" json:"global_name,omitempty"`
	// Region is used to group porters,
	// same porter in same region can be randomly selected.
	// Leave empty to use default region.
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// Supported features.
	FeatureSummary *v1.FeatureSummary `protobuf:"bytes,4,opt,name=feature_summary,json=featureSummary,proto3" json:"feature_summary,omitempty"`
	// JSON schema for `FeatureRequest.context_json`.
	// Leave empty if not needed.
	// If needed, all feature requests should deliver `context_json`.
	// Can be used to configure third-party token, etc.
	ContextJsonSchema *string `protobuf:"bytes,5,opt,name=context_json_schema,json=contextJsonSchema,proto3,oneof" json:"context_json_schema,omitempty"`
}

func (x *GetPorterInformationResponse) Reset() {
	*x = GetPorterInformationResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPorterInformationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPorterInformationResponse) ProtoMessage() {}

func (x *GetPorterInformationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPorterInformationResponse.ProtoReflect.Descriptor instead.
func (*GetPorterInformationResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{1}
}

func (x *GetPorterInformationResponse) GetBinarySummary() *v1.PorterBinarySummary {
	if x != nil {
		return x.BinarySummary
	}
	return nil
}

func (x *GetPorterInformationResponse) GetGlobalName() string {
	if x != nil {
		return x.GlobalName
	}
	return ""
}

func (x *GetPorterInformationResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetPorterInformationResponse) GetFeatureSummary() *v1.FeatureSummary {
	if x != nil {
		return x.FeatureSummary
	}
	return nil
}

func (x *GetPorterInformationResponse) GetContextJsonSchema() string {
	if x != nil && x.ContextJsonSchema != nil {
		return *x.ContextJsonSchema
	}
	return ""
}

type EnablePorterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of sephirah. can be randomly generated.
	// porter can only be enabled by one sephirah.
	// redundancy requests from enabler must return success.
	SephirahId int64 `protobuf:"varint,1,opt,name=sephirah_id,json=sephirahId,proto3" json:"sephirah_id,omitempty"`
	// Used to perform reverse call.
	// If not needed, porter should ignore it.
	// If needed, porter should refresh token before response to verify reverse call is available.
	// Enabler can send empty token as default, and resend request with token if needed.
	RefreshToken *string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3,oneof" json:"refresh_token,omitempty"`
}

func (x *EnablePorterRequest) Reset() {
	*x = EnablePorterRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePorterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePorterRequest) ProtoMessage() {}

func (x *EnablePorterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePorterRequest.ProtoReflect.Descriptor instead.
func (*EnablePorterRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{2}
}

func (x *EnablePorterRequest) GetSephirahId() int64 {
	if x != nil {
		return x.SephirahId
	}
	return 0
}

func (x *EnablePorterRequest) GetRefreshToken() string {
	if x != nil && x.RefreshToken != nil {
		return *x.RefreshToken
	}
	return ""
}

type EnablePorterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Human-readable status message.
	StatusMessage string `protobuf:"bytes,1,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	// If true, enabler should resend request with `refresh_token`.
	NeedRefreshToken bool                  `protobuf:"varint,2,opt,name=need_refresh_token,json=needRefreshToken,proto3" json:"need_refresh_token,omitempty"`
	EnablesSummary   *PorterEnablesSummary `protobuf:"bytes,3,opt,name=enables_summary,json=enablesSummary,proto3" json:"enables_summary,omitempty"`
}

func (x *EnablePorterResponse) Reset() {
	*x = EnablePorterResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePorterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePorterResponse) ProtoMessage() {}

func (x *EnablePorterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePorterResponse.ProtoReflect.Descriptor instead.
func (*EnablePorterResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{3}
}

func (x *EnablePorterResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *EnablePorterResponse) GetNeedRefreshToken() bool {
	if x != nil {
		return x.NeedRefreshToken
	}
	return false
}

func (x *EnablePorterResponse) GetEnablesSummary() *PorterEnablesSummary {
	if x != nil {
		return x.EnablesSummary
	}
	return nil
}

type PorterEnablesSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `EnableContextRequest.context_id`
	ContextIds []*v1.InternalID `protobuf:"bytes,1,rep,name=context_ids,json=contextIds,proto3" json:"context_ids,omitempty"`
	// `EnableFeedSetterRequest.setter_id`
	FeedSetterIds []*v1.InternalID `protobuf:"bytes,2,rep,name=feed_setter_ids,json=feedSetterIds,proto3" json:"feed_setter_ids,omitempty"`
	// `EnableFeedGetterRequest.getter_id`
	FeedGetterIds []*v1.InternalID `protobuf:"bytes,3,rep,name=feed_getter_ids,json=feedGetterIds,proto3" json:"feed_getter_ids,omitempty"`
}

func (x *PorterEnablesSummary) Reset() {
	*x = PorterEnablesSummary{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PorterEnablesSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PorterEnablesSummary) ProtoMessage() {}

func (x *PorterEnablesSummary) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PorterEnablesSummary.ProtoReflect.Descriptor instead.
func (*PorterEnablesSummary) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{4}
}

func (x *PorterEnablesSummary) GetContextIds() []*v1.InternalID {
	if x != nil {
		return x.ContextIds
	}
	return nil
}

func (x *PorterEnablesSummary) GetFeedSetterIds() []*v1.InternalID {
	if x != nil {
		return x.FeedSetterIds
	}
	return nil
}

func (x *PorterEnablesSummary) GetFeedGetterIds() []*v1.InternalID {
	if x != nil {
		return x.FeedGetterIds
	}
	return nil
}

type EnableContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of context.
	// New context can replace old context with same id.
	ContextId   *v1.InternalID `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	ContextJson string         `protobuf:"bytes,2,opt,name=context_json,json=contextJson,proto3" json:"context_json,omitempty"`
}

func (x *EnableContextRequest) Reset() {
	*x = EnableContextRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableContextRequest) ProtoMessage() {}

func (x *EnableContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableContextRequest.ProtoReflect.Descriptor instead.
func (*EnableContextRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{5}
}

func (x *EnableContextRequest) GetContextId() *v1.InternalID {
	if x != nil {
		return x.ContextId
	}
	return nil
}

func (x *EnableContextRequest) GetContextJson() string {
	if x != nil {
		return x.ContextJson
	}
	return ""
}

type EnableContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableContextResponse) Reset() {
	*x = EnableContextResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableContextResponse) ProtoMessage() {}

func (x *EnableContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableContextResponse.ProtoReflect.Descriptor instead.
func (*EnableContextResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{6}
}

type DisableContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *v1.InternalID `protobuf:"bytes,1,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
}

func (x *DisableContextRequest) Reset() {
	*x = DisableContextRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableContextRequest) ProtoMessage() {}

func (x *DisableContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableContextRequest.ProtoReflect.Descriptor instead.
func (*DisableContextRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{7}
}

func (x *DisableContextRequest) GetContextId() *v1.InternalID {
	if x != nil {
		return x.ContextId
	}
	return nil
}

type DisableContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableContextResponse) Reset() {
	*x = DisableContextResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableContextResponse) ProtoMessage() {}

func (x *DisableContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableContextResponse.ProtoReflect.Descriptor instead.
func (*DisableContextResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{8}
}

type PullAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *v1.AccountID `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *PullAccountRequest) Reset() {
	*x = PullAccountRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAccountRequest) ProtoMessage() {}

func (x *PullAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAccountRequest.ProtoReflect.Descriptor instead.
func (*PullAccountRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{9}
}

func (x *PullAccountRequest) GetAccountId() *v1.AccountID {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type PullAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *v1.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *PullAccountResponse) Reset() {
	*x = PullAccountResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAccountResponse) ProtoMessage() {}

func (x *PullAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAccountResponse.ProtoReflect.Descriptor instead.
func (*PullAccountResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{10}
}

func (x *PullAccountResponse) GetAccount() *v1.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type PullAppInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInfoId *v1.AppInfoID `protobuf:"bytes,1,opt,name=app_info_id,json=appInfoId,proto3" json:"app_info_id,omitempty"`
}

func (x *PullAppInfoRequest) Reset() {
	*x = PullAppInfoRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAppInfoRequest) ProtoMessage() {}

func (x *PullAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAppInfoRequest.ProtoReflect.Descriptor instead.
func (*PullAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{11}
}

func (x *PullAppInfoRequest) GetAppInfoId() *v1.AppInfoID {
	if x != nil {
		return x.AppInfoId
	}
	return nil
}

type PullAppInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInfo *v1.AppInfo `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
}

func (x *PullAppInfoResponse) Reset() {
	*x = PullAppInfoResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAppInfoResponse) ProtoMessage() {}

func (x *PullAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAppInfoResponse.ProtoReflect.Descriptor instead.
func (*PullAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{12}
}

func (x *PullAppInfoResponse) GetAppInfo() *v1.AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type PullAccountAppInfoRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationType v1.AccountAppRelationType `protobuf:"varint,1,opt,name=relation_type,json=relationType,proto3,enum=librarian.v1.AccountAppRelationType" json:"relation_type,omitempty"`
	AccountId    *v1.AccountID             `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *PullAccountAppInfoRelationRequest) Reset() {
	*x = PullAccountAppInfoRelationRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAccountAppInfoRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAccountAppInfoRelationRequest) ProtoMessage() {}

func (x *PullAccountAppInfoRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAccountAppInfoRelationRequest.ProtoReflect.Descriptor instead.
func (*PullAccountAppInfoRelationRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{13}
}

func (x *PullAccountAppInfoRelationRequest) GetRelationType() v1.AccountAppRelationType {
	if x != nil {
		return x.RelationType
	}
	return v1.AccountAppRelationType(0)
}

func (x *PullAccountAppInfoRelationRequest) GetAccountId() *v1.AccountID {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type PullAccountAppInfoRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInfos []*v1.AppInfo `protobuf:"bytes,1,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
}

func (x *PullAccountAppInfoRelationResponse) Reset() {
	*x = PullAccountAppInfoRelationResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullAccountAppInfoRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullAccountAppInfoRelationResponse) ProtoMessage() {}

func (x *PullAccountAppInfoRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullAccountAppInfoRelationResponse.ProtoReflect.Descriptor instead.
func (*PullAccountAppInfoRelationResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{14}
}

func (x *PullAccountAppInfoRelationResponse) GetAppInfos() []*v1.AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type SearchAppInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SearchAppInfoRequest) Reset() {
	*x = SearchAppInfoRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppInfoRequest) ProtoMessage() {}

func (x *SearchAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppInfoRequest.ProtoReflect.Descriptor instead.
func (*SearchAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{15}
}

func (x *SearchAppInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SearchAppInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInfos []*v1.AppInfo `protobuf:"bytes,1,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
}

func (x *SearchAppInfoResponse) Reset() {
	*x = SearchAppInfoResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppInfoResponse) ProtoMessage() {}

func (x *SearchAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppInfoResponse.ProtoReflect.Descriptor instead.
func (*SearchAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{16}
}

func (x *SearchAppInfoResponse) GetAppInfos() []*v1.AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type PullFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `PorterFeatureSummary.feed_sources`
	Source *v1.FeatureRequest `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *PullFeedRequest) Reset() {
	*x = PullFeedRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullFeedRequest) ProtoMessage() {}

func (x *PullFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullFeedRequest.ProtoReflect.Descriptor instead.
func (*PullFeedRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{17}
}

func (x *PullFeedRequest) GetSource() *v1.FeatureRequest {
	if x != nil {
		return x.Source
	}
	return nil
}

type PullFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *v1.Feed `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *PullFeedResponse) Reset() {
	*x = PullFeedResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullFeedResponse) ProtoMessage() {}

func (x *PullFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullFeedResponse.ProtoReflect.Descriptor instead.
func (*PullFeedResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{18}
}

func (x *PullFeedResponse) GetData() *v1.Feed {
	if x != nil {
		return x.Data
	}
	return nil
}

type PushFeedItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `PorterFeatureSummary.notify_destinations`
	Destination *v1.FeatureRequest `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Items       []*v1.FeedItem     `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PushFeedItemsRequest) Reset() {
	*x = PushFeedItemsRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushFeedItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFeedItemsRequest) ProtoMessage() {}

func (x *PushFeedItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFeedItemsRequest.ProtoReflect.Descriptor instead.
func (*PushFeedItemsRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{19}
}

func (x *PushFeedItemsRequest) GetDestination() *v1.FeatureRequest {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *PushFeedItemsRequest) GetItems() []*v1.FeedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PushFeedItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushFeedItemsResponse) Reset() {
	*x = PushFeedItemsResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushFeedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFeedItemsResponse) ProtoMessage() {}

func (x *PushFeedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFeedItemsResponse.ProtoReflect.Descriptor instead.
func (*PushFeedItemsResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{20}
}

type ExecFeedItemActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// `PorterFeatureSummary.feed_item_actions`
	Action *v1.FeatureRequest `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Item   *v1.FeedItem       `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ExecFeedItemActionRequest) Reset() {
	*x = ExecFeedItemActionRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecFeedItemActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecFeedItemActionRequest) ProtoMessage() {}

func (x *ExecFeedItemActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecFeedItemActionRequest.ProtoReflect.Descriptor instead.
func (*ExecFeedItemActionRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{21}
}

func (x *ExecFeedItemActionRequest) GetAction() *v1.FeatureRequest {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *ExecFeedItemActionRequest) GetItem() *v1.FeedItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type ExecFeedItemActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the result of the action.
	// Leave empty if item should be filtered out.
	Item *v1.FeedItem `protobuf:"bytes,1,opt,name=item,proto3,oneof" json:"item,omitempty"`
}

func (x *ExecFeedItemActionResponse) Reset() {
	*x = ExecFeedItemActionResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecFeedItemActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecFeedItemActionResponse) ProtoMessage() {}

func (x *ExecFeedItemActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecFeedItemActionResponse.ProtoReflect.Descriptor instead.
func (*ExecFeedItemActionResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{22}
}

func (x *ExecFeedItemActionResponse) GetItem() *v1.FeedItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type EnableFeedSetterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetterId *v1.InternalID `protobuf:"bytes,1,opt,name=setter_id,json=setterId,proto3" json:"setter_id,omitempty"`
	// `PorterFeatureSummary.feed_setters`
	Setter *v1.FeatureRequest `protobuf:"bytes,2,opt,name=setter,proto3" json:"setter,omitempty"`
	FeedId *v1.InternalID     `protobuf:"bytes,3,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *EnableFeedSetterRequest) Reset() {
	*x = EnableFeedSetterRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableFeedSetterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFeedSetterRequest) ProtoMessage() {}

func (x *EnableFeedSetterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFeedSetterRequest.ProtoReflect.Descriptor instead.
func (*EnableFeedSetterRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{23}
}

func (x *EnableFeedSetterRequest) GetSetterId() *v1.InternalID {
	if x != nil {
		return x.SetterId
	}
	return nil
}

func (x *EnableFeedSetterRequest) GetSetter() *v1.FeatureRequest {
	if x != nil {
		return x.Setter
	}
	return nil
}

func (x *EnableFeedSetterRequest) GetFeedId() *v1.InternalID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

type EnableFeedSetterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableFeedSetterResponse) Reset() {
	*x = EnableFeedSetterResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableFeedSetterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFeedSetterResponse) ProtoMessage() {}

func (x *EnableFeedSetterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFeedSetterResponse.ProtoReflect.Descriptor instead.
func (*EnableFeedSetterResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{24}
}

type DisableFeedSetterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetterId *v1.InternalID `protobuf:"bytes,1,opt,name=setter_id,json=setterId,proto3" json:"setter_id,omitempty"`
}

func (x *DisableFeedSetterRequest) Reset() {
	*x = DisableFeedSetterRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableFeedSetterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableFeedSetterRequest) ProtoMessage() {}

func (x *DisableFeedSetterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableFeedSetterRequest.ProtoReflect.Descriptor instead.
func (*DisableFeedSetterRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{25}
}

func (x *DisableFeedSetterRequest) GetSetterId() *v1.InternalID {
	if x != nil {
		return x.SetterId
	}
	return nil
}

type DisableFeedSetterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableFeedSetterResponse) Reset() {
	*x = DisableFeedSetterResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableFeedSetterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableFeedSetterResponse) ProtoMessage() {}

func (x *DisableFeedSetterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableFeedSetterResponse.ProtoReflect.Descriptor instead.
func (*DisableFeedSetterResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{26}
}

type EnableFeedGetterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetterId *v1.InternalID `protobuf:"bytes,1,opt,name=getter_id,json=getterId,proto3" json:"getter_id,omitempty"`
	// `PorterFeatureSummary.feed_getters`
	Getter *v1.FeatureRequest `protobuf:"bytes,2,opt,name=getter,proto3" json:"getter,omitempty"`
	FeedId *v1.InternalID     `protobuf:"bytes,3,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *EnableFeedGetterRequest) Reset() {
	*x = EnableFeedGetterRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableFeedGetterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFeedGetterRequest) ProtoMessage() {}

func (x *EnableFeedGetterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFeedGetterRequest.ProtoReflect.Descriptor instead.
func (*EnableFeedGetterRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{27}
}

func (x *EnableFeedGetterRequest) GetGetterId() *v1.InternalID {
	if x != nil {
		return x.GetterId
	}
	return nil
}

func (x *EnableFeedGetterRequest) GetGetter() *v1.FeatureRequest {
	if x != nil {
		return x.Getter
	}
	return nil
}

func (x *EnableFeedGetterRequest) GetFeedId() *v1.InternalID {
	if x != nil {
		return x.FeedId
	}
	return nil
}

type EnableFeedGetterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableFeedGetterResponse) Reset() {
	*x = EnableFeedGetterResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableFeedGetterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFeedGetterResponse) ProtoMessage() {}

func (x *EnableFeedGetterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFeedGetterResponse.ProtoReflect.Descriptor instead.
func (*EnableFeedGetterResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{28}
}

type DisableFeedGetterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetterId *v1.InternalID `protobuf:"bytes,1,opt,name=getter_id,json=getterId,proto3" json:"getter_id,omitempty"`
}

func (x *DisableFeedGetterRequest) Reset() {
	*x = DisableFeedGetterRequest{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableFeedGetterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableFeedGetterRequest) ProtoMessage() {}

func (x *DisableFeedGetterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableFeedGetterRequest.ProtoReflect.Descriptor instead.
func (*DisableFeedGetterRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{29}
}

func (x *DisableFeedGetterRequest) GetGetterId() *v1.InternalID {
	if x != nil {
		return x.GetterId
	}
	return nil
}

type DisableFeedGetterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableFeedGetterResponse) Reset() {
	*x = DisableFeedGetterResponse{}
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableFeedGetterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableFeedGetterResponse) ProtoMessage() {}

func (x *DisableFeedGetterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_porter_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableFeedGetterResponse.ProtoReflect.Descriptor instead.
func (*DisableFeedGetterResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_porter_proto_rawDescGZIP(), []int{30}
}

var File_librarian_porter_v1_porter_proto protoreflect.FileDescriptor

var file_librarian_porter_v1_porter_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x77, 0x65, 0x6c, 0x6c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb5, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0d, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x72, 0x0a, 0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x70, 0x68, 0x69, 0x72, 0x61, 0x68, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xbf, 0x01, 0x0a, 0x14,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x52, 0x0a, 0x0f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xd5, 0x01,
	0x0a, 0x14, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x40, 0x0a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x52, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x50, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c,
	0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x13,
	0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x52, 0x09, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa6, 0x01, 0x0a,
	0x21, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x22, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x2a, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x47, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x48, 0x0a, 0x10, 0x50, 0x75, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x14,
	0x50, 0x75, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x75, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x19, 0x45,
	0x78, 0x65, 0x63, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x56, 0x0a, 0x1a, 0x45, 0x78,
	0x65, 0x63, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0xb9, 0x01, 0x0a, 0x17, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x09, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x06, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x1a,
	0x0a, 0x18, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x18, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1b, 0x0a,
	0x19, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x17, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x08, 0x67, 0x65, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x06, 0x67, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x67, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x06,
	0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x51, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x09, 0x67, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x08, 0x67, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x8b, 0x0d, 0x0a, 0x16, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x0d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x08, 0x50, 0x75, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f,
	0x0a, 0x10, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x12, 0x2c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x72, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x64, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x29, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x46,
	0x65, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x59, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x75, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xaa, 0x02, 0x21, 0x54, 0x75, 0x69, 0x48, 0x75, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_librarian_porter_v1_porter_proto_rawDescOnce sync.Once
	file_librarian_porter_v1_porter_proto_rawDescData = file_librarian_porter_v1_porter_proto_rawDesc
)

func file_librarian_porter_v1_porter_proto_rawDescGZIP() []byte {
	file_librarian_porter_v1_porter_proto_rawDescOnce.Do(func() {
		file_librarian_porter_v1_porter_proto_rawDescData = protoimpl.X.CompressGZIP(file_librarian_porter_v1_porter_proto_rawDescData)
	})
	return file_librarian_porter_v1_porter_proto_rawDescData
}

var file_librarian_porter_v1_porter_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_librarian_porter_v1_porter_proto_goTypes = []any{
	(*GetPorterInformationRequest)(nil),        // 0: librarian.porter.v1.GetPorterInformationRequest
	(*GetPorterInformationResponse)(nil),       // 1: librarian.porter.v1.GetPorterInformationResponse
	(*EnablePorterRequest)(nil),                // 2: librarian.porter.v1.EnablePorterRequest
	(*EnablePorterResponse)(nil),               // 3: librarian.porter.v1.EnablePorterResponse
	(*PorterEnablesSummary)(nil),               // 4: librarian.porter.v1.PorterEnablesSummary
	(*EnableContextRequest)(nil),               // 5: librarian.porter.v1.EnableContextRequest
	(*EnableContextResponse)(nil),              // 6: librarian.porter.v1.EnableContextResponse
	(*DisableContextRequest)(nil),              // 7: librarian.porter.v1.DisableContextRequest
	(*DisableContextResponse)(nil),             // 8: librarian.porter.v1.DisableContextResponse
	(*PullAccountRequest)(nil),                 // 9: librarian.porter.v1.PullAccountRequest
	(*PullAccountResponse)(nil),                // 10: librarian.porter.v1.PullAccountResponse
	(*PullAppInfoRequest)(nil),                 // 11: librarian.porter.v1.PullAppInfoRequest
	(*PullAppInfoResponse)(nil),                // 12: librarian.porter.v1.PullAppInfoResponse
	(*PullAccountAppInfoRelationRequest)(nil),  // 13: librarian.porter.v1.PullAccountAppInfoRelationRequest
	(*PullAccountAppInfoRelationResponse)(nil), // 14: librarian.porter.v1.PullAccountAppInfoRelationResponse
	(*SearchAppInfoRequest)(nil),               // 15: librarian.porter.v1.SearchAppInfoRequest
	(*SearchAppInfoResponse)(nil),              // 16: librarian.porter.v1.SearchAppInfoResponse
	(*PullFeedRequest)(nil),                    // 17: librarian.porter.v1.PullFeedRequest
	(*PullFeedResponse)(nil),                   // 18: librarian.porter.v1.PullFeedResponse
	(*PushFeedItemsRequest)(nil),               // 19: librarian.porter.v1.PushFeedItemsRequest
	(*PushFeedItemsResponse)(nil),              // 20: librarian.porter.v1.PushFeedItemsResponse
	(*ExecFeedItemActionRequest)(nil),          // 21: librarian.porter.v1.ExecFeedItemActionRequest
	(*ExecFeedItemActionResponse)(nil),         // 22: librarian.porter.v1.ExecFeedItemActionResponse
	(*EnableFeedSetterRequest)(nil),            // 23: librarian.porter.v1.EnableFeedSetterRequest
	(*EnableFeedSetterResponse)(nil),           // 24: librarian.porter.v1.EnableFeedSetterResponse
	(*DisableFeedSetterRequest)(nil),           // 25: librarian.porter.v1.DisableFeedSetterRequest
	(*DisableFeedSetterResponse)(nil),          // 26: librarian.porter.v1.DisableFeedSetterResponse
	(*EnableFeedGetterRequest)(nil),            // 27: librarian.porter.v1.EnableFeedGetterRequest
	(*EnableFeedGetterResponse)(nil),           // 28: librarian.porter.v1.EnableFeedGetterResponse
	(*DisableFeedGetterRequest)(nil),           // 29: librarian.porter.v1.DisableFeedGetterRequest
	(*DisableFeedGetterResponse)(nil),          // 30: librarian.porter.v1.DisableFeedGetterResponse
	(*v1.PorterBinarySummary)(nil),             // 31: librarian.v1.PorterBinarySummary
	(*v1.FeatureSummary)(nil),                  // 32: librarian.v1.FeatureSummary
	(*v1.InternalID)(nil),                      // 33: librarian.v1.InternalID
	(*v1.AccountID)(nil),                       // 34: librarian.v1.AccountID
	(*v1.Account)(nil),                         // 35: librarian.v1.Account
	(*v1.AppInfoID)(nil),                       // 36: librarian.v1.AppInfoID
	(*v1.AppInfo)(nil),                         // 37: librarian.v1.AppInfo
	(v1.AccountAppRelationType)(0),             // 38: librarian.v1.AccountAppRelationType
	(*v1.FeatureRequest)(nil),                  // 39: librarian.v1.FeatureRequest
	(*v1.Feed)(nil),                            // 40: librarian.v1.Feed
	(*v1.FeedItem)(nil),                        // 41: librarian.v1.FeedItem
}
var file_librarian_porter_v1_porter_proto_depIdxs = []int32{
	31, // 0: librarian.porter.v1.GetPorterInformationResponse.binary_summary:type_name -> librarian.v1.PorterBinarySummary
	32, // 1: librarian.porter.v1.GetPorterInformationResponse.feature_summary:type_name -> librarian.v1.FeatureSummary
	4,  // 2: librarian.porter.v1.EnablePorterResponse.enables_summary:type_name -> librarian.porter.v1.PorterEnablesSummary
	33, // 3: librarian.porter.v1.PorterEnablesSummary.context_ids:type_name -> librarian.v1.InternalID
	33, // 4: librarian.porter.v1.PorterEnablesSummary.feed_setter_ids:type_name -> librarian.v1.InternalID
	33, // 5: librarian.porter.v1.PorterEnablesSummary.feed_getter_ids:type_name -> librarian.v1.InternalID
	33, // 6: librarian.porter.v1.EnableContextRequest.context_id:type_name -> librarian.v1.InternalID
	33, // 7: librarian.porter.v1.DisableContextRequest.context_id:type_name -> librarian.v1.InternalID
	34, // 8: librarian.porter.v1.PullAccountRequest.account_id:type_name -> librarian.v1.AccountID
	35, // 9: librarian.porter.v1.PullAccountResponse.account:type_name -> librarian.v1.Account
	36, // 10: librarian.porter.v1.PullAppInfoRequest.app_info_id:type_name -> librarian.v1.AppInfoID
	37, // 11: librarian.porter.v1.PullAppInfoResponse.app_info:type_name -> librarian.v1.AppInfo
	38, // 12: librarian.porter.v1.PullAccountAppInfoRelationRequest.relation_type:type_name -> librarian.v1.AccountAppRelationType
	34, // 13: librarian.porter.v1.PullAccountAppInfoRelationRequest.account_id:type_name -> librarian.v1.AccountID
	37, // 14: librarian.porter.v1.PullAccountAppInfoRelationResponse.app_infos:type_name -> librarian.v1.AppInfo
	37, // 15: librarian.porter.v1.SearchAppInfoResponse.app_infos:type_name -> librarian.v1.AppInfo
	39, // 16: librarian.porter.v1.PullFeedRequest.source:type_name -> librarian.v1.FeatureRequest
	40, // 17: librarian.porter.v1.PullFeedResponse.data:type_name -> librarian.v1.Feed
	39, // 18: librarian.porter.v1.PushFeedItemsRequest.destination:type_name -> librarian.v1.FeatureRequest
	41, // 19: librarian.porter.v1.PushFeedItemsRequest.items:type_name -> librarian.v1.FeedItem
	39, // 20: librarian.porter.v1.ExecFeedItemActionRequest.action:type_name -> librarian.v1.FeatureRequest
	41, // 21: librarian.porter.v1.ExecFeedItemActionRequest.item:type_name -> librarian.v1.FeedItem
	41, // 22: librarian.porter.v1.ExecFeedItemActionResponse.item:type_name -> librarian.v1.FeedItem
	33, // 23: librarian.porter.v1.EnableFeedSetterRequest.setter_id:type_name -> librarian.v1.InternalID
	39, // 24: librarian.porter.v1.EnableFeedSetterRequest.setter:type_name -> librarian.v1.FeatureRequest
	33, // 25: librarian.porter.v1.EnableFeedSetterRequest.feed_id:type_name -> librarian.v1.InternalID
	33, // 26: librarian.porter.v1.DisableFeedSetterRequest.setter_id:type_name -> librarian.v1.InternalID
	33, // 27: librarian.porter.v1.EnableFeedGetterRequest.getter_id:type_name -> librarian.v1.InternalID
	39, // 28: librarian.porter.v1.EnableFeedGetterRequest.getter:type_name -> librarian.v1.FeatureRequest
	33, // 29: librarian.porter.v1.EnableFeedGetterRequest.feed_id:type_name -> librarian.v1.InternalID
	33, // 30: librarian.porter.v1.DisableFeedGetterRequest.getter_id:type_name -> librarian.v1.InternalID
	0,  // 31: librarian.porter.v1.LibrarianPorterService.GetPorterInformation:input_type -> librarian.porter.v1.GetPorterInformationRequest
	2,  // 32: librarian.porter.v1.LibrarianPorterService.EnablePorter:input_type -> librarian.porter.v1.EnablePorterRequest
	5,  // 33: librarian.porter.v1.LibrarianPorterService.EnableContext:input_type -> librarian.porter.v1.EnableContextRequest
	7,  // 34: librarian.porter.v1.LibrarianPorterService.DisableContext:input_type -> librarian.porter.v1.DisableContextRequest
	9,  // 35: librarian.porter.v1.LibrarianPorterService.PullAccount:input_type -> librarian.porter.v1.PullAccountRequest
	11, // 36: librarian.porter.v1.LibrarianPorterService.PullAppInfo:input_type -> librarian.porter.v1.PullAppInfoRequest
	13, // 37: librarian.porter.v1.LibrarianPorterService.PullAccountAppInfoRelation:input_type -> librarian.porter.v1.PullAccountAppInfoRelationRequest
	15, // 38: librarian.porter.v1.LibrarianPorterService.SearchAppInfo:input_type -> librarian.porter.v1.SearchAppInfoRequest
	17, // 39: librarian.porter.v1.LibrarianPorterService.PullFeed:input_type -> librarian.porter.v1.PullFeedRequest
	21, // 40: librarian.porter.v1.LibrarianPorterService.ExecFeedItemAction:input_type -> librarian.porter.v1.ExecFeedItemActionRequest
	23, // 41: librarian.porter.v1.LibrarianPorterService.EnableFeedSetter:input_type -> librarian.porter.v1.EnableFeedSetterRequest
	25, // 42: librarian.porter.v1.LibrarianPorterService.DisableFeedSetter:input_type -> librarian.porter.v1.DisableFeedSetterRequest
	27, // 43: librarian.porter.v1.LibrarianPorterService.EnableFeedGetter:input_type -> librarian.porter.v1.EnableFeedGetterRequest
	29, // 44: librarian.porter.v1.LibrarianPorterService.DisableFeedGetter:input_type -> librarian.porter.v1.DisableFeedGetterRequest
	19, // 45: librarian.porter.v1.LibrarianPorterService.PushFeedItems:input_type -> librarian.porter.v1.PushFeedItemsRequest
	1,  // 46: librarian.porter.v1.LibrarianPorterService.GetPorterInformation:output_type -> librarian.porter.v1.GetPorterInformationResponse
	3,  // 47: librarian.porter.v1.LibrarianPorterService.EnablePorter:output_type -> librarian.porter.v1.EnablePorterResponse
	6,  // 48: librarian.porter.v1.LibrarianPorterService.EnableContext:output_type -> librarian.porter.v1.EnableContextResponse
	8,  // 49: librarian.porter.v1.LibrarianPorterService.DisableContext:output_type -> librarian.porter.v1.DisableContextResponse
	10, // 50: librarian.porter.v1.LibrarianPorterService.PullAccount:output_type -> librarian.porter.v1.PullAccountResponse
	12, // 51: librarian.porter.v1.LibrarianPorterService.PullAppInfo:output_type -> librarian.porter.v1.PullAppInfoResponse
	14, // 52: librarian.porter.v1.LibrarianPorterService.PullAccountAppInfoRelation:output_type -> librarian.porter.v1.PullAccountAppInfoRelationResponse
	16, // 53: librarian.porter.v1.LibrarianPorterService.SearchAppInfo:output_type -> librarian.porter.v1.SearchAppInfoResponse
	18, // 54: librarian.porter.v1.LibrarianPorterService.PullFeed:output_type -> librarian.porter.v1.PullFeedResponse
	22, // 55: librarian.porter.v1.LibrarianPorterService.ExecFeedItemAction:output_type -> librarian.porter.v1.ExecFeedItemActionResponse
	24, // 56: librarian.porter.v1.LibrarianPorterService.EnableFeedSetter:output_type -> librarian.porter.v1.EnableFeedSetterResponse
	26, // 57: librarian.porter.v1.LibrarianPorterService.DisableFeedSetter:output_type -> librarian.porter.v1.DisableFeedSetterResponse
	28, // 58: librarian.porter.v1.LibrarianPorterService.EnableFeedGetter:output_type -> librarian.porter.v1.EnableFeedGetterResponse
	30, // 59: librarian.porter.v1.LibrarianPorterService.DisableFeedGetter:output_type -> librarian.porter.v1.DisableFeedGetterResponse
	20, // 60: librarian.porter.v1.LibrarianPorterService.PushFeedItems:output_type -> librarian.porter.v1.PushFeedItemsResponse
	46, // [46:61] is the sub-list for method output_type
	31, // [31:46] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_librarian_porter_v1_porter_proto_init() }
func file_librarian_porter_v1_porter_proto_init() {
	if File_librarian_porter_v1_porter_proto != nil {
		return
	}
	file_librarian_porter_v1_porter_proto_msgTypes[1].OneofWrappers = []any{}
	file_librarian_porter_v1_porter_proto_msgTypes[2].OneofWrappers = []any{}
	file_librarian_porter_v1_porter_proto_msgTypes[18].OneofWrappers = []any{}
	file_librarian_porter_v1_porter_proto_msgTypes[22].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_librarian_porter_v1_porter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_librarian_porter_v1_porter_proto_goTypes,
		DependencyIndexes: file_librarian_porter_v1_porter_proto_depIdxs,
		MessageInfos:      file_librarian_porter_v1_porter_proto_msgTypes,
	}.Build()
	File_librarian_porter_v1_porter_proto = out.File
	file_librarian_porter_v1_porter_proto_rawDesc = nil
	file_librarian_porter_v1_porter_proto_goTypes = nil
	file_librarian_porter_v1_porter_proto_depIdxs = nil
}
