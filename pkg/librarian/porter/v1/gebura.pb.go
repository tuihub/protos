// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: librarian/porter/v1/gebura.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppType int32

const (
	AppType_APP_TYPE_UNSPECIFIED AppType = 0
	AppType_APP_TYPE_GAME        AppType = 1
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "APP_TYPE_UNSPECIFIED",
		1: "APP_TYPE_GAME",
	}
	AppType_value = map[string]int32{
		"APP_TYPE_UNSPECIFIED": 0,
		"APP_TYPE_GAME":        1,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_librarian_porter_v1_gebura_proto_enumTypes[0].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_librarian_porter_v1_gebura_proto_enumTypes[0]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{0}
}

type SearchAppInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameLike      string                 `protobuf:"bytes,1,opt,name=name_like,json=nameLike,proto3" json:"name_like,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAppInfoRequest) Reset() {
	*x = SearchAppInfoRequest{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppInfoRequest) ProtoMessage() {}

func (x *SearchAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppInfoRequest.ProtoReflect.Descriptor instead.
func (*SearchAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{0}
}

func (x *SearchAppInfoRequest) GetNameLike() string {
	if x != nil {
		return x.NameLike
	}
	return ""
}

type SearchAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfos      []*AppInfo             `protobuf:"bytes,1,rep,name=app_infos,json=appInfos,proto3" json:"app_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAppInfoResponse) Reset() {
	*x = SearchAppInfoResponse{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAppInfoResponse) ProtoMessage() {}

func (x *SearchAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAppInfoResponse.ProtoReflect.Descriptor instead.
func (*SearchAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{1}
}

func (x *SearchAppInfoResponse) GetAppInfos() []*AppInfo {
	if x != nil {
		return x.AppInfos
	}
	return nil
}

type GetAppInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// WellKnownAppInfoSource
	Source        string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	SourceAppId   string `protobuf:"bytes,2,opt,name=source_app_id,json=sourceAppId,proto3" json:"source_app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppInfoRequest) Reset() {
	*x = GetAppInfoRequest{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppInfoRequest) ProtoMessage() {}

func (x *GetAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppInfoRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetAppInfoRequest) GetSourceAppId() string {
	if x != nil {
		return x.SourceAppId
	}
	return ""
}

type GetAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfo       *AppInfo               `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppInfoResponse) Reset() {
	*x = GetAppInfoResponse{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppInfoResponse) ProtoMessage() {}

func (x *GetAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{3}
}

func (x *GetAppInfoResponse) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type ParseRawAppInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// WellKnownAppInfoSource
	Source        string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	SourceAppId   string `protobuf:"bytes,2,opt,name=source_app_id,json=sourceAppId,proto3" json:"source_app_id,omitempty"`
	RawDataJson   string `protobuf:"bytes,3,opt,name=raw_data_json,json=rawDataJson,proto3" json:"raw_data_json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseRawAppInfoRequest) Reset() {
	*x = ParseRawAppInfoRequest{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseRawAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRawAppInfoRequest) ProtoMessage() {}

func (x *ParseRawAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRawAppInfoRequest.ProtoReflect.Descriptor instead.
func (*ParseRawAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{4}
}

func (x *ParseRawAppInfoRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ParseRawAppInfoRequest) GetSourceAppId() string {
	if x != nil {
		return x.SourceAppId
	}
	return ""
}

func (x *ParseRawAppInfoRequest) GetRawDataJson() string {
	if x != nil {
		return x.RawDataJson
	}
	return ""
}

type ParseRawAppInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppInfo       *AppInfo               `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseRawAppInfoResponse) Reset() {
	*x = ParseRawAppInfoResponse{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseRawAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseRawAppInfoResponse) ProtoMessage() {}

func (x *ParseRawAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseRawAppInfoResponse.ProtoReflect.Descriptor instead.
func (*ParseRawAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{5}
}

func (x *ParseRawAppInfoResponse) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type AppInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// WellKnownAppInfoSource
	Source      string  `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	SourceAppId string  `protobuf:"bytes,2,opt,name=source_app_id,json=sourceAppId,proto3" json:"source_app_id,omitempty"`
	SourceUrl   *string `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3,oneof" json:"source_url,omitempty"`
	// original data in json format
	RawDataJson      string          `protobuf:"bytes,4,opt,name=raw_data_json,json=rawDataJson,proto3" json:"raw_data_json,omitempty"`
	Details          *AppInfoDetails `protobuf:"bytes,5,opt,name=details,proto3,oneof" json:"details,omitempty"`
	Name             string          `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Type             AppType         `protobuf:"varint,7,opt,name=type,proto3,enum=librarian.porter.v1.AppType" json:"type,omitempty"`
	ShortDescription string          `protobuf:"bytes,8,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	IconImageUrl     string          `protobuf:"bytes,9,opt,name=icon_image_url,json=iconImageUrl,proto3" json:"icon_image_url,omitempty"`
	// must be horizontal, usually 16:9
	BackgroundImageUrl string `protobuf:"bytes,10,opt,name=background_image_url,json=backgroundImageUrl,proto3" json:"background_image_url,omitempty"`
	// must be vertical, usually 3:4
	CoverImageUrl string   `protobuf:"bytes,11,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	Tags          []string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	AltNames      []string `protobuf:"bytes,13,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{6}
}

func (x *AppInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AppInfo) GetSourceAppId() string {
	if x != nil {
		return x.SourceAppId
	}
	return ""
}

func (x *AppInfo) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *AppInfo) GetRawDataJson() string {
	if x != nil {
		return x.RawDataJson
	}
	return ""
}

func (x *AppInfo) GetDetails() *AppInfoDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_APP_TYPE_UNSPECIFIED
}

func (x *AppInfo) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *AppInfo) GetIconImageUrl() string {
	if x != nil {
		return x.IconImageUrl
	}
	return ""
}

func (x *AppInfo) GetBackgroundImageUrl() string {
	if x != nil {
		return x.BackgroundImageUrl
	}
	return ""
}

func (x *AppInfo) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *AppInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AppInfo) GetAltNames() []string {
	if x != nil {
		return x.AltNames
	}
	return nil
}

type AppInfoDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	ReleaseDate   string                 `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Developer     string                 `protobuf:"bytes,3,opt,name=developer,proto3" json:"developer,omitempty"`
	Publisher     string                 `protobuf:"bytes,4,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Version       string                 `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	ImageUrls     []string               `protobuf:"bytes,6,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInfoDetails) Reset() {
	*x = AppInfoDetails{}
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoDetails) ProtoMessage() {}

func (x *AppInfoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_librarian_porter_v1_gebura_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoDetails.ProtoReflect.Descriptor instead.
func (*AppInfoDetails) Descriptor() ([]byte, []int) {
	return file_librarian_porter_v1_gebura_proto_rawDescGZIP(), []int{7}
}

func (x *AppInfoDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AppInfoDetails) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *AppInfoDetails) GetDeveloper() string {
	if x != nil {
		return x.Developer
	}
	return ""
}

func (x *AppInfoDetails) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *AppInfoDetails) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppInfoDetails) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

var File_librarian_porter_v1_gebura_proto protoreflect.FileDescriptor

var file_librarian_porter_v1_gebura_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x62, 0x75, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0x33, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x52, 0x0a, 0x15,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x4f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x78, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x61, 0x77, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x17, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x52, 0x61, 0x77, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x90,
	0x04, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61,
	0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x42,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x2a, 0x36,
	0x0a, 0x07, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x50, 0x50,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x42, 0x59, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x69, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x2f, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xaa, 0x02, 0x21,
	0x54, 0x75, 0x69, 0x48, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_librarian_porter_v1_gebura_proto_rawDescOnce sync.Once
	file_librarian_porter_v1_gebura_proto_rawDescData []byte
)

func file_librarian_porter_v1_gebura_proto_rawDescGZIP() []byte {
	file_librarian_porter_v1_gebura_proto_rawDescOnce.Do(func() {
		file_librarian_porter_v1_gebura_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_librarian_porter_v1_gebura_proto_rawDesc), len(file_librarian_porter_v1_gebura_proto_rawDesc)))
	})
	return file_librarian_porter_v1_gebura_proto_rawDescData
}

var file_librarian_porter_v1_gebura_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_librarian_porter_v1_gebura_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_librarian_porter_v1_gebura_proto_goTypes = []any{
	(AppType)(0),                    // 0: librarian.porter.v1.AppType
	(*SearchAppInfoRequest)(nil),    // 1: librarian.porter.v1.SearchAppInfoRequest
	(*SearchAppInfoResponse)(nil),   // 2: librarian.porter.v1.SearchAppInfoResponse
	(*GetAppInfoRequest)(nil),       // 3: librarian.porter.v1.GetAppInfoRequest
	(*GetAppInfoResponse)(nil),      // 4: librarian.porter.v1.GetAppInfoResponse
	(*ParseRawAppInfoRequest)(nil),  // 5: librarian.porter.v1.ParseRawAppInfoRequest
	(*ParseRawAppInfoResponse)(nil), // 6: librarian.porter.v1.ParseRawAppInfoResponse
	(*AppInfo)(nil),                 // 7: librarian.porter.v1.AppInfo
	(*AppInfoDetails)(nil),          // 8: librarian.porter.v1.AppInfoDetails
}
var file_librarian_porter_v1_gebura_proto_depIdxs = []int32{
	7, // 0: librarian.porter.v1.SearchAppInfoResponse.app_infos:type_name -> librarian.porter.v1.AppInfo
	7, // 1: librarian.porter.v1.GetAppInfoResponse.app_info:type_name -> librarian.porter.v1.AppInfo
	7, // 2: librarian.porter.v1.ParseRawAppInfoResponse.app_info:type_name -> librarian.porter.v1.AppInfo
	8, // 3: librarian.porter.v1.AppInfo.details:type_name -> librarian.porter.v1.AppInfoDetails
	0, // 4: librarian.porter.v1.AppInfo.type:type_name -> librarian.porter.v1.AppType
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_librarian_porter_v1_gebura_proto_init() }
func file_librarian_porter_v1_gebura_proto_init() {
	if File_librarian_porter_v1_gebura_proto != nil {
		return
	}
	file_librarian_porter_v1_gebura_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_librarian_porter_v1_gebura_proto_rawDesc), len(file_librarian_porter_v1_gebura_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_librarian_porter_v1_gebura_proto_goTypes,
		DependencyIndexes: file_librarian_porter_v1_gebura_proto_depIdxs,
		EnumInfos:         file_librarian_porter_v1_gebura_proto_enumTypes,
		MessageInfos:      file_librarian_porter_v1_gebura_proto_msgTypes,
	}.Build()
	File_librarian_porter_v1_gebura_proto = out.File
	file_librarian_porter_v1_gebura_proto_goTypes = nil
	file_librarian_porter_v1_gebura_proto_depIdxs = nil
}
