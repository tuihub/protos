// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: librarian/searcher/v1/searcher.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DescribeIDRequest_DescribeMode int32

const (
	DescribeIDRequest_DESCRIBE_MODE_UNSPECIFIED DescribeIDRequest_DescribeMode = 0
	DescribeIDRequest_DESCRIBE_MODE_OVERRIDE    DescribeIDRequest_DescribeMode = 1
	DescribeIDRequest_DESCRIBE_MODE_APPEND      DescribeIDRequest_DescribeMode = 2
)

var DescribeIDRequest_DescribeMode_name = map[int32]string{
	0: "DESCRIBE_MODE_UNSPECIFIED",
	1: "DESCRIBE_MODE_OVERRIDE",
	2: "DESCRIBE_MODE_APPEND",
}

var DescribeIDRequest_DescribeMode_value = map[string]int32{
	"DESCRIBE_MODE_UNSPECIFIED": 0,
	"DESCRIBE_MODE_OVERRIDE":    1,
	"DESCRIBE_MODE_APPEND":      2,
}

func (x DescribeIDRequest_DescribeMode) String() string {
	return proto.EnumName(DescribeIDRequest_DescribeMode_name, int32(x))
}

func (DescribeIDRequest_DescribeMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{2, 0}
}

type NewIDRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewIDRequest) Reset()         { *m = NewIDRequest{} }
func (m *NewIDRequest) String() string { return proto.CompactTextString(m) }
func (*NewIDRequest) ProtoMessage()    {}
func (*NewIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{0}
}
func (m *NewIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewIDRequest.Merge(m, src)
}
func (m *NewIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *NewIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewIDRequest proto.InternalMessageInfo

type NewIDResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewIDResponse) Reset()         { *m = NewIDResponse{} }
func (m *NewIDResponse) String() string { return proto.CompactTextString(m) }
func (*NewIDResponse) ProtoMessage()    {}
func (*NewIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{1}
}
func (m *NewIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NewIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NewIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NewIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewIDResponse.Merge(m, src)
}
func (m *NewIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *NewIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewIDResponse proto.InternalMessageInfo

func (m *NewIDResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DescribeIDRequest struct {
	Id                   int64                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Mode                 DescribeIDRequest_DescribeMode `protobuf:"varint,3,opt,name=mode,proto3,enum=librarian.searcher.v1.DescribeIDRequest_DescribeMode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DescribeIDRequest) Reset()         { *m = DescribeIDRequest{} }
func (m *DescribeIDRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeIDRequest) ProtoMessage()    {}
func (*DescribeIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{2}
}
func (m *DescribeIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DescribeIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DescribeIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DescribeIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeIDRequest.Merge(m, src)
}
func (m *DescribeIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *DescribeIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeIDRequest proto.InternalMessageInfo

func (m *DescribeIDRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DescribeIDRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeIDRequest) GetMode() DescribeIDRequest_DescribeMode {
	if m != nil {
		return m.Mode
	}
	return DescribeIDRequest_DESCRIBE_MODE_UNSPECIFIED
}

type DescribeIDResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeIDResponse) Reset()         { *m = DescribeIDResponse{} }
func (m *DescribeIDResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeIDResponse) ProtoMessage()    {}
func (*DescribeIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{3}
}
func (m *DescribeIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DescribeIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DescribeIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DescribeIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeIDResponse.Merge(m, src)
}
func (m *DescribeIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *DescribeIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeIDResponse proto.InternalMessageInfo

type SearchIDRequest struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchIDRequest) Reset()         { *m = SearchIDRequest{} }
func (m *SearchIDRequest) String() string { return proto.CompactTextString(m) }
func (*SearchIDRequest) ProtoMessage()    {}
func (*SearchIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{4}
}
func (m *SearchIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIDRequest.Merge(m, src)
}
func (m *SearchIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *SearchIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIDRequest proto.InternalMessageInfo

func (m *SearchIDRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type SearchIDResponse struct {
	Result               []*SearchIDResponse_Result `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SearchIDResponse) Reset()         { *m = SearchIDResponse{} }
func (m *SearchIDResponse) String() string { return proto.CompactTextString(m) }
func (*SearchIDResponse) ProtoMessage()    {}
func (*SearchIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{5}
}
func (m *SearchIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIDResponse.Merge(m, src)
}
func (m *SearchIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *SearchIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIDResponse proto.InternalMessageInfo

func (m *SearchIDResponse) GetResult() []*SearchIDResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type SearchIDResponse_Result struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Rank                 int64    `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchIDResponse_Result) Reset()         { *m = SearchIDResponse_Result{} }
func (m *SearchIDResponse_Result) String() string { return proto.CompactTextString(m) }
func (*SearchIDResponse_Result) ProtoMessage()    {}
func (*SearchIDResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_acc17c960b440390, []int{5, 0}
}
func (m *SearchIDResponse_Result) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchIDResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchIDResponse_Result.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchIDResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIDResponse_Result.Merge(m, src)
}
func (m *SearchIDResponse_Result) XXX_Size() int {
	return m.Size()
}
func (m *SearchIDResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIDResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIDResponse_Result proto.InternalMessageInfo

func (m *SearchIDResponse_Result) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SearchIDResponse_Result) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func init() {
	proto.RegisterEnum("librarian.searcher.v1.DescribeIDRequest_DescribeMode", DescribeIDRequest_DescribeMode_name, DescribeIDRequest_DescribeMode_value)
	proto.RegisterType((*NewIDRequest)(nil), "librarian.searcher.v1.NewIDRequest")
	proto.RegisterType((*NewIDResponse)(nil), "librarian.searcher.v1.NewIDResponse")
	proto.RegisterType((*DescribeIDRequest)(nil), "librarian.searcher.v1.DescribeIDRequest")
	proto.RegisterType((*DescribeIDResponse)(nil), "librarian.searcher.v1.DescribeIDResponse")
	proto.RegisterType((*SearchIDRequest)(nil), "librarian.searcher.v1.SearchIDRequest")
	proto.RegisterType((*SearchIDResponse)(nil), "librarian.searcher.v1.SearchIDResponse")
	proto.RegisterType((*SearchIDResponse_Result)(nil), "librarian.searcher.v1.SearchIDResponse.Result")
}

func init() {
	proto.RegisterFile("librarian/searcher/v1/searcher.proto", fileDescriptor_acc17c960b440390)
}

var fileDescriptor_acc17c960b440390 = []byte{
	// 476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xbb, 0x4e, 0x09, 0x74, 0x5a, 0x42, 0x58, 0x15, 0x64, 0x22, 0x11, 0x2c, 0xb7, 0xa2,
	0x46, 0xa0, 0x8d, 0x12, 0xc4, 0x89, 0x13, 0xad, 0xb7, 0xc2, 0x12, 0x4d, 0xa3, 0x35, 0xf4, 0x00,
	0x87, 0xc8, 0x1f, 0x2b, 0xb2, 0x6a, 0x9b, 0x0d, 0x6b, 0x3b, 0x15, 0x6f, 0xc0, 0x23, 0xf0, 0x0c,
	0x1c, 0x78, 0x0e, 0x8e, 0x3c, 0x02, 0x0a, 0xcf, 0xc0, 0x1d, 0xb1, 0x71, 0x1c, 0xb7, 0x21, 0x90,
	0xdb, 0xee, 0xcc, 0x7f, 0x76, 0x66, 0x7f, 0x33, 0x03, 0xbb, 0x67, 0x22, 0x54, 0x81, 0x12, 0xc1,
	0xb0, 0x95, 0xf0, 0x40, 0x45, 0x03, 0xae, 0x5a, 0xe3, 0x76, 0x71, 0x26, 0x23, 0x25, 0x53, 0x89,
	0xef, 0x14, 0x2a, 0x52, 0x78, 0xc6, 0x6d, 0xbb, 0x06, 0x5b, 0x5d, 0x7e, 0xe1, 0xb9, 0x8c, 0x7f,
	0xc8, 0x78, 0x92, 0xda, 0x0f, 0xe0, 0x66, 0x7e, 0x4f, 0x46, 0x72, 0x98, 0x70, 0x5c, 0x03, 0x43,
	0xc4, 0x26, 0xb2, 0x90, 0x53, 0x61, 0x86, 0x88, 0xed, 0x5f, 0x08, 0x6e, 0xbb, 0x3c, 0x89, 0x94,
	0x08, 0x79, 0x11, 0x76, 0x55, 0x85, 0x2d, 0xd8, 0x8c, 0xb5, 0x68, 0x94, 0x0a, 0x39, 0x34, 0x0d,
	0x0b, 0x39, 0x1b, 0xac, 0x6c, 0xc2, 0x1e, 0xac, 0x9f, 0xcb, 0x98, 0x9b, 0x15, 0x0b, 0x39, 0xb5,
	0xce, 0x33, 0xf2, 0xd7, 0xf2, 0xc8, 0x42, 0xa6, 0xc2, 0x72, 0x24, 0x63, 0xce, 0xf4, 0x13, 0x76,
	0x04, 0x5b, 0x65, 0x2b, 0xbe, 0x0f, 0xf7, 0x5c, 0xea, 0x1f, 0x30, 0x6f, 0x9f, 0xf6, 0x8f, 0x8e,
	0x5d, 0xda, 0x7f, 0xd3, 0xf5, 0x7b, 0xf4, 0xc0, 0x3b, 0xf4, 0xa8, 0x5b, 0x5f, 0xc3, 0x0d, 0xb8,
	0x7b, 0xd9, 0x7d, 0x7c, 0x42, 0x19, 0xf3, 0x5c, 0x5a, 0x47, 0xd8, 0x84, 0xed, 0xcb, 0xbe, 0x17,
	0xbd, 0x1e, 0xed, 0xba, 0x75, 0xc3, 0xde, 0x06, 0x5c, 0x2e, 0x66, 0x4a, 0xc7, 0x7e, 0x0c, 0xb7,
	0x7c, 0x5d, 0xee, 0x1c, 0x85, 0x09, 0xd7, 0x4f, 0xf9, 0xc7, 0x0b, 0xa9, 0xa6, 0x3c, 0x36, 0xd8,
	0xec, 0x6a, 0x7f, 0x42, 0x50, 0x9f, 0xab, 0x73, 0xbe, 0x87, 0x50, 0x55, 0x3c, 0xc9, 0xce, 0x52,
	0x13, 0x59, 0x15, 0x67, 0xb3, 0x43, 0x96, 0x90, 0xb8, 0x1a, 0x48, 0x98, 0x8e, 0x62, 0x79, 0x74,
	0xe3, 0x09, 0x54, 0xa7, 0x96, 0x85, 0x5e, 0x60, 0x58, 0x57, 0xc1, 0xf0, 0x54, 0x37, 0xa1, 0xc2,
	0xf4, 0xb9, 0xf3, 0xd5, 0x00, 0xf3, 0xd5, 0x2c, 0x8f, 0x9f, 0xa7, 0xf1, 0xb9, 0x1a, 0x8b, 0x88,
	0x63, 0x06, 0xd7, 0xf4, 0x0c, 0xe0, 0x9d, 0x25, 0xb5, 0x94, 0x27, 0xa6, 0xb1, 0xfb, 0x6f, 0x51,
	0xfe, 0xcd, 0x00, 0x60, 0x8e, 0x0f, 0x3b, 0xab, 0xb6, 0xbb, 0xf1, 0x68, 0x05, 0x65, 0x9e, 0xe2,
	0x1d, 0xdc, 0x98, 0x41, 0xc2, 0x0f, 0xff, 0x4b, 0x71, 0xfa, 0xfc, 0xde, 0x8a, 0xb4, 0xf7, 0xfb,
	0xdf, 0x26, 0x4d, 0xf4, 0x7d, 0xd2, 0x44, 0x3f, 0x26, 0x4d, 0xf4, 0xf9, 0x67, 0x73, 0xed, 0xed,
	0xde, 0x7b, 0x91, 0x0e, 0xb2, 0x90, 0x44, 0xf2, 0xbc, 0x95, 0x66, 0x62, 0x90, 0x85, 0xad, 0xc5,
	0x45, 0x7c, 0x3e, 0x6e, 0x7f, 0x31, 0x76, 0x5e, 0x67, 0xe2, 0x65, 0x16, 0x92, 0xde, 0x9f, 0x45,
	0x4c, 0x48, 0xc1, 0x9d, 0xcc, 0xc0, 0x93, 0x93, 0x76, 0x58, 0xd5, 0x6b, 0xfa, 0xf4, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5d, 0xce, 0x55, 0xaf, 0xce, 0x03, 0x00, 0x00,
}

func (m *NewIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *NewIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NewIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NewIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSearcher(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DescribeIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DescribeIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DescribeIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Mode != 0 {
		i = encodeVarintSearcher(dAtA, i, uint64(m.Mode))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintSearcher(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintSearcher(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DescribeIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DescribeIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DescribeIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *SearchIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Keyword) > 0 {
		i -= len(m.Keyword)
		copy(dAtA[i:], m.Keyword)
		i = encodeVarintSearcher(dAtA, i, uint64(len(m.Keyword)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Result) > 0 {
		for iNdEx := len(m.Result) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Result[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSearcher(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *SearchIDResponse_Result) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchIDResponse_Result) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchIDResponse_Result) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Rank != 0 {
		i = encodeVarintSearcher(dAtA, i, uint64(m.Rank))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintSearcher(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSearcher(dAtA []byte, offset int, v uint64) int {
	offset -= sovSearcher(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NewIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NewIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovSearcher(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DescribeIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovSearcher(uint64(m.Id))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovSearcher(uint64(l))
	}
	if m.Mode != 0 {
		n += 1 + sovSearcher(uint64(m.Mode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DescribeIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Keyword)
	if l > 0 {
		n += 1 + l + sovSearcher(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Result) > 0 {
		for _, e := range m.Result {
			l = e.Size()
			n += 1 + l + sovSearcher(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchIDResponse_Result) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovSearcher(uint64(m.Id))
	}
	if m.Rank != 0 {
		n += 1 + sovSearcher(uint64(m.Rank))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSearcher(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSearcher(x uint64) (n int) {
	return sovSearcher(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NewIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NewIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NewIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NewIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DescribeIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DescribeIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DescribeIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSearcher
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSearcher
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mode", wireType)
			}
			m.Mode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mode |= DescribeIDRequest_DescribeMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DescribeIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DescribeIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DescribeIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keyword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSearcher
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSearcher
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keyword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSearcher
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSearcher
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result = append(m.Result, &SearchIDResponse_Result{})
			if err := m.Result[len(m.Result)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchIDResponse_Result) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Result: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Result: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rank", wireType)
			}
			m.Rank = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rank |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSearcher(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSearcher
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSearcher(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSearcher
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSearcher
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSearcher
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSearcher
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSearcher
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSearcher        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSearcher          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSearcher = fmt.Errorf("proto: unexpected end of group")
)
