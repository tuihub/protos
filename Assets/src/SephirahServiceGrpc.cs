// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: librarian/sephirah/v1/sephirah/sephirah_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Librarian.Sephirah.V1.Sephirah {
  /// <summary>
  ///
  /// Sephirah contains the core logic and currently divided into the following modules:
  /// 1. `Tiphereth` handles account data and provides permission verification
  /// 2. `Gebura` handles application data
  /// 3. `Binah` handles file transfer
  /// 4. `Yesod` handles feed data
  /// 5. `Netzach` handles notifications
  /// </summary>
  public static partial class LibrarianSephirahService
  {
    static readonly string __ServiceName = "librarian.sephirah.v1.sephirah.LibrarianSephirahService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetServerInformationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetServerInformationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListenServerEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListenServerEventResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest> __Marshaller_librarian_sephirah_v1_sephirah_RefreshTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse> __Marshaller_librarian_sephirah_v1_sephirah_RefreshTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetUserRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetUserResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest> __Marshaller_librarian_sephirah_v1_sephirah_RegisterUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse> __Marshaller_librarian_sephirah_v1_sephirah_RegisterUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest> __Marshaller_librarian_sephirah_v1_sephirah_RegisterDeviceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse> __Marshaller_librarian_sephirah_v1_sephirah_RegisterDeviceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListUserSessionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListUserSessionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest> __Marshaller_librarian_sephirah_v1_sephirah_DeleteUserSessionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse> __Marshaller_librarian_sephirah_v1_sephirah_DeleteUserSessionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest> __Marshaller_librarian_sephirah_v1_sephirah_LinkAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse> __Marshaller_librarian_sephirah_v1_sephirah_LinkAccountResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest> __Marshaller_librarian_sephirah_v1_sephirah_UnLinkAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse> __Marshaller_librarian_sephirah_v1_sephirah_UnLinkAccountResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListLinkAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListLinkAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListPorterDigestsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListPorterDigestsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreatePorterContextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreatePorterContextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListPorterContextsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListPorterContextsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdatePorterContextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdatePorterContextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetStorageCapacityUsageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetStorageCapacityUsageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_UploadFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_UploadFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_DownloadFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_DownloadFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_SimpleUploadFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_SimpleUploadFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_SimpleDownloadFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_SimpleDownloadFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest> __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse> __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_PresignedDownloadFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_PresignedDownloadFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest> __Marshaller_librarian_sephirah_v1_sephirah_UploadImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse> __Marshaller_librarian_sephirah_v1_sephirah_UploadImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListImagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListImagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest> __Marshaller_librarian_sephirah_v1_sephirah_SearchImagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse> __Marshaller_librarian_sephirah_v1_sephirah_SearchImagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetImageRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetImageResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest> __Marshaller_librarian_sephirah_v1_sephirah_DownloadImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse> __Marshaller_librarian_sephirah_v1_sephirah_DownloadImageResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest> __Marshaller_librarian_sephirah_v1_sephirah_SearchStoreAppsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse> __Marshaller_librarian_sephirah_v1_sephirah_SearchStoreAppsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetStoreAppSummaryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetStoreAppSummaryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest> __Marshaller_librarian_sephirah_v1_sephirah_AcquireStoreAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse> __Marshaller_librarian_sephirah_v1_sephirah_AcquireStoreAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinariesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinariesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinaryFilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinaryFilesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest> __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppBinaryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse> __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppBinaryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppSaveFilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppSaveFilesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppSaveFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppSaveFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest> __Marshaller_librarian_sephirah_v1_sephirah_SearchAppInfosRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse> __Marshaller_librarian_sephirah_v1_sephirah_SearchAppInfosResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListAppsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListAppsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest> __Marshaller_librarian_sephirah_v1_sephirah_BatchCreateAppRunTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse> __Marshaller_librarian_sephirah_v1_sephirah_BatchCreateAppRunTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest> __Marshaller_librarian_sephirah_v1_sephirah_SumAppRunTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse> __Marshaller_librarian_sephirah_v1_sephirah_SumAppRunTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListAppRunTimesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListAppRunTimesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest> __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppRunTimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse> __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppRunTimeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_UploadAppSaveFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_UploadAppSaveFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_DownloadAppSaveFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_DownloadAppSaveFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListAppSaveFilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListAppSaveFilesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppSaveFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppSaveFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_PinAppSaveFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_PinAppSaveFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest> __Marshaller_librarian_sephirah_v1_sephirah_UnpinAppSaveFileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse> __Marshaller_librarian_sephirah_v1_sephirah_UnpinAppSaveFileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetAppSaveFileCapacityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetAppSaveFileCapacityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest> __Marshaller_librarian_sephirah_v1_sephirah_SetAppSaveFileCapacityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse> __Marshaller_librarian_sephirah_v1_sephirah_SetAppSaveFileCapacityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListAppCategoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListAppCategoriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateAppCategoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateAppCategoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppCategoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppCategoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest> __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppCategoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse> __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppCategoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyTargetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyTargetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyTargetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyTargetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyTargetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyTargetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyFlowResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyFlowResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyFlowsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyFlowsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListSystemNotificationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListSystemNotificationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateSystemNotificationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateSystemNotificationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedActionSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedActionSetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedActionSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedActionSetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedActionSetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedActionSetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedCategoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedCategoriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedPlatformsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedPlatformsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetFeedItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetFeedItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest> __Marshaller_librarian_sephirah_v1_sephirah_GetBatchFeedItemsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse> __Marshaller_librarian_sephirah_v1_sephirah_GetBatchFeedItemsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest> __Marshaller_librarian_sephirah_v1_sephirah_ReadFeedItemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse> __Marshaller_librarian_sephirah_v1_sephirah_ReadFeedItemResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest> __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedItemCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse> __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedItemCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest> __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedItemCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse> __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedItemCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemCollectionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemCollectionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest> __Marshaller_librarian_sephirah_v1_sephirah_AddFeedItemToCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse> __Marshaller_librarian_sephirah_v1_sephirah_AddFeedItemToCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest> __Marshaller_librarian_sephirah_v1_sephirah_RemoveFeedItemFromCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse> __Marshaller_librarian_sephirah_v1_sephirah_RemoveFeedItemFromCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsInCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse> __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsInCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest, global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse> __Method_GetServerInformation = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest, global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServerInformation",
        __Marshaller_librarian_sephirah_v1_sephirah_GetServerInformationRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetServerInformationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest, global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse> __Method_ListenServerEvent = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest, global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListenServerEvent",
        __Marshaller_librarian_sephirah_v1_sephirah_ListenServerEventRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListenServerEventResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest, global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse> __Method_GetToken = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest, global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetToken",
        __Marshaller_librarian_sephirah_v1_sephirah_GetTokenRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetTokenResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest, global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse> __Method_RefreshToken = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest, global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RefreshToken",
        __Marshaller_librarian_sephirah_v1_sephirah_RefreshTokenRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_RefreshTokenResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetUserRequest, global::Librarian.Sephirah.V1.Sephirah.GetUserResponse> __Method_GetUser = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetUserRequest, global::Librarian.Sephirah.V1.Sephirah.GetUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUser",
        __Marshaller_librarian_sephirah_v1_sephirah_GetUserRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest, global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse> __Method_RegisterUser = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest, global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterUser",
        __Marshaller_librarian_sephirah_v1_sephirah_RegisterUserRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_RegisterUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse> __Method_UpdateUser = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUser",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateUserRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest, global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse> __Method_RegisterDevice = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest, global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterDevice",
        __Marshaller_librarian_sephirah_v1_sephirah_RegisterDeviceRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_RegisterDeviceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest, global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse> __Method_ListUserSessions = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest, global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUserSessions",
        __Marshaller_librarian_sephirah_v1_sephirah_ListUserSessionsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListUserSessionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse> __Method_DeleteUserSession = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUserSession",
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteUserSessionRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteUserSessionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest, global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse> __Method_LinkAccount = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest, global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LinkAccount",
        __Marshaller_librarian_sephirah_v1_sephirah_LinkAccountRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_LinkAccountResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest, global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse> __Method_UnLinkAccount = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest, global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnLinkAccount",
        __Marshaller_librarian_sephirah_v1_sephirah_UnLinkAccountRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UnLinkAccountResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest, global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse> __Method_ListLinkAccounts = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest, global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLinkAccounts",
        __Marshaller_librarian_sephirah_v1_sephirah_ListLinkAccountsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListLinkAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest, global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse> __Method_ListPorterDigests = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest, global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPorterDigests",
        __Marshaller_librarian_sephirah_v1_sephirah_ListPorterDigestsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListPorterDigestsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest, global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse> __Method_CreatePorterContext = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest, global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePorterContext",
        __Marshaller_librarian_sephirah_v1_sephirah_CreatePorterContextRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreatePorterContextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest, global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse> __Method_ListPorterContexts = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest, global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPorterContexts",
        __Marshaller_librarian_sephirah_v1_sephirah_ListPorterContextsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListPorterContextsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest, global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse> __Method_UpdatePorterContext = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest, global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePorterContext",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdatePorterContextRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdatePorterContextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest, global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse> __Method_GetStorageCapacityUsage = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest, global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStorageCapacityUsage",
        __Marshaller_librarian_sephirah_v1_sephirah_GetStorageCapacityUsageRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetStorageCapacityUsageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse> __Method_UploadFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "UploadFile",
        __Marshaller_librarian_sephirah_v1_sephirah_UploadFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UploadFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse> __Method_DownloadFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "DownloadFile",
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse> __Method_SimpleUploadFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SimpleUploadFile",
        __Marshaller_librarian_sephirah_v1_sephirah_SimpleUploadFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SimpleUploadFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse> __Method_SimpleDownloadFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SimpleDownloadFile",
        __Marshaller_librarian_sephirah_v1_sephirah_SimpleDownloadFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SimpleDownloadFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse> __Method_PresignedUploadFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PresignedUploadFile",
        __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse> __Method_PresignedUploadFileStatus = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PresignedUploadFileStatus",
        __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileStatusRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_PresignedUploadFileStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse> __Method_PresignedDownloadFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PresignedDownloadFile",
        __Marshaller_librarian_sephirah_v1_sephirah_PresignedDownloadFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_PresignedDownloadFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest, global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse> __Method_UploadImage = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest, global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadImage",
        __Marshaller_librarian_sephirah_v1_sephirah_UploadImageRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UploadImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse> __Method_UpdateImage = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateImage",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateImageRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest, global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse> __Method_ListImages = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest, global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListImages",
        __Marshaller_librarian_sephirah_v1_sephirah_ListImagesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListImagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest, global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse> __Method_SearchImages = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest, global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchImages",
        __Marshaller_librarian_sephirah_v1_sephirah_SearchImagesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SearchImagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetImageRequest, global::Librarian.Sephirah.V1.Sephirah.GetImageResponse> __Method_GetImage = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetImageRequest, global::Librarian.Sephirah.V1.Sephirah.GetImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetImage",
        __Marshaller_librarian_sephirah_v1_sephirah_GetImageRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse> __Method_DownloadImage = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadImage",
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadImageRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadImageResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest, global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse> __Method_SearchStoreApps = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest, global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchStoreApps",
        __Marshaller_librarian_sephirah_v1_sephirah_SearchStoreAppsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SearchStoreAppsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest, global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse> __Method_GetStoreAppSummary = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest, global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStoreAppSummary",
        __Marshaller_librarian_sephirah_v1_sephirah_GetStoreAppSummaryRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetStoreAppSummaryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest, global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse> __Method_AcquireStoreApp = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest, global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AcquireStoreApp",
        __Marshaller_librarian_sephirah_v1_sephirah_AcquireStoreAppRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_AcquireStoreAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse> __Method_ListStoreAppBinaries = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStoreAppBinaries",
        __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinariesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinariesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse> __Method_ListStoreAppBinaryFiles = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStoreAppBinaryFiles",
        __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinaryFilesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppBinaryFilesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse> __Method_DownloadStoreAppBinary = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadStoreAppBinary",
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppBinaryRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppBinaryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse> __Method_ListStoreAppSaveFiles = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStoreAppSaveFiles",
        __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppSaveFilesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListStoreAppSaveFilesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse> __Method_DownloadStoreAppSaveFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadStoreAppSaveFile",
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppSaveFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadStoreAppSaveFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest, global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse> __Method_SearchAppInfos = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest, global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchAppInfos",
        __Marshaller_librarian_sephirah_v1_sephirah_SearchAppInfosRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SearchAppInfosResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest, global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse> __Method_CreateApp = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest, global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateApp",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateAppRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse> __Method_UpdateApp = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateApp",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse> __Method_ListApps = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListApps",
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse> __Method_BatchCreateAppRunTime = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateAppRunTime",
        __Marshaller_librarian_sephirah_v1_sephirah_BatchCreateAppRunTimeRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_BatchCreateAppRunTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse> __Method_SumAppRunTime = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SumAppRunTime",
        __Marshaller_librarian_sephirah_v1_sephirah_SumAppRunTimeRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SumAppRunTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse> __Method_ListAppRunTimes = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAppRunTimes",
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppRunTimesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppRunTimesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse> __Method_DeleteAppRunTime = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAppRunTime",
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppRunTimeRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppRunTimeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse> __Method_UploadAppSaveFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadAppSaveFile",
        __Marshaller_librarian_sephirah_v1_sephirah_UploadAppSaveFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UploadAppSaveFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse> __Method_DownloadAppSaveFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DownloadAppSaveFile",
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadAppSaveFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DownloadAppSaveFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse> __Method_ListAppSaveFiles = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAppSaveFiles",
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppSaveFilesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppSaveFilesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse> __Method_DeleteAppSaveFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAppSaveFile",
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppSaveFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppSaveFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse> __Method_PinAppSaveFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PinAppSaveFile",
        __Marshaller_librarian_sephirah_v1_sephirah_PinAppSaveFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_PinAppSaveFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse> __Method_UnpinAppSaveFile = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnpinAppSaveFile",
        __Marshaller_librarian_sephirah_v1_sephirah_UnpinAppSaveFileRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UnpinAppSaveFileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest, global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse> __Method_GetAppSaveFileCapacity = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest, global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAppSaveFileCapacity",
        __Marshaller_librarian_sephirah_v1_sephirah_GetAppSaveFileCapacityRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetAppSaveFileCapacityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest, global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse> __Method_SetAppSaveFileCapacity = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest, global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAppSaveFileCapacity",
        __Marshaller_librarian_sephirah_v1_sephirah_SetAppSaveFileCapacityRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_SetAppSaveFileCapacityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse> __Method_ListAppCategories = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAppCategories",
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppCategoriesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListAppCategoriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse> __Method_CreateAppCategory = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAppCategory",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateAppCategoryRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateAppCategoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse> __Method_UpdateAppCategory = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAppCategory",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppCategoryRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateAppCategoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse> __Method_DeleteAppCategory = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAppCategory",
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppCategoryRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_DeleteAppCategoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse> __Method_CreateNotifyTarget = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotifyTarget",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyTargetRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyTargetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse> __Method_UpdateNotifyTarget = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotifyTarget",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyTargetRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyTargetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest, global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse> __Method_ListNotifyTargets = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest, global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotifyTargets",
        __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyTargetsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyTargetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse> __Method_CreateNotifyFlow = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotifyFlow",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyFlowRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateNotifyFlowResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse> __Method_UpdateNotifyFlow = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotifyFlow",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyFlowRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateNotifyFlowResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest, global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse> __Method_ListNotifyFlows = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest, global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotifyFlows",
        __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyFlowsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListNotifyFlowsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest, global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse> __Method_ListSystemNotifications = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest, global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSystemNotifications",
        __Marshaller_librarian_sephirah_v1_sephirah_ListSystemNotificationsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListSystemNotificationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse> __Method_UpdateSystemNotification = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSystemNotification",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateSystemNotificationRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateSystemNotificationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse> __Method_CreateFeedConfig = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFeedConfig",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedConfigRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse> __Method_UpdateFeedConfig = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFeedConfig",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedConfigRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse> __Method_ListFeedConfigs = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedConfigs",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedConfigsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse> __Method_CreateFeedActionSet = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFeedActionSet",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedActionSetRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedActionSetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse> __Method_UpdateFeedActionSet = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFeedActionSet",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedActionSetRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedActionSetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse> __Method_ListFeedActionSets = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedActionSets",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedActionSetsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedActionSetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse> __Method_ListFeedCategories = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedCategories",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedCategoriesRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedCategoriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse> __Method_ListFeedPlatforms = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedPlatforms",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedPlatformsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedPlatformsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse> __Method_ListFeedItems = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedItems",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest, global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse> __Method_GetFeedItem = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest, global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFeedItem",
        __Marshaller_librarian_sephirah_v1_sephirah_GetFeedItemRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetFeedItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest, global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse> __Method_GetBatchFeedItems = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest, global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBatchFeedItems",
        __Marshaller_librarian_sephirah_v1_sephirah_GetBatchFeedItemsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_GetBatchFeedItemsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest, global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse> __Method_ReadFeedItem = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest, global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadFeedItem",
        __Marshaller_librarian_sephirah_v1_sephirah_ReadFeedItemRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ReadFeedItemResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse> __Method_CreateFeedItemCollection = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFeedItemCollection",
        __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedItemCollectionRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_CreateFeedItemCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse> __Method_UpdateFeedItemCollection = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFeedItemCollection",
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedItemCollectionRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_UpdateFeedItemCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse> __Method_ListFeedItemCollections = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedItemCollections",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemCollectionsRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemCollectionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse> __Method_AddFeedItemToCollection = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddFeedItemToCollection",
        __Marshaller_librarian_sephirah_v1_sephirah_AddFeedItemToCollectionRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_AddFeedItemToCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse> __Method_RemoveFeedItemFromCollection = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveFeedItemFromCollection",
        __Marshaller_librarian_sephirah_v1_sephirah_RemoveFeedItemFromCollectionRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_RemoveFeedItemFromCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse> __Method_ListFeedItemsInCollection = new grpc::Method<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFeedItemsInCollection",
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsInCollectionRequest,
        __Marshaller_librarian_sephirah_v1_sephirah_ListFeedItemsInCollectionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Librarian.Sephirah.V1.Sephirah.SephirahServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LibrarianSephirahService</summary>
    [grpc::BindServiceMethod(typeof(LibrarianSephirahService), "BindService")]
    public abstract partial class LibrarianSephirahServiceBase
    {
      /// <summary>
      /// Allow anonymous call, use accessToken to get complete information
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse> GetServerInformation(global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Normal` Client can use this to subscribe to server events.
      ///
      /// Server should send `SERVER_EVENT_LISTENER_CONNECTED` event immediately if the connection is valid.
      /// Otherwise, client should treat the connection as failed.
      ///
      /// Server can close the stream at any time, client should reconnect if needed **with backoff**.
      /// Only used to improve real-time experience, no guarantee of delivery.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ListenServerEvent(global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest request, grpc::IServerStreamWriter<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Login via password and get two token
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse> GetToken(global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse> RefreshToken(global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetUserResponse> GetUser(global::Librarian.Sephirah.V1.Sephirah.GetUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` Self register as a new normal user
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse> RegisterUser(global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Update self user info
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse> UpdateUser(global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Client should register device after the first login
      /// and store the device_id locally.
      /// The server could add extra limits to non-registered device
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse> RegisterDevice(global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse> ListUserSessions(global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` delete session will revoke refresh_token immediately.
      /// NOTE: This can also be used to log out at server side.
      /// NOTE2: Delete session will not affect device registration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse> DeleteUserSession(global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Bind third-party account to current user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse> LinkAccount(global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Unbind third-party account from current user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse> UnLinkAccount(global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` List third-party account binded to current user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse> ListLinkAccounts(global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse> ListPorterDigests(global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse> CreatePorterContext(global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse> ListPorterContexts(global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth` `Normal` Set porter context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse> UpdatePorterContext(global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse> GetStorageCapacityUsage(global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `upload_token`
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task UploadFile(grpc::IAsyncStreamReader<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest> requestStream, grpc::IServerStreamWriter<global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `download_token`
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task DownloadFile(grpc::IAsyncStreamReader<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest> requestStream, grpc::IServerStreamWriter<global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `upload_token`
      /// Maximum 256M
      /// Server must send response at least once a minute to keepalive.
      /// Client should ignore in_process response and wait for success or error response.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SimpleUploadFile(grpc::IAsyncStreamReader<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest> requestStream, grpc::IServerStreamWriter<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `download_token`
      /// Server will not check the receiving state
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SimpleDownloadFile(global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest request, grpc::IServerStreamWriter<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `upload_token`
      /// Upload file through http url
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse> PresignedUploadFile(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `upload_token`
      /// Report file transfer status. Mainly used to trigger server post-process immediately
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse> PresignedUploadFileStatus(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Binah` `download_token`
      /// Download file through http url
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse> PresignedDownloadFile(global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse> UploadImage(global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse> UpdateImage(global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse> ListImages(global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse> SearchImages(global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetImageResponse> GetImage(global::Librarian.Sephirah.V1.Sephirah.GetImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse> DownloadImage(global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse> SearchStoreApps(global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse> GetStoreAppSummary(global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse> AcquireStoreApp(global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse> ListStoreAppBinaries(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse> ListStoreAppBinaryFiles(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse> DownloadStoreAppBinary(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse> ListStoreAppSaveFiles(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse> DownloadStoreAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal` Search app infos
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse> SearchAppInfos(global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse> CreateApp(global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse> UpdateApp(global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse> ListApps(global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse> BatchCreateAppRunTime(global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse> SumAppRunTime(global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse> ListAppRunTimes(global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse> DeleteAppRunTime(global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse> UploadAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse> DownloadAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse> ListAppSaveFiles(global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse> DeleteAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse> PinAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse> UnpinAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse> GetAppSaveFileCapacity(global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse> SetAppSaveFileCapacity(global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse> ListAppCategories(global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse> CreateAppCategory(global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse> UpdateAppCategory(global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse> DeleteAppCategory(global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse> CreateNotifyTarget(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse> UpdateNotifyTarget(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse> ListNotifyTargets(global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse> CreateNotifyFlow(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse> UpdateNotifyFlow(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse> ListNotifyFlows(global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse> ListSystemNotifications(global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse> UpdateSystemNotification(global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse> CreateFeedConfig(global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse> UpdateFeedConfig(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse> ListFeedConfigs(global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse> CreateFeedActionSet(global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse> UpdateFeedActionSet(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse> ListFeedActionSets(global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse> ListFeedCategories(global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse> ListFeedPlatforms(global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse> ListFeedItems(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse> GetFeedItem(global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse> GetBatchFeedItems(global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse> ReadFeedItem(global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse> CreateFeedItemCollection(global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse> UpdateFeedItemCollection(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse> ListFeedItemCollections(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse> AddFeedItemToCollection(global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse> RemoveFeedItemFromCollection(global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse> ListFeedItemsInCollection(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LibrarianSephirahService</summary>
    public partial class LibrarianSephirahServiceClient : grpc::ClientBase<LibrarianSephirahServiceClient>
    {
      /// <summary>Creates a new client for LibrarianSephirahService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibrarianSephirahServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LibrarianSephirahService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibrarianSephirahServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibrarianSephirahServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibrarianSephirahServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Allow anonymous call, use accessToken to get complete information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse GetServerInformation(global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServerInformation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Allow anonymous call, use accessToken to get complete information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse GetServerInformation(global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServerInformation, null, options, request);
      }
      /// <summary>
      /// Allow anonymous call, use accessToken to get complete information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse> GetServerInformationAsync(global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServerInformationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Allow anonymous call, use accessToken to get complete information
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse> GetServerInformationAsync(global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServerInformation, null, options, request);
      }
      /// <summary>
      /// `Normal` Client can use this to subscribe to server events.
      ///
      /// Server should send `SERVER_EVENT_LISTENER_CONNECTED` event immediately if the connection is valid.
      /// Otherwise, client should treat the connection as failed.
      ///
      /// Server can close the stream at any time, client should reconnect if needed **with backoff**.
      /// Only used to improve real-time experience, no guarantee of delivery.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse> ListenServerEvent(global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListenServerEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Normal` Client can use this to subscribe to server events.
      ///
      /// Server should send `SERVER_EVENT_LISTENER_CONNECTED` event immediately if the connection is valid.
      /// Otherwise, client should treat the connection as failed.
      ///
      /// Server can close the stream at any time, client should reconnect if needed **with backoff**.
      /// Only used to improve real-time experience, no guarantee of delivery.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse> ListenServerEvent(global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ListenServerEvent, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Login via password and get two token
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse GetToken(global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Login via password and get two token
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse GetToken(global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetToken, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Login via password and get two token
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse> GetTokenAsync(global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Login via password and get two token
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse> GetTokenAsync(global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetToken, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse RefreshToken(global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse RefreshToken(global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RefreshToken, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse> RefreshTokenAsync(global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse> RefreshTokenAsync(global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RefreshToken, null, options, request);
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetUserResponse GetUser(global::Librarian.Sephirah.V1.Sephirah.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetUserResponse GetUser(global::Librarian.Sephirah.V1.Sephirah.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUser, null, options, request);
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetUserResponse> GetUserAsync(global::Librarian.Sephirah.V1.Sephirah.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetUserResponse> GetUserAsync(global::Librarian.Sephirah.V1.Sephirah.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUser, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` Self register as a new normal user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse RegisterUser(global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` Self register as a new normal user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse RegisterUser(global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterUser, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` Self register as a new normal user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse> RegisterUserAsync(global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` Self register as a new normal user
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse> RegisterUserAsync(global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterUser, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Update self user info
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse UpdateUser(global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Update self user info
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse UpdateUser(global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUser, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Update self user info
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse> UpdateUserAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Update self user info
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse> UpdateUserAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUser, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Client should register device after the first login
      /// and store the device_id locally.
      /// The server could add extra limits to non-registered device
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse RegisterDevice(global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterDevice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Client should register device after the first login
      /// and store the device_id locally.
      /// The server could add extra limits to non-registered device
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse RegisterDevice(global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterDevice, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Client should register device after the first login
      /// and store the device_id locally.
      /// The server could add extra limits to non-registered device
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse> RegisterDeviceAsync(global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterDeviceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Client should register device after the first login
      /// and store the device_id locally.
      /// The server could add extra limits to non-registered device
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse> RegisterDeviceAsync(global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterDevice, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse ListUserSessions(global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserSessions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse ListUserSessions(global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUserSessions, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse> ListUserSessionsAsync(global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserSessionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse> ListUserSessionsAsync(global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUserSessions, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` delete session will revoke refresh_token immediately.
      /// NOTE: This can also be used to log out at server side.
      /// NOTE2: Delete session will not affect device registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse DeleteUserSession(global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` delete session will revoke refresh_token immediately.
      /// NOTE: This can also be used to log out at server side.
      /// NOTE2: Delete session will not affect device registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse DeleteUserSession(global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUserSession, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` delete session will revoke refresh_token immediately.
      /// NOTE: This can also be used to log out at server side.
      /// NOTE2: Delete session will not affect device registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse> DeleteUserSessionAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserSessionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` delete session will revoke refresh_token immediately.
      /// NOTE: This can also be used to log out at server side.
      /// NOTE2: Delete session will not affect device registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse> DeleteUserSessionAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUserSession, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Bind third-party account to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse LinkAccount(global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LinkAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Bind third-party account to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse LinkAccount(global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LinkAccount, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Bind third-party account to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse> LinkAccountAsync(global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LinkAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Bind third-party account to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse> LinkAccountAsync(global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LinkAccount, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Unbind third-party account from current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse UnLinkAccount(global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnLinkAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Unbind third-party account from current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse UnLinkAccount(global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnLinkAccount, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Unbind third-party account from current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse> UnLinkAccountAsync(global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnLinkAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Unbind third-party account from current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse> UnLinkAccountAsync(global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnLinkAccount, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` List third-party account binded to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse ListLinkAccounts(global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLinkAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` List third-party account binded to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse ListLinkAccounts(global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLinkAccounts, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` List third-party account binded to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse> ListLinkAccountsAsync(global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLinkAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` List third-party account binded to current user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse> ListLinkAccountsAsync(global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLinkAccounts, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse ListPorterDigests(global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPorterDigests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse ListPorterDigests(global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPorterDigests, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse> ListPorterDigestsAsync(global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPorterDigestsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse> ListPorterDigestsAsync(global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPorterDigests, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse CreatePorterContext(global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePorterContext(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse CreatePorterContext(global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePorterContext, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse> CreatePorterContextAsync(global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePorterContextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse> CreatePorterContextAsync(global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePorterContext, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse ListPorterContexts(global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPorterContexts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse ListPorterContexts(global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPorterContexts, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse> ListPorterContextsAsync(global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPorterContextsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse> ListPorterContextsAsync(global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPorterContexts, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Set porter context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse UpdatePorterContext(global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePorterContext(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Set porter context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse UpdatePorterContext(global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePorterContext, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` `Normal` Set porter context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse> UpdatePorterContextAsync(global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePorterContextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` `Normal` Set porter context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse> UpdatePorterContextAsync(global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePorterContext, null, options, request);
      }
      /// <summary>
      /// `Binah` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse GetStorageCapacityUsage(global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStorageCapacityUsage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse GetStorageCapacityUsage(global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStorageCapacityUsage, null, options, request);
      }
      /// <summary>
      /// `Binah` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse> GetStorageCapacityUsageAsync(global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStorageCapacityUsageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse> GetStorageCapacityUsageAsync(global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStorageCapacityUsage, null, options, request);
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse> UploadFile(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadFile(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse> UploadFile(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_UploadFile, null, options);
      }
      /// <summary>
      /// `Binah` `download_token`
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse> DownloadFile(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadFile(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `download_token`
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse> DownloadFile(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_DownloadFile, null, options);
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Maximum 256M
      /// Server must send response at least once a minute to keepalive.
      /// Client should ignore in_process response and wait for success or error response.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse> SimpleUploadFile(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SimpleUploadFile(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Maximum 256M
      /// Server must send response at least once a minute to keepalive.
      /// Client should ignore in_process response and wait for success or error response.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse> SimpleUploadFile(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_SimpleUploadFile, null, options);
      }
      /// <summary>
      /// `Binah` `download_token`
      /// Server will not check the receiving state
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse> SimpleDownloadFile(global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SimpleDownloadFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `download_token`
      /// Server will not check the receiving state
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse> SimpleDownloadFile(global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SimpleDownloadFile, null, options, request);
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Upload file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse PresignedUploadFile(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PresignedUploadFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Upload file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse PresignedUploadFile(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PresignedUploadFile, null, options, request);
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Upload file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse> PresignedUploadFileAsync(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PresignedUploadFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Upload file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse> PresignedUploadFileAsync(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PresignedUploadFile, null, options, request);
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Report file transfer status. Mainly used to trigger server post-process immediately
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse PresignedUploadFileStatus(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PresignedUploadFileStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Report file transfer status. Mainly used to trigger server post-process immediately
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse PresignedUploadFileStatus(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PresignedUploadFileStatus, null, options, request);
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Report file transfer status. Mainly used to trigger server post-process immediately
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse> PresignedUploadFileStatusAsync(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PresignedUploadFileStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `upload_token`
      /// Report file transfer status. Mainly used to trigger server post-process immediately
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse> PresignedUploadFileStatusAsync(global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PresignedUploadFileStatus, null, options, request);
      }
      /// <summary>
      /// `Binah` `download_token`
      /// Download file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse PresignedDownloadFile(global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PresignedDownloadFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `download_token`
      /// Download file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse PresignedDownloadFile(global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PresignedDownloadFile, null, options, request);
      }
      /// <summary>
      /// `Binah` `download_token`
      /// Download file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse> PresignedDownloadFileAsync(global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PresignedDownloadFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Binah` `download_token`
      /// Download file through http url
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse> PresignedDownloadFileAsync(global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PresignedDownloadFile, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse UploadImage(global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse UploadImage(global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse> UploadImageAsync(global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse> UploadImageAsync(global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse UpdateImage(global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse UpdateImage(global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse> UpdateImageAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse> UpdateImageAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse ListImages(global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListImages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse ListImages(global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListImages, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse> ListImagesAsync(global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListImagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse> ListImagesAsync(global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListImages, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse SearchImages(global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchImages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse SearchImages(global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchImages, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse> SearchImagesAsync(global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchImagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse> SearchImagesAsync(global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchImages, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetImageResponse GetImage(global::Librarian.Sephirah.V1.Sephirah.GetImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetImageResponse GetImage(global::Librarian.Sephirah.V1.Sephirah.GetImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetImageResponse> GetImageAsync(global::Librarian.Sephirah.V1.Sephirah.GetImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetImageResponse> GetImageAsync(global::Librarian.Sephirah.V1.Sephirah.GetImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse DownloadImage(global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse DownloadImage(global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadImage, null, options, request);
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse> DownloadImageAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Chesed` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse> DownloadImageAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadImage, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse SearchStoreApps(global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchStoreApps(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse SearchStoreApps(global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchStoreApps, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse> SearchStoreAppsAsync(global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchStoreAppsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse> SearchStoreAppsAsync(global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchStoreApps, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse GetStoreAppSummary(global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStoreAppSummary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse GetStoreAppSummary(global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStoreAppSummary, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse> GetStoreAppSummaryAsync(global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStoreAppSummaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse> GetStoreAppSummaryAsync(global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStoreAppSummary, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse AcquireStoreApp(global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcquireStoreApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse AcquireStoreApp(global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcquireStoreApp, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse> AcquireStoreAppAsync(global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcquireStoreAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse> AcquireStoreAppAsync(global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcquireStoreApp, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse ListStoreAppBinaries(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStoreAppBinaries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse ListStoreAppBinaries(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStoreAppBinaries, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse> ListStoreAppBinariesAsync(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStoreAppBinariesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse> ListStoreAppBinariesAsync(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStoreAppBinaries, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse ListStoreAppBinaryFiles(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStoreAppBinaryFiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse ListStoreAppBinaryFiles(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStoreAppBinaryFiles, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse> ListStoreAppBinaryFilesAsync(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStoreAppBinaryFilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse> ListStoreAppBinaryFilesAsync(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStoreAppBinaryFiles, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse DownloadStoreAppBinary(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadStoreAppBinary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse DownloadStoreAppBinary(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadStoreAppBinary, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse> DownloadStoreAppBinaryAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadStoreAppBinaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse> DownloadStoreAppBinaryAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadStoreAppBinary, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse ListStoreAppSaveFiles(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStoreAppSaveFiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse ListStoreAppSaveFiles(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStoreAppSaveFiles, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse> ListStoreAppSaveFilesAsync(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStoreAppSaveFilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse> ListStoreAppSaveFilesAsync(global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStoreAppSaveFiles, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse DownloadStoreAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadStoreAppSaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse DownloadStoreAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadStoreAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse> DownloadStoreAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadStoreAppSaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse> DownloadStoreAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadStoreAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal` Search app infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse SearchAppInfos(global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchAppInfos(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal` Search app infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse SearchAppInfos(global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchAppInfos, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal` Search app infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse> SearchAppInfosAsync(global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchAppInfosAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal` Search app infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse> SearchAppInfosAsync(global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchAppInfos, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse CreateApp(global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse CreateApp(global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateApp, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse> CreateAppAsync(global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse> CreateAppAsync(global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateApp, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse UpdateApp(global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse UpdateApp(global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateApp, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse> UpdateAppAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse> UpdateAppAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateApp, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse ListApps(global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApps(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse ListApps(global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListApps, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse> ListAppsAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse> ListAppsAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListApps, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse BatchCreateAppRunTime(global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateAppRunTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse BatchCreateAppRunTime(global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateAppRunTime, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse> BatchCreateAppRunTimeAsync(global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateAppRunTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse> BatchCreateAppRunTimeAsync(global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateAppRunTime, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse SumAppRunTime(global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SumAppRunTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse SumAppRunTime(global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SumAppRunTime, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse> SumAppRunTimeAsync(global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SumAppRunTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse> SumAppRunTimeAsync(global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SumAppRunTime, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse ListAppRunTimes(global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppRunTimes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse ListAppRunTimes(global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAppRunTimes, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse> ListAppRunTimesAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppRunTimesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse> ListAppRunTimesAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAppRunTimes, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse DeleteAppRunTime(global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAppRunTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse DeleteAppRunTime(global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAppRunTime, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse> DeleteAppRunTimeAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAppRunTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse> DeleteAppRunTimeAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAppRunTime, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse UploadAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadAppSaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse UploadAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse> UploadAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadAppSaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse> UploadAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse DownloadAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadAppSaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse DownloadAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DownloadAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse> DownloadAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DownloadAppSaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse> DownloadAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DownloadAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse ListAppSaveFiles(global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppSaveFiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse ListAppSaveFiles(global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAppSaveFiles, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse> ListAppSaveFilesAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppSaveFilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse> ListAppSaveFilesAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAppSaveFiles, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse DeleteAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAppSaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse DeleteAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse> DeleteAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAppSaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse> DeleteAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse PinAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PinAppSaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse PinAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PinAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse> PinAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PinAppSaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse> PinAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PinAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse UnpinAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnpinAppSaveFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse UnpinAppSaveFile(global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnpinAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse> UnpinAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnpinAppSaveFileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse> UnpinAppSaveFileAsync(global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnpinAppSaveFile, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse GetAppSaveFileCapacity(global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppSaveFileCapacity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse GetAppSaveFileCapacity(global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAppSaveFileCapacity, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse> GetAppSaveFileCapacityAsync(global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppSaveFileCapacityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse> GetAppSaveFileCapacityAsync(global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAppSaveFileCapacity, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse SetAppSaveFileCapacity(global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAppSaveFileCapacity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse SetAppSaveFileCapacity(global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAppSaveFileCapacity, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse> SetAppSaveFileCapacityAsync(global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAppSaveFileCapacityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse> SetAppSaveFileCapacityAsync(global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAppSaveFileCapacity, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse ListAppCategories(global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppCategories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse ListAppCategories(global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAppCategories, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse> ListAppCategoriesAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppCategoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse> ListAppCategoriesAsync(global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAppCategories, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse CreateAppCategory(global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAppCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse CreateAppCategory(global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAppCategory, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse> CreateAppCategoryAsync(global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAppCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse> CreateAppCategoryAsync(global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAppCategory, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse UpdateAppCategory(global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAppCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse UpdateAppCategory(global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAppCategory, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse> UpdateAppCategoryAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAppCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse> UpdateAppCategoryAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAppCategory, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse DeleteAppCategory(global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAppCategory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse DeleteAppCategory(global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAppCategory, null, options, request);
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse> DeleteAppCategoryAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAppCategoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse> DeleteAppCategoryAsync(global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAppCategory, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse CreateNotifyTarget(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotifyTarget(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse CreateNotifyTarget(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotifyTarget, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse> CreateNotifyTargetAsync(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotifyTargetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse> CreateNotifyTargetAsync(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotifyTarget, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse UpdateNotifyTarget(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotifyTarget(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse UpdateNotifyTarget(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNotifyTarget, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse> UpdateNotifyTargetAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotifyTargetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse> UpdateNotifyTargetAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNotifyTarget, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse ListNotifyTargets(global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotifyTargets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse ListNotifyTargets(global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotifyTargets, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse> ListNotifyTargetsAsync(global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotifyTargetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse> ListNotifyTargetsAsync(global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotifyTargets, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse CreateNotifyFlow(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotifyFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse CreateNotifyFlow(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotifyFlow, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse> CreateNotifyFlowAsync(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotifyFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse> CreateNotifyFlowAsync(global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotifyFlow, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse UpdateNotifyFlow(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotifyFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse UpdateNotifyFlow(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNotifyFlow, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse> UpdateNotifyFlowAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotifyFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse> UpdateNotifyFlowAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNotifyFlow, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse ListNotifyFlows(global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotifyFlows(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse ListNotifyFlows(global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotifyFlows, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse> ListNotifyFlowsAsync(global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotifyFlowsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse> ListNotifyFlowsAsync(global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotifyFlows, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse ListSystemNotifications(global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSystemNotifications(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse ListSystemNotifications(global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSystemNotifications, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse> ListSystemNotificationsAsync(global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSystemNotificationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse> ListSystemNotificationsAsync(global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSystemNotifications, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse UpdateSystemNotification(global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSystemNotification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse UpdateSystemNotification(global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSystemNotification, null, options, request);
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse> UpdateSystemNotificationAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSystemNotificationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Netzach` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse> UpdateSystemNotificationAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSystemNotification, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse CreateFeedConfig(global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFeedConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse CreateFeedConfig(global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFeedConfig, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse> CreateFeedConfigAsync(global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFeedConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse> CreateFeedConfigAsync(global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFeedConfig, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse UpdateFeedConfig(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFeedConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse UpdateFeedConfig(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFeedConfig, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse> UpdateFeedConfigAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFeedConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse> UpdateFeedConfigAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFeedConfig, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse ListFeedConfigs(global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse ListFeedConfigs(global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedConfigs, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse> ListFeedConfigsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse> ListFeedConfigsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedConfigs, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse CreateFeedActionSet(global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFeedActionSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse CreateFeedActionSet(global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFeedActionSet, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse> CreateFeedActionSetAsync(global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFeedActionSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse> CreateFeedActionSetAsync(global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFeedActionSet, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse UpdateFeedActionSet(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFeedActionSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse UpdateFeedActionSet(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFeedActionSet, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse> UpdateFeedActionSetAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFeedActionSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse> UpdateFeedActionSetAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFeedActionSet, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse ListFeedActionSets(global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedActionSets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse ListFeedActionSets(global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedActionSets, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse> ListFeedActionSetsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedActionSetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse> ListFeedActionSetsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedActionSets, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse ListFeedCategories(global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedCategories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse ListFeedCategories(global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedCategories, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse> ListFeedCategoriesAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedCategoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse> ListFeedCategoriesAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedCategories, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse ListFeedPlatforms(global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedPlatforms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse ListFeedPlatforms(global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedPlatforms, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse> ListFeedPlatformsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedPlatformsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse> ListFeedPlatformsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedPlatforms, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse ListFeedItems(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse ListFeedItems(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedItems, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse> ListFeedItemsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse> ListFeedItemsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedItems, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse GetFeedItem(global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFeedItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse GetFeedItem(global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFeedItem, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse> GetFeedItemAsync(global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFeedItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse> GetFeedItemAsync(global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFeedItem, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse GetBatchFeedItems(global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBatchFeedItems(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse GetBatchFeedItems(global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBatchFeedItems, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse> GetBatchFeedItemsAsync(global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBatchFeedItemsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse> GetBatchFeedItemsAsync(global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBatchFeedItems, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse ReadFeedItem(global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadFeedItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse ReadFeedItem(global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadFeedItem, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse> ReadFeedItemAsync(global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadFeedItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse> ReadFeedItemAsync(global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadFeedItem, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse CreateFeedItemCollection(global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFeedItemCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse CreateFeedItemCollection(global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFeedItemCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse> CreateFeedItemCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFeedItemCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse> CreateFeedItemCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFeedItemCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse UpdateFeedItemCollection(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFeedItemCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse UpdateFeedItemCollection(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFeedItemCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse> UpdateFeedItemCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFeedItemCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse> UpdateFeedItemCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFeedItemCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse ListFeedItemCollections(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedItemCollections(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse ListFeedItemCollections(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedItemCollections, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse> ListFeedItemCollectionsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedItemCollectionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse> ListFeedItemCollectionsAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedItemCollections, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse AddFeedItemToCollection(global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFeedItemToCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse AddFeedItemToCollection(global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddFeedItemToCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse> AddFeedItemToCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFeedItemToCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse> AddFeedItemToCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddFeedItemToCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse RemoveFeedItemFromCollection(global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveFeedItemFromCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse RemoveFeedItemFromCollection(global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveFeedItemFromCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse> RemoveFeedItemFromCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveFeedItemFromCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse> RemoveFeedItemFromCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveFeedItemFromCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse ListFeedItemsInCollection(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedItemsInCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse ListFeedItemsInCollection(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFeedItemsInCollection, null, options, request);
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse> ListFeedItemsInCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFeedItemsInCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Yesod` `Normal`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse> ListFeedItemsInCollectionAsync(global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFeedItemsInCollection, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LibrarianSephirahServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LibrarianSephirahServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LibrarianSephirahServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetServerInformation, serviceImpl.GetServerInformation)
          .AddMethod(__Method_ListenServerEvent, serviceImpl.ListenServerEvent)
          .AddMethod(__Method_GetToken, serviceImpl.GetToken)
          .AddMethod(__Method_RefreshToken, serviceImpl.RefreshToken)
          .AddMethod(__Method_GetUser, serviceImpl.GetUser)
          .AddMethod(__Method_RegisterUser, serviceImpl.RegisterUser)
          .AddMethod(__Method_UpdateUser, serviceImpl.UpdateUser)
          .AddMethod(__Method_RegisterDevice, serviceImpl.RegisterDevice)
          .AddMethod(__Method_ListUserSessions, serviceImpl.ListUserSessions)
          .AddMethod(__Method_DeleteUserSession, serviceImpl.DeleteUserSession)
          .AddMethod(__Method_LinkAccount, serviceImpl.LinkAccount)
          .AddMethod(__Method_UnLinkAccount, serviceImpl.UnLinkAccount)
          .AddMethod(__Method_ListLinkAccounts, serviceImpl.ListLinkAccounts)
          .AddMethod(__Method_ListPorterDigests, serviceImpl.ListPorterDigests)
          .AddMethod(__Method_CreatePorterContext, serviceImpl.CreatePorterContext)
          .AddMethod(__Method_ListPorterContexts, serviceImpl.ListPorterContexts)
          .AddMethod(__Method_UpdatePorterContext, serviceImpl.UpdatePorterContext)
          .AddMethod(__Method_GetStorageCapacityUsage, serviceImpl.GetStorageCapacityUsage)
          .AddMethod(__Method_UploadFile, serviceImpl.UploadFile)
          .AddMethod(__Method_DownloadFile, serviceImpl.DownloadFile)
          .AddMethod(__Method_SimpleUploadFile, serviceImpl.SimpleUploadFile)
          .AddMethod(__Method_SimpleDownloadFile, serviceImpl.SimpleDownloadFile)
          .AddMethod(__Method_PresignedUploadFile, serviceImpl.PresignedUploadFile)
          .AddMethod(__Method_PresignedUploadFileStatus, serviceImpl.PresignedUploadFileStatus)
          .AddMethod(__Method_PresignedDownloadFile, serviceImpl.PresignedDownloadFile)
          .AddMethod(__Method_UploadImage, serviceImpl.UploadImage)
          .AddMethod(__Method_UpdateImage, serviceImpl.UpdateImage)
          .AddMethod(__Method_ListImages, serviceImpl.ListImages)
          .AddMethod(__Method_SearchImages, serviceImpl.SearchImages)
          .AddMethod(__Method_GetImage, serviceImpl.GetImage)
          .AddMethod(__Method_DownloadImage, serviceImpl.DownloadImage)
          .AddMethod(__Method_SearchStoreApps, serviceImpl.SearchStoreApps)
          .AddMethod(__Method_GetStoreAppSummary, serviceImpl.GetStoreAppSummary)
          .AddMethod(__Method_AcquireStoreApp, serviceImpl.AcquireStoreApp)
          .AddMethod(__Method_ListStoreAppBinaries, serviceImpl.ListStoreAppBinaries)
          .AddMethod(__Method_ListStoreAppBinaryFiles, serviceImpl.ListStoreAppBinaryFiles)
          .AddMethod(__Method_DownloadStoreAppBinary, serviceImpl.DownloadStoreAppBinary)
          .AddMethod(__Method_ListStoreAppSaveFiles, serviceImpl.ListStoreAppSaveFiles)
          .AddMethod(__Method_DownloadStoreAppSaveFile, serviceImpl.DownloadStoreAppSaveFile)
          .AddMethod(__Method_SearchAppInfos, serviceImpl.SearchAppInfos)
          .AddMethod(__Method_CreateApp, serviceImpl.CreateApp)
          .AddMethod(__Method_UpdateApp, serviceImpl.UpdateApp)
          .AddMethod(__Method_ListApps, serviceImpl.ListApps)
          .AddMethod(__Method_BatchCreateAppRunTime, serviceImpl.BatchCreateAppRunTime)
          .AddMethod(__Method_SumAppRunTime, serviceImpl.SumAppRunTime)
          .AddMethod(__Method_ListAppRunTimes, serviceImpl.ListAppRunTimes)
          .AddMethod(__Method_DeleteAppRunTime, serviceImpl.DeleteAppRunTime)
          .AddMethod(__Method_UploadAppSaveFile, serviceImpl.UploadAppSaveFile)
          .AddMethod(__Method_DownloadAppSaveFile, serviceImpl.DownloadAppSaveFile)
          .AddMethod(__Method_ListAppSaveFiles, serviceImpl.ListAppSaveFiles)
          .AddMethod(__Method_DeleteAppSaveFile, serviceImpl.DeleteAppSaveFile)
          .AddMethod(__Method_PinAppSaveFile, serviceImpl.PinAppSaveFile)
          .AddMethod(__Method_UnpinAppSaveFile, serviceImpl.UnpinAppSaveFile)
          .AddMethod(__Method_GetAppSaveFileCapacity, serviceImpl.GetAppSaveFileCapacity)
          .AddMethod(__Method_SetAppSaveFileCapacity, serviceImpl.SetAppSaveFileCapacity)
          .AddMethod(__Method_ListAppCategories, serviceImpl.ListAppCategories)
          .AddMethod(__Method_CreateAppCategory, serviceImpl.CreateAppCategory)
          .AddMethod(__Method_UpdateAppCategory, serviceImpl.UpdateAppCategory)
          .AddMethod(__Method_DeleteAppCategory, serviceImpl.DeleteAppCategory)
          .AddMethod(__Method_CreateNotifyTarget, serviceImpl.CreateNotifyTarget)
          .AddMethod(__Method_UpdateNotifyTarget, serviceImpl.UpdateNotifyTarget)
          .AddMethod(__Method_ListNotifyTargets, serviceImpl.ListNotifyTargets)
          .AddMethod(__Method_CreateNotifyFlow, serviceImpl.CreateNotifyFlow)
          .AddMethod(__Method_UpdateNotifyFlow, serviceImpl.UpdateNotifyFlow)
          .AddMethod(__Method_ListNotifyFlows, serviceImpl.ListNotifyFlows)
          .AddMethod(__Method_ListSystemNotifications, serviceImpl.ListSystemNotifications)
          .AddMethod(__Method_UpdateSystemNotification, serviceImpl.UpdateSystemNotification)
          .AddMethod(__Method_CreateFeedConfig, serviceImpl.CreateFeedConfig)
          .AddMethod(__Method_UpdateFeedConfig, serviceImpl.UpdateFeedConfig)
          .AddMethod(__Method_ListFeedConfigs, serviceImpl.ListFeedConfigs)
          .AddMethod(__Method_CreateFeedActionSet, serviceImpl.CreateFeedActionSet)
          .AddMethod(__Method_UpdateFeedActionSet, serviceImpl.UpdateFeedActionSet)
          .AddMethod(__Method_ListFeedActionSets, serviceImpl.ListFeedActionSets)
          .AddMethod(__Method_ListFeedCategories, serviceImpl.ListFeedCategories)
          .AddMethod(__Method_ListFeedPlatforms, serviceImpl.ListFeedPlatforms)
          .AddMethod(__Method_ListFeedItems, serviceImpl.ListFeedItems)
          .AddMethod(__Method_GetFeedItem, serviceImpl.GetFeedItem)
          .AddMethod(__Method_GetBatchFeedItems, serviceImpl.GetBatchFeedItems)
          .AddMethod(__Method_ReadFeedItem, serviceImpl.ReadFeedItem)
          .AddMethod(__Method_CreateFeedItemCollection, serviceImpl.CreateFeedItemCollection)
          .AddMethod(__Method_UpdateFeedItemCollection, serviceImpl.UpdateFeedItemCollection)
          .AddMethod(__Method_ListFeedItemCollections, serviceImpl.ListFeedItemCollections)
          .AddMethod(__Method_AddFeedItemToCollection, serviceImpl.AddFeedItemToCollection)
          .AddMethod(__Method_RemoveFeedItemFromCollection, serviceImpl.RemoveFeedItemFromCollection)
          .AddMethod(__Method_ListFeedItemsInCollection, serviceImpl.ListFeedItemsInCollection).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LibrarianSephirahServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetServerInformation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetServerInformationRequest, global::Librarian.Sephirah.V1.Sephirah.GetServerInformationResponse>(serviceImpl.GetServerInformation));
      serviceBinder.AddMethod(__Method_ListenServerEvent, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListenServerEventRequest, global::Librarian.Sephirah.V1.Sephirah.ListenServerEventResponse>(serviceImpl.ListenServerEvent));
      serviceBinder.AddMethod(__Method_GetToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetTokenRequest, global::Librarian.Sephirah.V1.Sephirah.GetTokenResponse>(serviceImpl.GetToken));
      serviceBinder.AddMethod(__Method_RefreshToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.RefreshTokenRequest, global::Librarian.Sephirah.V1.Sephirah.RefreshTokenResponse>(serviceImpl.RefreshToken));
      serviceBinder.AddMethod(__Method_GetUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetUserRequest, global::Librarian.Sephirah.V1.Sephirah.GetUserResponse>(serviceImpl.GetUser));
      serviceBinder.AddMethod(__Method_RegisterUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.RegisterUserRequest, global::Librarian.Sephirah.V1.Sephirah.RegisterUserResponse>(serviceImpl.RegisterUser));
      serviceBinder.AddMethod(__Method_UpdateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateUserRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateUserResponse>(serviceImpl.UpdateUser));
      serviceBinder.AddMethod(__Method_RegisterDevice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceRequest, global::Librarian.Sephirah.V1.Sephirah.RegisterDeviceResponse>(serviceImpl.RegisterDevice));
      serviceBinder.AddMethod(__Method_ListUserSessions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsRequest, global::Librarian.Sephirah.V1.Sephirah.ListUserSessionsResponse>(serviceImpl.ListUserSessions));
      serviceBinder.AddMethod(__Method_DeleteUserSession, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteUserSessionResponse>(serviceImpl.DeleteUserSession));
      serviceBinder.AddMethod(__Method_LinkAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.LinkAccountRequest, global::Librarian.Sephirah.V1.Sephirah.LinkAccountResponse>(serviceImpl.LinkAccount));
      serviceBinder.AddMethod(__Method_UnLinkAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountRequest, global::Librarian.Sephirah.V1.Sephirah.UnLinkAccountResponse>(serviceImpl.UnLinkAccount));
      serviceBinder.AddMethod(__Method_ListLinkAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsRequest, global::Librarian.Sephirah.V1.Sephirah.ListLinkAccountsResponse>(serviceImpl.ListLinkAccounts));
      serviceBinder.AddMethod(__Method_ListPorterDigests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsRequest, global::Librarian.Sephirah.V1.Sephirah.ListPorterDigestsResponse>(serviceImpl.ListPorterDigests));
      serviceBinder.AddMethod(__Method_CreatePorterContext, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextRequest, global::Librarian.Sephirah.V1.Sephirah.CreatePorterContextResponse>(serviceImpl.CreatePorterContext));
      serviceBinder.AddMethod(__Method_ListPorterContexts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsRequest, global::Librarian.Sephirah.V1.Sephirah.ListPorterContextsResponse>(serviceImpl.ListPorterContexts));
      serviceBinder.AddMethod(__Method_UpdatePorterContext, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextRequest, global::Librarian.Sephirah.V1.Sephirah.UpdatePorterContextResponse>(serviceImpl.UpdatePorterContext));
      serviceBinder.AddMethod(__Method_GetStorageCapacityUsage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageRequest, global::Librarian.Sephirah.V1.Sephirah.GetStorageCapacityUsageResponse>(serviceImpl.GetStorageCapacityUsage));
      serviceBinder.AddMethod(__Method_UploadFile, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Librarian.Sephirah.V1.Sephirah.UploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadFileResponse>(serviceImpl.UploadFile));
      serviceBinder.AddMethod(__Method_DownloadFile, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Librarian.Sephirah.V1.Sephirah.DownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadFileResponse>(serviceImpl.DownloadFile));
      serviceBinder.AddMethod(__Method_SimpleUploadFile, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleUploadFileResponse>(serviceImpl.SimpleUploadFile));
      serviceBinder.AddMethod(__Method_SimpleDownloadFile, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.SimpleDownloadFileResponse>(serviceImpl.SimpleDownloadFile));
      serviceBinder.AddMethod(__Method_PresignedUploadFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileResponse>(serviceImpl.PresignedUploadFile));
      serviceBinder.AddMethod(__Method_PresignedUploadFileStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedUploadFileStatusResponse>(serviceImpl.PresignedUploadFileStatus));
      serviceBinder.AddMethod(__Method_PresignedDownloadFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileRequest, global::Librarian.Sephirah.V1.Sephirah.PresignedDownloadFileResponse>(serviceImpl.PresignedDownloadFile));
      serviceBinder.AddMethod(__Method_UploadImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UploadImageRequest, global::Librarian.Sephirah.V1.Sephirah.UploadImageResponse>(serviceImpl.UploadImage));
      serviceBinder.AddMethod(__Method_UpdateImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateImageRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateImageResponse>(serviceImpl.UpdateImage));
      serviceBinder.AddMethod(__Method_ListImages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListImagesRequest, global::Librarian.Sephirah.V1.Sephirah.ListImagesResponse>(serviceImpl.ListImages));
      serviceBinder.AddMethod(__Method_SearchImages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.SearchImagesRequest, global::Librarian.Sephirah.V1.Sephirah.SearchImagesResponse>(serviceImpl.SearchImages));
      serviceBinder.AddMethod(__Method_GetImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetImageRequest, global::Librarian.Sephirah.V1.Sephirah.GetImageResponse>(serviceImpl.GetImage));
      serviceBinder.AddMethod(__Method_DownloadImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DownloadImageRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadImageResponse>(serviceImpl.DownloadImage));
      serviceBinder.AddMethod(__Method_SearchStoreApps, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsRequest, global::Librarian.Sephirah.V1.Sephirah.SearchStoreAppsResponse>(serviceImpl.SearchStoreApps));
      serviceBinder.AddMethod(__Method_GetStoreAppSummary, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryRequest, global::Librarian.Sephirah.V1.Sephirah.GetStoreAppSummaryResponse>(serviceImpl.GetStoreAppSummary));
      serviceBinder.AddMethod(__Method_AcquireStoreApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppRequest, global::Librarian.Sephirah.V1.Sephirah.AcquireStoreAppResponse>(serviceImpl.AcquireStoreApp));
      serviceBinder.AddMethod(__Method_ListStoreAppBinaries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinariesResponse>(serviceImpl.ListStoreAppBinaries));
      serviceBinder.AddMethod(__Method_ListStoreAppBinaryFiles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppBinaryFilesResponse>(serviceImpl.ListStoreAppBinaryFiles));
      serviceBinder.AddMethod(__Method_DownloadStoreAppBinary, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppBinaryResponse>(serviceImpl.DownloadStoreAppBinary));
      serviceBinder.AddMethod(__Method_ListStoreAppSaveFiles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListStoreAppSaveFilesResponse>(serviceImpl.ListStoreAppSaveFiles));
      serviceBinder.AddMethod(__Method_DownloadStoreAppSaveFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadStoreAppSaveFileResponse>(serviceImpl.DownloadStoreAppSaveFile));
      serviceBinder.AddMethod(__Method_SearchAppInfos, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosRequest, global::Librarian.Sephirah.V1.Sephirah.SearchAppInfosResponse>(serviceImpl.SearchAppInfos));
      serviceBinder.AddMethod(__Method_CreateApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateAppRequest, global::Librarian.Sephirah.V1.Sephirah.CreateAppResponse>(serviceImpl.CreateApp));
      serviceBinder.AddMethod(__Method_UpdateApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateAppRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateAppResponse>(serviceImpl.UpdateApp));
      serviceBinder.AddMethod(__Method_ListApps, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListAppsRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppsResponse>(serviceImpl.ListApps));
      serviceBinder.AddMethod(__Method_BatchCreateAppRunTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.BatchCreateAppRunTimeResponse>(serviceImpl.BatchCreateAppRunTime));
      serviceBinder.AddMethod(__Method_SumAppRunTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.SumAppRunTimeResponse>(serviceImpl.SumAppRunTime));
      serviceBinder.AddMethod(__Method_ListAppRunTimes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppRunTimesResponse>(serviceImpl.ListAppRunTimes));
      serviceBinder.AddMethod(__Method_DeleteAppRunTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppRunTimeResponse>(serviceImpl.DeleteAppRunTime));
      serviceBinder.AddMethod(__Method_UploadAppSaveFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.UploadAppSaveFileResponse>(serviceImpl.UploadAppSaveFile));
      serviceBinder.AddMethod(__Method_DownloadAppSaveFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DownloadAppSaveFileResponse>(serviceImpl.DownloadAppSaveFile));
      serviceBinder.AddMethod(__Method_ListAppSaveFiles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppSaveFilesResponse>(serviceImpl.ListAppSaveFiles));
      serviceBinder.AddMethod(__Method_DeleteAppSaveFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppSaveFileResponse>(serviceImpl.DeleteAppSaveFile));
      serviceBinder.AddMethod(__Method_PinAppSaveFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.PinAppSaveFileResponse>(serviceImpl.PinAppSaveFile));
      serviceBinder.AddMethod(__Method_UnpinAppSaveFile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileRequest, global::Librarian.Sephirah.V1.Sephirah.UnpinAppSaveFileResponse>(serviceImpl.UnpinAppSaveFile));
      serviceBinder.AddMethod(__Method_GetAppSaveFileCapacity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityRequest, global::Librarian.Sephirah.V1.Sephirah.GetAppSaveFileCapacityResponse>(serviceImpl.GetAppSaveFileCapacity));
      serviceBinder.AddMethod(__Method_SetAppSaveFileCapacity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityRequest, global::Librarian.Sephirah.V1.Sephirah.SetAppSaveFileCapacityResponse>(serviceImpl.SetAppSaveFileCapacity));
      serviceBinder.AddMethod(__Method_ListAppCategories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesRequest, global::Librarian.Sephirah.V1.Sephirah.ListAppCategoriesResponse>(serviceImpl.ListAppCategories));
      serviceBinder.AddMethod(__Method_CreateAppCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.CreateAppCategoryResponse>(serviceImpl.CreateAppCategory));
      serviceBinder.AddMethod(__Method_UpdateAppCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateAppCategoryResponse>(serviceImpl.UpdateAppCategory));
      serviceBinder.AddMethod(__Method_DeleteAppCategory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryRequest, global::Librarian.Sephirah.V1.Sephirah.DeleteAppCategoryResponse>(serviceImpl.DeleteAppCategory));
      serviceBinder.AddMethod(__Method_CreateNotifyTarget, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetRequest, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyTargetResponse>(serviceImpl.CreateNotifyTarget));
      serviceBinder.AddMethod(__Method_UpdateNotifyTarget, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyTargetResponse>(serviceImpl.UpdateNotifyTarget));
      serviceBinder.AddMethod(__Method_ListNotifyTargets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsRequest, global::Librarian.Sephirah.V1.Sephirah.ListNotifyTargetsResponse>(serviceImpl.ListNotifyTargets));
      serviceBinder.AddMethod(__Method_CreateNotifyFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowRequest, global::Librarian.Sephirah.V1.Sephirah.CreateNotifyFlowResponse>(serviceImpl.CreateNotifyFlow));
      serviceBinder.AddMethod(__Method_UpdateNotifyFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateNotifyFlowResponse>(serviceImpl.UpdateNotifyFlow));
      serviceBinder.AddMethod(__Method_ListNotifyFlows, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsRequest, global::Librarian.Sephirah.V1.Sephirah.ListNotifyFlowsResponse>(serviceImpl.ListNotifyFlows));
      serviceBinder.AddMethod(__Method_ListSystemNotifications, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsRequest, global::Librarian.Sephirah.V1.Sephirah.ListSystemNotificationsResponse>(serviceImpl.ListSystemNotifications));
      serviceBinder.AddMethod(__Method_UpdateSystemNotification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateSystemNotificationResponse>(serviceImpl.UpdateSystemNotification));
      serviceBinder.AddMethod(__Method_CreateFeedConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedConfigResponse>(serviceImpl.CreateFeedConfig));
      serviceBinder.AddMethod(__Method_UpdateFeedConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedConfigResponse>(serviceImpl.UpdateFeedConfig));
      serviceBinder.AddMethod(__Method_ListFeedConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedConfigsResponse>(serviceImpl.ListFeedConfigs));
      serviceBinder.AddMethod(__Method_CreateFeedActionSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedActionSetResponse>(serviceImpl.CreateFeedActionSet));
      serviceBinder.AddMethod(__Method_UpdateFeedActionSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedActionSetResponse>(serviceImpl.UpdateFeedActionSet));
      serviceBinder.AddMethod(__Method_ListFeedActionSets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedActionSetsResponse>(serviceImpl.ListFeedActionSets));
      serviceBinder.AddMethod(__Method_ListFeedCategories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedCategoriesResponse>(serviceImpl.ListFeedCategories));
      serviceBinder.AddMethod(__Method_ListFeedPlatforms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedPlatformsResponse>(serviceImpl.ListFeedPlatforms));
      serviceBinder.AddMethod(__Method_ListFeedItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsResponse>(serviceImpl.ListFeedItems));
      serviceBinder.AddMethod(__Method_GetFeedItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetFeedItemRequest, global::Librarian.Sephirah.V1.Sephirah.GetFeedItemResponse>(serviceImpl.GetFeedItem));
      serviceBinder.AddMethod(__Method_GetBatchFeedItems, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsRequest, global::Librarian.Sephirah.V1.Sephirah.GetBatchFeedItemsResponse>(serviceImpl.GetBatchFeedItems));
      serviceBinder.AddMethod(__Method_ReadFeedItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemRequest, global::Librarian.Sephirah.V1.Sephirah.ReadFeedItemResponse>(serviceImpl.ReadFeedItem));
      serviceBinder.AddMethod(__Method_CreateFeedItemCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.CreateFeedItemCollectionResponse>(serviceImpl.CreateFeedItemCollection));
      serviceBinder.AddMethod(__Method_UpdateFeedItemCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.UpdateFeedItemCollectionResponse>(serviceImpl.UpdateFeedItemCollection));
      serviceBinder.AddMethod(__Method_ListFeedItemCollections, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemCollectionsResponse>(serviceImpl.ListFeedItemCollections));
      serviceBinder.AddMethod(__Method_AddFeedItemToCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.AddFeedItemToCollectionResponse>(serviceImpl.AddFeedItemToCollection));
      serviceBinder.AddMethod(__Method_RemoveFeedItemFromCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.RemoveFeedItemFromCollectionResponse>(serviceImpl.RemoveFeedItemFromCollection));
      serviceBinder.AddMethod(__Method_ListFeedItemsInCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionRequest, global::Librarian.Sephirah.V1.Sephirah.ListFeedItemsInCollectionResponse>(serviceImpl.ListFeedItemsInCollection));
    }

  }
}
#endregion
