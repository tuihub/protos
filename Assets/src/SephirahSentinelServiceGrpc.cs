// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: librarian/sentinel/v1/sephirah_sentinel_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TuiHub.Protos.Librarian.Sentinel.V1 {
  public static partial class LibrarianSephirahSentinelService
  {
    static readonly string __ServiceName = "librarian.sentinel.v1.LibrarianSephirahSentinelService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest> __Marshaller_librarian_sentinel_v1_RefreshTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse> __Marshaller_librarian_sentinel_v1_RefreshTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest> __Marshaller_librarian_sentinel_v1_HeartbeatRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse> __Marshaller_librarian_sentinel_v1_HeartbeatResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest> __Marshaller_librarian_sentinel_v1_ReportSentinelInformationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse> __Marshaller_librarian_sentinel_v1_ReportSentinelInformationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest> __Marshaller_librarian_sentinel_v1_ReportAppBinariesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse> __Marshaller_librarian_sentinel_v1_ReportAppBinariesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse> __Method_RefreshToken = new grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RefreshToken",
        __Marshaller_librarian_sentinel_v1_RefreshTokenRequest,
        __Marshaller_librarian_sentinel_v1_RefreshTokenResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse> __Method_Heartbeat = new grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Heartbeat",
        __Marshaller_librarian_sentinel_v1_HeartbeatRequest,
        __Marshaller_librarian_sentinel_v1_HeartbeatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse> __Method_ReportSentinelInformation = new grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReportSentinelInformation",
        __Marshaller_librarian_sentinel_v1_ReportSentinelInformationRequest,
        __Marshaller_librarian_sentinel_v1_ReportSentinelInformationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse> __Method_ReportAppBinaries = new grpc::Method<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReportAppBinaries",
        __Marshaller_librarian_sentinel_v1_ReportAppBinariesRequest,
        __Marshaller_librarian_sentinel_v1_ReportAppBinariesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TuiHub.Protos.Librarian.Sentinel.V1.SephirahSentinelServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LibrarianSephirahSentinelService</summary>
    [grpc::BindServiceMethod(typeof(LibrarianSephirahSentinelService), "BindService")]
    public abstract partial class LibrarianSephirahSentinelServiceBase
    {
      /// <summary>
      /// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse> RefreshToken(global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse> Heartbeat(global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse> ReportSentinelInformation(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `Gebura`
      /// Full update, changes are handled by librarian
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse> ReportAppBinaries(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LibrarianSephirahSentinelService</summary>
    public partial class LibrarianSephirahSentinelServiceClient : grpc::ClientBase<LibrarianSephirahSentinelServiceClient>
    {
      /// <summary>Creates a new client for LibrarianSephirahSentinelService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibrarianSephirahSentinelServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LibrarianSephirahSentinelService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibrarianSephirahSentinelServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibrarianSephirahSentinelServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibrarianSephirahSentinelServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse RefreshToken(global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse RefreshToken(global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RefreshToken, null, options, request);
      }
      /// <summary>
      /// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse> RefreshTokenAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth` Use valid refresh_token and get two new token, a refresh_token can only be used once
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse> RefreshTokenAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RefreshToken, null, options, request);
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse Heartbeat(global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Heartbeat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse Heartbeat(global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Heartbeat, null, options, request);
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse> HeartbeatAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HeartbeatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Tiphereth`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse> HeartbeatAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Heartbeat, null, options, request);
      }
      /// <summary>
      /// `Gebura`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse ReportSentinelInformation(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReportSentinelInformation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse ReportSentinelInformation(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReportSentinelInformation, null, options, request);
      }
      /// <summary>
      /// `Gebura`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse> ReportSentinelInformationAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReportSentinelInformationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse> ReportSentinelInformationAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReportSentinelInformation, null, options, request);
      }
      /// <summary>
      /// `Gebura`
      /// Full update, changes are handled by librarian
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse ReportAppBinaries(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReportAppBinaries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura`
      /// Full update, changes are handled by librarian
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse ReportAppBinaries(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReportAppBinaries, null, options, request);
      }
      /// <summary>
      /// `Gebura`
      /// Full update, changes are handled by librarian
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse> ReportAppBinariesAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReportAppBinariesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `Gebura`
      /// Full update, changes are handled by librarian
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse> ReportAppBinariesAsync(global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReportAppBinaries, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LibrarianSephirahSentinelServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LibrarianSephirahSentinelServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LibrarianSephirahSentinelServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RefreshToken, serviceImpl.RefreshToken)
          .AddMethod(__Method_Heartbeat, serviceImpl.Heartbeat)
          .AddMethod(__Method_ReportSentinelInformation, serviceImpl.ReportSentinelInformation)
          .AddMethod(__Method_ReportAppBinaries, serviceImpl.ReportAppBinaries).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LibrarianSephirahSentinelServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RefreshToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.RefreshTokenResponse>(serviceImpl.RefreshToken));
      serviceBinder.AddMethod(__Method_Heartbeat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.HeartbeatResponse>(serviceImpl.Heartbeat));
      serviceBinder.AddMethod(__Method_ReportSentinelInformation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportSentinelInformationResponse>(serviceImpl.ReportSentinelInformation));
      serviceBinder.AddMethod(__Method_ReportAppBinaries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesRequest, global::TuiHub.Protos.Librarian.Sentinel.V1.ReportAppBinariesResponse>(serviceImpl.ReportAppBinaries));
    }

  }
}
#endregion
