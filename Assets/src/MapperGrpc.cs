// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: librarian/mapper/v1/mapper.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TuiHub.Protos.Librarian.Mapper.V1 {
  /// <summary>
  ///
  /// The main role of Mapper is to encapsulate graph operations.
  /// In Mapper's model:
  /// 1. Each vertex is uniquely determined by `vid` and can only have one `VERTEX_TYPE_type`
  /// 2. Each edge is uniquely determined by `src_vid`, `dst_vid` and `EDGE_TYPE_type`.
  ///    In other words, all edges are directed and edges can be repeated by type difference
  /// 3. Mapper knows the rules for each type of edge and
  ///    will prevent illegal edges from being created
  /// 4. Mapper is not good at handling delete operations, try to avoid delete operations
  /// </summary>
  public static partial class LibrarianMapperService
  {
    static readonly string __ServiceName = "librarian.mapper.v1.LibrarianMapperService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest> __Marshaller_librarian_mapper_v1_InsertVertexRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse> __Marshaller_librarian_mapper_v1_InsertVertexResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest> __Marshaller_librarian_mapper_v1_DeleteVertexRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse> __Marshaller_librarian_mapper_v1_DeleteVertexResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest> __Marshaller_librarian_mapper_v1_UpdateVertexRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse> __Marshaller_librarian_mapper_v1_UpdateVertexResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest> __Marshaller_librarian_mapper_v1_InsertEdgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse> __Marshaller_librarian_mapper_v1_InsertEdgeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest> __Marshaller_librarian_mapper_v1_DeleteEdgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse> __Marshaller_librarian_mapper_v1_DeleteEdgeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest> __Marshaller_librarian_mapper_v1_UpdateEdgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse> __Marshaller_librarian_mapper_v1_UpdateEdgeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest> __Marshaller_librarian_mapper_v1_GoFromVertexRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse> __Marshaller_librarian_mapper_v1_GoFromVertexResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest> __Marshaller_librarian_mapper_v1_FetchEqualVertexRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse> __Marshaller_librarian_mapper_v1_FetchEqualVertexResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest> __Marshaller_librarian_mapper_v1_FetchEqualVertexNeighborRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse> __Marshaller_librarian_mapper_v1_FetchEqualVertexNeighborResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest> __Marshaller_librarian_mapper_v1_FindPathRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse> __Marshaller_librarian_mapper_v1_FindPathResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse> __Method_InsertVertex = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertVertex",
        __Marshaller_librarian_mapper_v1_InsertVertexRequest,
        __Marshaller_librarian_mapper_v1_InsertVertexResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse> __Method_DeleteVertex = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteVertex",
        __Marshaller_librarian_mapper_v1_DeleteVertexRequest,
        __Marshaller_librarian_mapper_v1_DeleteVertexResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse> __Method_UpdateVertex = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateVertex",
        __Marshaller_librarian_mapper_v1_UpdateVertexRequest,
        __Marshaller_librarian_mapper_v1_UpdateVertexResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse> __Method_InsertEdge = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertEdge",
        __Marshaller_librarian_mapper_v1_InsertEdgeRequest,
        __Marshaller_librarian_mapper_v1_InsertEdgeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse> __Method_DeleteEdge = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEdge",
        __Marshaller_librarian_mapper_v1_DeleteEdgeRequest,
        __Marshaller_librarian_mapper_v1_DeleteEdgeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse> __Method_UpdateEdge = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEdge",
        __Marshaller_librarian_mapper_v1_UpdateEdgeRequest,
        __Marshaller_librarian_mapper_v1_UpdateEdgeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse> __Method_GoFromVertex = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GoFromVertex",
        __Marshaller_librarian_mapper_v1_GoFromVertexRequest,
        __Marshaller_librarian_mapper_v1_GoFromVertexResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse> __Method_FetchEqualVertex = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchEqualVertex",
        __Marshaller_librarian_mapper_v1_FetchEqualVertexRequest,
        __Marshaller_librarian_mapper_v1_FetchEqualVertexResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse> __Method_FetchEqualVertexNeighbor = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchEqualVertexNeighbor",
        __Marshaller_librarian_mapper_v1_FetchEqualVertexNeighborRequest,
        __Marshaller_librarian_mapper_v1_FetchEqualVertexNeighborResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse> __Method_FindPath = new grpc::Method<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FindPath",
        __Marshaller_librarian_mapper_v1_FindPathRequest,
        __Marshaller_librarian_mapper_v1_FindPathResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TuiHub.Protos.Librarian.Mapper.V1.MapperReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LibrarianMapperService</summary>
    [grpc::BindServiceMethod(typeof(LibrarianMapperService), "BindService")]
    public abstract partial class LibrarianMapperServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse> InsertVertex(global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse> DeleteVertex(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse> UpdateVertex(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse> InsertEdge(global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse> DeleteEdge(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse> UpdateEdge(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search vertexs from a given start vertex
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse> GoFromVertex(global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get vertexs in the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse> FetchEqualVertex(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get vertexs connected to the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse> FetchEqualVertexNeighbor(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Find path between two given vertexs
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse> FindPath(global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for LibrarianMapperService</summary>
    public partial class LibrarianMapperServiceClient : grpc::ClientBase<LibrarianMapperServiceClient>
    {
      /// <summary>Creates a new client for LibrarianMapperService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibrarianMapperServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for LibrarianMapperService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LibrarianMapperServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibrarianMapperServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LibrarianMapperServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse InsertVertex(global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertVertex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse InsertVertex(global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertVertex, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse> InsertVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertVertexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse> InsertVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertVertex, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse DeleteVertex(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteVertex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse DeleteVertex(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteVertex, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse> DeleteVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteVertexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse> DeleteVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteVertex, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse UpdateVertex(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVertex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse UpdateVertex(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateVertex, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse> UpdateVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVertexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse> UpdateVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateVertex, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse InsertEdge(global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertEdge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse InsertEdge(global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertEdge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse> InsertEdgeAsync(global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertEdgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse> InsertEdgeAsync(global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertEdge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse DeleteEdge(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEdge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse DeleteEdge(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEdge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse> DeleteEdgeAsync(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEdgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse> DeleteEdgeAsync(global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEdge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse UpdateEdge(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEdge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse UpdateEdge(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEdge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse> UpdateEdgeAsync(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEdgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse> UpdateEdgeAsync(global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEdge, null, options, request);
      }
      /// <summary>
      /// Search vertexs from a given start vertex
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse GoFromVertex(global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GoFromVertex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search vertexs from a given start vertex
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse GoFromVertex(global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GoFromVertex, null, options, request);
      }
      /// <summary>
      /// Search vertexs from a given start vertex
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse> GoFromVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GoFromVertexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search vertexs from a given start vertex
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse> GoFromVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GoFromVertex, null, options, request);
      }
      /// <summary>
      /// Get vertexs in the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse FetchEqualVertex(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchEqualVertex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get vertexs in the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse FetchEqualVertex(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchEqualVertex, null, options, request);
      }
      /// <summary>
      /// Get vertexs in the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse> FetchEqualVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchEqualVertexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get vertexs in the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse> FetchEqualVertexAsync(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchEqualVertex, null, options, request);
      }
      /// <summary>
      /// Get vertexs connected to the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse FetchEqualVertexNeighbor(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchEqualVertexNeighbor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get vertexs connected to the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse FetchEqualVertexNeighbor(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchEqualVertexNeighbor, null, options, request);
      }
      /// <summary>
      /// Get vertexs connected to the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse> FetchEqualVertexNeighborAsync(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchEqualVertexNeighborAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get vertexs connected to the connected subgraph of the `Equal` type edge where the given vertex is located
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse> FetchEqualVertexNeighborAsync(global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchEqualVertexNeighbor, null, options, request);
      }
      /// <summary>
      /// Find path between two given vertexs
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse FindPath(global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FindPath(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Find path between two given vertexs
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse FindPath(global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FindPath, null, options, request);
      }
      /// <summary>
      /// Find path between two given vertexs
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse> FindPathAsync(global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FindPathAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Find path between two given vertexs
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse> FindPathAsync(global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FindPath, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LibrarianMapperServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LibrarianMapperServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LibrarianMapperServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_InsertVertex, serviceImpl.InsertVertex)
          .AddMethod(__Method_DeleteVertex, serviceImpl.DeleteVertex)
          .AddMethod(__Method_UpdateVertex, serviceImpl.UpdateVertex)
          .AddMethod(__Method_InsertEdge, serviceImpl.InsertEdge)
          .AddMethod(__Method_DeleteEdge, serviceImpl.DeleteEdge)
          .AddMethod(__Method_UpdateEdge, serviceImpl.UpdateEdge)
          .AddMethod(__Method_GoFromVertex, serviceImpl.GoFromVertex)
          .AddMethod(__Method_FetchEqualVertex, serviceImpl.FetchEqualVertex)
          .AddMethod(__Method_FetchEqualVertexNeighbor, serviceImpl.FetchEqualVertexNeighbor)
          .AddMethod(__Method_FindPath, serviceImpl.FindPath).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LibrarianMapperServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_InsertVertex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.InsertVertexResponse>(serviceImpl.InsertVertex));
      serviceBinder.AddMethod(__Method_DeleteVertex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteVertexResponse>(serviceImpl.DeleteVertex));
      serviceBinder.AddMethod(__Method_UpdateVertex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateVertexResponse>(serviceImpl.UpdateVertex));
      serviceBinder.AddMethod(__Method_InsertEdge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.InsertEdgeResponse>(serviceImpl.InsertEdge));
      serviceBinder.AddMethod(__Method_DeleteEdge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.DeleteEdgeResponse>(serviceImpl.DeleteEdge));
      serviceBinder.AddMethod(__Method_UpdateEdge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeRequest, global::TuiHub.Protos.Librarian.Mapper.V1.UpdateEdgeResponse>(serviceImpl.UpdateEdge));
      serviceBinder.AddMethod(__Method_GoFromVertex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.GoFromVertexResponse>(serviceImpl.GoFromVertex));
      serviceBinder.AddMethod(__Method_FetchEqualVertex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexResponse>(serviceImpl.FetchEqualVertex));
      serviceBinder.AddMethod(__Method_FetchEqualVertexNeighbor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FetchEqualVertexNeighborResponse>(serviceImpl.FetchEqualVertexNeighbor));
      serviceBinder.AddMethod(__Method_FindPath, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::TuiHub.Protos.Librarian.Mapper.V1.FindPathRequest, global::TuiHub.Protos.Librarian.Mapper.V1.FindPathResponse>(serviceImpl.FindPath));
    }

  }
}
#endregion
